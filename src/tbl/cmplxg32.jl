chevieset(:G32, :GeneratingRoots, [[0, 0, -1, 0], E(4) // root(3) * [1, 1, 1, 0], [0, 1, 0, 0], E(4) // root(3) * [1, -1, 0, -1]])
chevieset(:G32, :EigenvaluesGeneratingReflections, [1 // 3, 1 // 3, 1 // 3, 1 // 3])
chevieset(:G32, :HyperplaneRepresentatives, [1])
chevieset(:G32, :BraidRelations, [[[1, 2, 1], [2, 1, 2]], [[2, 3, 2], [3, 2, 3]], [[3, 4, 3], [4, 3, 4]], [[1, 3], [3, 1]], [[1, 4], [4, 1]], [[2, 4], [4, 2]]])
chevieset(:G32, :Size, 155520)
chevieset(:G32, :ReflectionDegrees, [12, 18, 24, 30])
chevieset(:G32, :NrConjugacyClasses, 102)
chevieset(:G32, :ParabolicRepresentatives, function (s,)
        local t
        t = [[[]], [[1]], [[1, 2], [1, 3]], [1:3, [1, 3, 4]], [1:4]]
        return t[s + 1]
    end)
chevieset(:G32, :ClassNames, [".", "1", "12", "31", "11", "121", "421", "123", "131", "1232", "aa1211211", "4311", "c", "3131", "1211211", "4211", "42211", "cc", "a32", "d", "aaaa12", "44211", "1232z", "aa123", "a32zzzzz", "aa121121", "a", "ccc", "442211", "dd14", "211211", "121zzzzz", "aaaa1211211", "zd", "cccc", "4211211", "a32z", "11434z", "a32zzz", "aa13", "dd1", "zzc", "121z", "aa12", "1434zzzzz", "1232zzzzz", "44211211", "1zzzzz", "1434z", "1232zzzz", "ddd", "11434zzzzz", "3131z", "11z", "1232zzz", "131zzzzz", "aa1", "zdd1", "a32zzzz", "dd", "131z", "zzdd", "1434zz", "1232zz", "aa", "1211214z", "zc", "12112114zz", "aaaa", "131zzz", "1134z", "a32zz", "12112144z", "1434zzz", "121zz", "11434zzzz", "121zzzz", "11434zzz", "az", "1211214zz", "121121z", "124z", "12zz", "zdd", "11zzzz", "12z", "121121zz", "13z", "124zz", "121zzz", "11zzzzz", "13zz", "1z", "z", "13zzz", "11zzz", "1zz", "1zzz", "zzzzz", "zzz", "zz", "zzzz"])
chevieset(:G32, :WordsClassRepresentatives, map((x->begin
                StringToDigits(Replace(x, ".", "", "z", "ccccc", "c", "4321", "d", "12432", "a", "121321"))
            end), chevieget(:G32, :ClassNames)))
chevieset(:G32, :PowerMaps, [nothing, [1, 5, 2, 14, 2, 31, 9, 27, 9, 19, 40, 4, 18, 4, 5, 47, 14, 35, 10, 60, 57, 36, 72, 26, 50, 69, 65, 67, 9, 53, 1, 81, 4, 62, 18, 5, 64, 80, 10, 57, 88, 35, 87, 14, 86, 59, 2, 85, 26, 72, 84, 27, 92, 97, 19, 40, 40, 95, 64, 94, 57, 99, 86, 59, 69, 65, 67, 92, 65, 9, 92, 50, 97, 47, 81, 80, 87, 36, 85, 85, 101, 57, 69, 100, 97, 97, 102, 4, 40, 31, 69, 92, 65, 101, 14, 2, 85, 5, 102, 1, 102, 101], [1, 1, 31, 1, 1, 6, 31, 6, 1, 65, 31, 31, 28, 1, 31, 6, 31, 67, 69, 51, 31, 6, 91, 6, 93, 31, 31, 28, 31, 84, 31, 90, 31, 51, 67, 31, 93, 90, 93, 1, 84, 28, 90, 31, 90, 91, 31, 100, 90, 65, 51, 90, 100, 100, 91, 100, 1, 84, 69, 84, 100, 84, 6, 65, 1, 31, 67, 31, 1, 100, 31, 69, 31, 90, 6, 6, 6, 90, 31, 31, 31, 31, 31, 84, 1, 31, 31, 100, 31, 90, 100, 1, 100, 100, 100, 100, 1, 100, 100, 100, 1, 1], nothing, [1, 5, 15, 14, 2, 6, 29, 24, 9, 19, 21, 17, 94, 4, 3, 22, 12, 101, 10, 34, 11, 16, 25, 8, 23, 27, 26, 100, 7, 30, 31, 43, 44, 20, 102, 47, 46, 45, 55, 57, 58, 99, 32, 33, 38, 37, 36, 54, 52, 72, 51, 49, 53, 48, 39, 61, 40, 41, 64, 62, 56, 60, 76, 59, 69, 83, 1, 71, 65, 70, 68, 50, 79, 78, 77, 63, 75, 74, 73, 86, 87, 89, 66, 84, 97, 80, 81, 95, 82, 90, 93, 92, 91, 99, 88, 98, 85, 96, 94, 100, 102, 101], nothing, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], nothing, nothing, nothing, [1, 5, 15, 14, 2, 6, 29, 24, 9, 19, 21, 17, 42, 4, 3, 22, 12, 35, 10, 34, 11, 16, 25, 8, 23, 27, 26, 28, 7, 30, 31, 43, 44, 20, 18, 47, 46, 45, 55, 57, 58, 13, 32, 33, 38, 37, 36, 54, 52, 72, 51, 49, 53, 48, 39, 61, 40, 41, 64, 62, 56, 60, 76, 59, 69, 83, 67, 71, 65, 70, 68, 50, 79, 78, 77, 63, 75, 74, 73, 86, 87, 89, 66, 84, 97, 80, 81, 95, 82, 90, 93, 92, 91, 99, 88, 98, 85, 96, 94, 100, 102, 101], nothing, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], nothing, nothing, nothing, [1, 5, 15, 14, 2, 6, 29, 24, 9, 19, 21, 17, 42, 4, 3, 22, 12, 35, 10, 34, 11, 16, 25, 8, 23, 27, 26, 28, 7, 30, 31, 43, 44, 20, 18, 47, 46, 45, 55, 57, 58, 13, 32, 33, 38, 37, 36, 54, 52, 72, 51, 49, 53, 48, 39, 61, 40, 41, 64, 62, 56, 60, 76, 59, 69, 83, 67, 71, 65, 70, 68, 50, 79, 78, 77, 63, 75, 74, 73, 86, 87, 89, 66, 84, 97, 80, 81, 95, 82, 90, 93, 92, 91, 99, 88, 98, 85, 96, 94, 100, 102, 101], nothing, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], nothing, nothing, nothing, [1, 5, 15, 14, 2, 6, 29, 24, 9, 19, 21, 17, 42, 4, 3, 22, 12, 35, 10, 34, 11, 16, 25, 8, 23, 27, 26, 28, 7, 30, 31, 43, 44, 20, 18, 47, 46, 45, 55, 57, 58, 13, 32, 33, 38, 37, 36, 54, 52, 72, 51, 49, 53, 48, 39, 61, 40, 41, 64, 62, 56, 60, 76, 59, 69, 83, 67, 71, 65, 70, 68, 50, 79, 78, 77, 63, 75, 74, 73, 86, 87, 89, 66, 84, 97, 80, 81, 95, 82, 90, 93, 92, 91, 99, 88, 98, 85, 96, 94, 100, 102, 101], nothing, nothing, nothing, nothing, nothing, [1, 5, 15, 14, 2, 6, 29, 24, 9, 19, 21, 17, 42, 4, 3, 22, 12, 35, 10, 34, 11, 16, 25, 8, 23, 27, 26, 28, 7, 30, 31, 43, 44, 20, 18, 47, 46, 45, 55, 57, 58, 13, 32, 33, 38, 37, 36, 54, 52, 72, 51, 49, 53, 48, 39, 61, 40, 41, 64, 62, 56, 60, 76, 59, 69, 83, 67, 71, 65, 70, 68, 50, 79, 78, 77, 63, 75, 74, 73, 86, 87, 89, 66, 84, 97, 80, 81, 95, 82, 90, 93, 92, 91, 99, 88, 98, 85, 96, 94, 100, 102, 101]])
chevieset(:G32, :ClassInfo, Dict{Symbol, Any}(:classtext => chevieget(:G32, :WordsClassRepresentatives), :classnames => chevieget(:G32, :ClassNames), :classparams => chevieget(:G32, :ClassNames), :orders => [1, 3, 6, 3, 3, 4, 6, 12, 3, 9, 6, 6, 30, 3, 6, 12, 6, 15, 9, 24, 6, 12, 18, 12, 18, 6, 6, 10, 6, 12, 2, 12, 6, 24, 15, 6, 18, 12, 18, 3, 12, 30, 12, 6, 12, 18, 6, 6, 12, 9, 8, 12, 6, 6, 18, 6, 3, 12, 9, 12, 6, 12, 12, 9, 3, 6, 5, 6, 3, 6, 6, 9, 6, 12, 12, 12, 12, 12, 6, 6, 6, 6, 6, 4, 3, 6, 6, 6, 6, 4, 6, 3, 6, 6, 6, 6, 3, 6, 6, 2, 3, 3], :classes => [1, 40, 360, 240, 40, 540, 1440, 2160, 480, 2880, 1440, 1440, 5184, 240, 360, 2160, 1440, 5184, 2880, 6480, 1440, 2160, 2880, 2160, 2880, 360, 360, 5184, 1440, 4320, 90, 540, 1440, 6480, 5184, 360, 2880, 2160, 2880, 480, 4320, 5184, 540, 1440, 2160, 2880, 360, 40, 2160, 2880, 6480, 2160, 240, 40, 2880, 480, 480, 4320, 2880, 540, 480, 540, 2160, 2880, 40, 360, 5184, 1440, 40, 480, 1440, 2880, 360, 2160, 540, 2160, 540, 2160, 360, 360, 90, 1440, 360, 540, 40, 360, 90, 240, 1440, 540, 40, 240, 40, 1, 240, 40, 40, 40, 1, 1, 1, 1]))
chevieset(:G32, :CharInfo, function ()
        local res
        res = Dict{Symbol, Any}(:charparams => [[1, 0], [1, 80], [1, 40], [4, 61], [4, 21], [4, 11], [4, 41], [4, 51], [4, 1], [5, 36], [5, 44], [5, 4], [5, 12], [5, 52], [5, 20], [6, 48], [6, 8], [6, 28], [10, 30], [10, 2], [10, 34], [10, 42], [10, 10], [10, 14], [15, 24], [15, 6], [15, 8], [15, 16], [15, 38], [15, 22], [20, 33], [20, 12], [20, 13], [20, 9, 1], [20, 35], [20, 29, 1], [20, 3], [20, 25], [20, 31], [20, 9, 2], [20, 17], [20, 29, 2], [20, 21], [20, 7], [20, 19], [20, 5], [20, 20], [20, 16], [24, 6], [24, 26], [24, 16], [30, 12, 2], [30, 12, 1], [30, 8], [30, 28], [30, 24], [30, 4], [30, 20, 2], [30, 20, 1], [30, 16], [36, 7], [36, 27], [36, 17], [36, 5], [36, 15], [36, 25], [40, 24], [40, 14], [40, 10], [40, 18], [40, 22], [40, 8], [45, 6], [45, 14], [45, 22], [45, 18], [45, 10], [45, 26], [60, 15, 2], [60, 12], [60, 7], [60, 15, 1], [60, 17], [60, 11, 1], [60, 9], [60, 19], [60, 13], [60, 11, 2], [60, 20], [60, 16], [64, 18], [64, 21], [64, 8], [64, 16], [64, 13], [64, 11], [80, 9], [80, 13], [80, 17], [81, 12], [81, 14], [81, 10]], :hgal => perm"( 93, 96)( 94, 95)(100,102,101)", :extRefl => [1, 9, 17, 5, 3])
        res[:b] = map((x->begin
                        x[2]
                    end), res[:charparams])
        res[:charnames] = map(exceptioCharName, res[:charparams])
        return res
    end)
chevieset(:G32, :HeckeCharTable, function (para, root)
        local u, v, w, f1, f4, f5, f6, f10, f15, f15b, f20a, f20b, f20c, f20d, f24, f30a, f30b, f36, f40, f45, f60a, f60b, f60c, f64, f80, f81, res, a, b, c, d, e, f
        a = 1
        b = 1
        c = 1
        d = E(3)
        e = 1
        f = 1
        u = (para[1])[1]
        v = (para[1])[2]
        w = (para[1])[3]
        f1 = (u->begin
                    map((i->begin
                                u ^ length(i)
                            end), chevieget(:G32, :WordsClassRepresentatives))
                end)
        f4(v, w) = begin
                return [4, v + 3w, w * (2w + v), 2 * w * (w + v), v ^ 2 + 3 * w ^ 2, 2 * w ^ 3, w ^ 2 * (w + 2v), w ^ 2 * (w + v), w * (v * w + v ^ 2 + 2 * w ^ 2), w ^ 4, -(w ^ 11) * (-w + v) * (w ^ 7 + v * w ^ 6 + w ^ 5 * v ^ 2 + v ^ 3 * w ^ 4 + 2 * v ^ 4 * w ^ 3 + 2 * w ^ 2 * v ^ 5 + 2 * w * v ^ 6 + v ^ 7), w ^ 2 * (v * w + v ^ 2 + w ^ 2), v * w ^ 3, 2 * w ^ 2 * (v ^ 2 + w ^ 2), -(w ^ 3) * (-w + v) * (2 * w ^ 3 + 2 * v * w ^ 2 + 2 * v ^ 2 * w + v ^ 3), w ^ 3 * (w + v), -(w ^ 2) * (-w + v) * (v * w + v ^ 2 + w ^ 2), -(v ^ 2) * w ^ 6, w ^ 8, 0, w ^ 17 * (v ^ 8 * w + v ^ 9 + w ^ 9), w ^ 3 * (v ^ 2 + w ^ 2), -(v ^ 5) * w ^ 19, w ^ 10 * (w + v) * ((((v ^ 4 - w * v ^ 3) + v ^ 2 * w ^ 2) - v * w ^ 3) + w ^ 4), -(v ^ 25) * w ^ 83, -(w ^ 11) * (-w + v) * (w ^ 6 + v * w ^ 5 + v ^ 2 * w ^ 4 + v ^ 3 * w ^ 3 + 2 * w ^ 2 * v ^ 4 + 2 * w * v ^ 5 + 2 * v ^ 6), -(w ^ 4) * (-w + v) * (w + v), v ^ 3 * w ^ 9, -(w ^ 3) * (-w + v) * (v ^ 2 + w ^ 2), 0, -2 * w ^ 3 * (-w + v) * (v * w + v ^ 2 + w ^ 2), -2 * v ^ 25 * w ^ 78, -(w ^ 19) * (-w + v) * (v * w + v ^ 2 + w ^ 2) * (w ^ 9 + w ^ 6 * v ^ 3 + w ^ 3 * v ^ 6 + v ^ 8 * w + v ^ 9), 0, -(v ^ 4) * w ^ 12, -(w ^ 4) * (-w + v) * (w ^ 2 + 2 * v * w + 2 * v ^ 2), -(v ^ 5) * w ^ 23, -(v ^ 5) * w ^ 18 * (v ^ 2 + w ^ 2), -(v ^ 15) * w ^ 53, w ^ 9 * (w + v) * ((((w ^ 4 - v * w ^ 3) + v ^ 2 * w ^ 2) - w * v ^ 3) + 2 * v ^ 4), 0, v ^ 11 * w ^ 33, -2 * v ^ 5 * w ^ 18, w ^ 9 * (v * w + v ^ 2 + w ^ 2) * ((w ^ 3 - v * w ^ 2) + v ^ 3), -(v ^ 25) * w ^ 78 * (w + v), -(v ^ 25) * w ^ 79, -(w ^ 5) * (-w + v) * (w ^ 2 + v * w + 2 * v ^ 2), -(v ^ 25) * w ^ 75 * (v + 3w), -(v ^ 5) * w ^ 18 * (w + v), v ^ 20 * w ^ 64, 0, -(v ^ 25) * w ^ 78 * (v ^ 2 + w ^ 2), -2 * v ^ 5 * w ^ 17 * (v ^ 2 + w ^ 2), -(v ^ 5) * w ^ 15 * (v ^ 2 + 3 * w ^ 2), -(v ^ 15) * w ^ 49, -(v ^ 25) * w ^ 76 * (v * w + v ^ 2 + 2 * w ^ 2), w ^ 8 * (2 * v ^ 4 * w + v ^ 5 + w ^ 5), 0, v ^ 20 * w ^ 68, 0, -(v ^ 5) * w ^ 16 * (v * w + v ^ 2 + 2 * w ^ 2), 0, v ^ 10 * w ^ 33 * (w + v), v ^ 10 * w ^ 34, w ^ 8 * (3 * v ^ 4 + w ^ 4), v ^ 5 * w ^ 19 * (-w + v) * (w ^ 2 + 2 * v * w + 2 * v ^ 2), -(v ^ 6) * w ^ 18, -(v ^ 10) * w ^ 34 * (-w + v) * (w + v) * (v * w + v ^ 2 + w ^ 2), w ^ 16 * (3 * v ^ 8 + w ^ 8), -(v ^ 15) * w ^ 46 * (v * w + v ^ 2 + 2 * w ^ 2), -(v ^ 5) * w ^ 17 * (v * w + v ^ 2 + w ^ 2), v ^ 10 * w ^ 38, v ^ 5 * w ^ 20 * (-w + v) * (w ^ 2 + v * w + 2 * v ^ 2), -(v ^ 15) * w ^ 48 * (w + v), 2 * v ^ 10 * w ^ 33, v ^ 20 * w ^ 63 * (v ^ 2 + w ^ 2), 2 * v ^ 20 * w ^ 63, -(v ^ 15) * w ^ 48 * (v ^ 2 + w ^ 2), v ^ 5 * w ^ 19 * (-w + v) * (w + v), -(v ^ 10) * w ^ 34 * (-w + v) * (w ^ 2 + 2 * v * w + 2 * v ^ 2), 2 * v ^ 5 * w ^ 18 * (-w + v) * (v * w + v ^ 2 + w ^ 2), -(v ^ 5) * w ^ 17 * (w + 2v), v ^ 10 * w ^ 31 * (2w + v), 0, v ^ 20 * w ^ 60 * (v ^ 2 + 3 * w ^ 2), -(v ^ 5) * w ^ 16 * (2w + v), -2 * v ^ 10 * w ^ 33 * (-w + v) * (v * w + v ^ 2 + w ^ 2), -2 * v ^ 5 * w ^ 16 * (w + v), v ^ 10 * w ^ 32 * (w + 2v), -2 * v ^ 15 * w ^ 48, -(v ^ 25) * w ^ 75 * (v ^ 2 + 3 * w ^ 2), 2 * v ^ 10 * w ^ 31 * (w + v), -(v ^ 5) * w ^ 15 * (v + 3w), -4 * v ^ 5 * w ^ 15, -2 * v ^ 15 * w ^ 46 * (w + v), -(v ^ 15) * w ^ 45 * (v ^ 2 + 3 * w ^ 2), v ^ 10 * w ^ 30 * (v + 3w), -(v ^ 15) * w ^ 45 * (v + 3w), -4 * v ^ 25 * w ^ 75, -4 * v ^ 15 * w ^ 45, 4 * v ^ 10 * w ^ 30, 4 * v ^ 20 * w ^ 60]
            end
        f5(u, v, w) = begin
                return [5, 2u + 3w, w * (2u + w), 2 * u * w + u ^ 2 + 2 * w ^ 2, 2 * u ^ 2 + 3 * w ^ 2, w ^ 3, w * (u * w + u ^ 2 + w ^ 2), u * w ^ 2, u * w ^ 2 + u ^ 2 * w + u ^ 3 + 2 * w ^ 3, -(u ^ 2) * w ^ 2, u ^ 4 * w ^ 9 * (u * w + u ^ 2 + w ^ 2) * ((-(u ^ 4) - u * w ^ 3) + w ^ 4), w * (u * w ^ 2 + u ^ 3 + w ^ 3), 0, 2 * u ^ 2 * w ^ 2 + u ^ 4 + 2 * w ^ 4, w ^ 3 * ((-2 * u ^ 3 * w - 2 * u ^ 4) + w ^ 4), w ^ 4, w * ((((-u * w ^ 3 - u ^ 2 * w ^ 2) - u ^ 3 * w) - u ^ 4) + w ^ 4), 0, -(u ^ 4) * w ^ 4, -(u ^ 2) * w ^ 3, u ^ 8 * w ^ 13 * (u * w + u ^ 2 + w ^ 2) * ((u ^ 3 - u ^ 2 * w) + w ^ 3), w ^ 5, -(u ^ 10) * w ^ 14, u ^ 5 * w ^ 10, -(u ^ 44) * w ^ 64, u ^ 4 * w ^ 9 * ((w ^ 5 - 2 * u ^ 3 * w ^ 2) - 2 * u ^ 5), -(w ^ 3) * u ^ 2 * (2u + w), 0, w * (u * w + u ^ 2 + w ^ 2) * (((-(u ^ 3) + u ^ 2 * w) - 2 * u * w ^ 2) + w ^ 3), u ^ 6 * w ^ 6, w ^ 3 * (-4 * u ^ 3 + w ^ 3), u ^ 40 * w ^ 63, u ^ 8 * w ^ 15 * ((-(u ^ 3) - u ^ 2 * w) + w ^ 3) * (u ^ 5 + u ^ 2 * w ^ 3 + w ^ 5), -(u ^ 10) * w ^ 15, 0, w ^ 3 * ((-2 * u ^ 3 * w - 2 * u ^ 4) + w ^ 4), -(u ^ 12) * w ^ 16, u ^ 8 * w ^ 17, -(u ^ 28) * w ^ 40, u ^ 4 * w ^ 6 * (w ^ 4 + 2 * u * w ^ 3 + u ^ 2 * w ^ 2 + u ^ 4), u ^ 5 * w ^ 6, 0, u ^ 8 * w ^ 15, w ^ 7 * u ^ 4 * (u * w ^ 2 + u ^ 3 + w ^ 3), u ^ 40 * w ^ 64, -(u ^ 42) * w ^ 62, w ^ 3 * ((w ^ 5 - 2 * u ^ 3 * w ^ 2) - 2 * u ^ 5), w ^ 60 * u ^ 40 * (2u + 3w), u ^ 8 * w ^ 16, -(u ^ 34) * w ^ 50, -(u ^ 6) * w ^ 9, u ^ 40 * w ^ 65, u ^ 8 * w ^ 12 * (2 * u ^ 2 * w ^ 2 + u ^ 4 + 2 * w ^ 4), u ^ 8 * w ^ 12 * (2 * u ^ 2 + 3 * w ^ 2), -(u ^ 26) * w ^ 38, u ^ 40 * w ^ 60 * (u * w ^ 2 + u ^ 2 * w + u ^ 3 + 2 * w ^ 3), u ^ 4 * w ^ 6 * (u * w ^ 2 + u ^ 2 * w + u ^ 3 + 2 * w ^ 3), u ^ 13 * w ^ 18, -(u ^ 36) * w ^ 52, u ^ 4 * w ^ 6, u ^ 8 * w ^ 12 * (u * w ^ 2 + u ^ 2 * w + u ^ 3 + 2 * w ^ 3), u ^ 20 * w ^ 30, u ^ 16 * w ^ 28, -(u ^ 18) * w ^ 26, u ^ 4 * w ^ 6 * (2 * u ^ 2 + 3 * w ^ 2), u ^ 8 * w ^ 15 * ((-2 * u ^ 3 * w - 2 * u ^ 4) + w ^ 4), 0, u ^ 16 * w ^ 27 * (((w ^ 5 - u ^ 3 * w ^ 2) - 2 * u ^ 4 * w) - u ^ 5), u ^ 8 * w ^ 12 * (3 * w ^ 4 + 2 * u ^ 4), u ^ 24 * w ^ 36 * (u * w ^ 2 + u ^ 2 * w + u ^ 3 + 2 * w ^ 3), u ^ 8 * w ^ 13 * (u * w ^ 2 + u ^ 3 + w ^ 3), -(u ^ 20) * w ^ 28, u ^ 8 * w ^ 15 * ((w ^ 5 - 2 * u ^ 3 * w ^ 2) - 2 * u ^ 5), u ^ 24 * w ^ 40, u ^ 16 * w ^ 27, u ^ 32 * w ^ 53, u ^ 32 * w ^ 51, u ^ 24 * w ^ 41, -(w ^ 15) * u ^ 10 * (2u + w), u ^ 16 * w ^ 27 * ((-2 * u ^ 3 * w - 2 * u ^ 4) + w ^ 4), u ^ 8 * w ^ 15 * (-4 * u ^ 3 + w ^ 3), u ^ 8 * w ^ 13 * (u * w + u ^ 2 + w ^ 2), w ^ 25 * u ^ 16 * (2u + w), u ^ 12 * w ^ 18, u ^ 32 * w ^ 48 * (2 * u ^ 2 + 3 * w ^ 2), w ^ 13 * u ^ 8 * (2u + w), u ^ 16 * w ^ 27 * (-4 * u ^ 3 + w ^ 3), u ^ 8 * w ^ 12 * (2 * u * w + u ^ 2 + 2 * w ^ 2), u ^ 16 * w ^ 25 * (u * w + u ^ 2 + w ^ 2), u ^ 24 * w ^ 39, u ^ 40 * w ^ 60 * (2 * u ^ 2 + 3 * w ^ 2), u ^ 16 * w ^ 24 * (2 * u * w + u ^ 2 + 2 * w ^ 2), w ^ 12 * u ^ 8 * (2u + 3w), 5 * u ^ 8 * w ^ 12, u ^ 24 * w ^ 36 * (2 * u * w + u ^ 2 + 2 * w ^ 2), u ^ 24 * w ^ 36 * (2 * u ^ 2 + 3 * w ^ 2), w ^ 24 * u ^ 16 * (2u + 3w), w ^ 36 * u ^ 24 * (2u + 3w), 5 * u ^ 40 * w ^ 60, 5 * u ^ 24 * w ^ 36, 5 * u ^ 16 * w ^ 24, 5 * u ^ 32 * w ^ 48]
            end
        f6(v, w) = begin
                return [6, 3v + 3w, (w + v) ^ 2, 4 * v * w + v ^ 2 + w ^ 2, 3 * v ^ 2 + 3 * w ^ 2, (w + v) * ((v ^ 2 - v * w) + w ^ 2), 2 * v * w * (w + v), v * w * (w + v), (w + v) * (v * w + v ^ 2 + w ^ 2), 0, w ^ 4 * v ^ 4 * (w + v) * ((((((((((w ^ 10 - v * w ^ 9) + v ^ 2 * w ^ 8) - 2 * v ^ 3 * w ^ 7) + v ^ 4 * w ^ 6) - v ^ 5 * w ^ 5) + v ^ 6 * w ^ 4) - 2 * v ^ 7 * w ^ 3) + v ^ 8 * w ^ 2) - v ^ 9 * w) + v ^ 10), v * w * (w + v) ^ 2, v ^ 2 * w ^ 2, 4 * v ^ 2 * w ^ 2 + v ^ 4 + w ^ 4, (w + v) * (-(w ^ 3) + v * w ^ 2 + v ^ 3) * ((-(w ^ 3) - v ^ 2 * w) + v ^ 3), v * w * (v ^ 2 + w ^ 2), -(v ^ 2) * w ^ 2 * (w + v), w ^ 4 * v ^ 4, 0, 0, v ^ 8 * w ^ 8 * ((v ^ 2 - v * w) + w ^ 2) * ((w ^ 6 - v ^ 3 * w ^ 3) + v ^ 6) * (w + v) ^ 2, v ^ 2 * w ^ 2 * (w + v), 0, v ^ 5 * w ^ 5 * (w + v) * ((((v ^ 4 - w * v ^ 3) + v ^ 2 * w ^ 2) - v * w ^ 3) + w ^ 4), 0, w ^ 4 * v ^ 4 * (((w ^ 10 - 2 * v ^ 3 * w ^ 7) - 2 * v ^ 7 * w ^ 3) + v ^ 10), -(v ^ 2) * w ^ 2 * (v ^ 2 + w ^ 2), v ^ 6 * w ^ 6, -v * w * (v ^ 2 + w ^ 2) * ((v ^ 2 - v * w) + w ^ 2), v ^ 5 * w ^ 7 + v ^ 7 * w ^ 5, -4 * v ^ 3 * w ^ 3 + v ^ 6 + w ^ 6, v ^ 50 * w ^ 50 * (w + v) * ((v ^ 2 - v * w) + w ^ 2), v ^ 8 * w ^ 8 * (w + v) * ((((((((((((((w ^ 14 - w ^ 13 * v) + w ^ 12 * v ^ 2) - 2 * v ^ 3 * w ^ 11) + v ^ 4 * w ^ 10) - v ^ 5 * w ^ 9) + w ^ 8 * v ^ 6) - v ^ 7 * w ^ 7) + w ^ 6 * v ^ 8) - v ^ 9 * w ^ 5) + v ^ 10 * w ^ 4) - 2 * w ^ 3 * v ^ 11) + w ^ 2 * v ^ 12) - w * v ^ 13) + v ^ 14), 0, v ^ 8 * w ^ 8, v * w * (w + v) * ((((w ^ 4 - v * w ^ 3) - v ^ 2 * w ^ 2) - w * v ^ 3) + v ^ 4), 0, v ^ 12 * w ^ 12 * (w + v), 0, w ^ 4 * v ^ 4 * (v * w + v ^ 2 + w ^ 2) * (((w ^ 4 + v * w ^ 3) - 2 * v ^ 2 * w ^ 2) + w * v ^ 3 + v ^ 4), v ^ 5 * w ^ 5 * (v + w), v ^ 22 * w ^ 22, v ^ 10 * w ^ 10 * (w + v) * ((v ^ 2 - v * w) + w ^ 2), w ^ 4 * v ^ 4 * ((((v ^ 4 - w * v ^ 3) + v ^ 2 * w ^ 2) - v * w ^ 3) + w ^ 4) * (w + v) ^ 2, v ^ 51 * w ^ 51 * (v ^ 2 + w ^ 2), 0, v ^ 2 * w ^ 2 * (((w ^ 4 - 2 * v * w ^ 3) - 2 * w * v ^ 3) + v ^ 4), 3 * v ^ 50 * w ^ 50 * (w + v), v ^ 11 * w ^ 11 * (v ^ 2 + w ^ 2), 0, 0, v ^ 52 * w ^ 52 * (w + v), v ^ 10 * w ^ 10 * (4 * v ^ 2 * w ^ 2 + v ^ 4 + w ^ 4), 3 * v ^ 10 * w ^ 10 * (v ^ 2 + w ^ 2), 0, v ^ 50 * w ^ 50 * (w + v) * (v * w + v ^ 2 + w ^ 2), w ^ 4 * v ^ 4 * (w + v) * (v * w + v ^ 2 + w ^ 2) * ((2 * w ^ 2 - 3 * v * w) + 2 * v ^ 2), v ^ 15 * w ^ 15 * (v + w), 0, 2 * v ^ 5 * w ^ 5, v ^ 10 * w ^ 10 * (w + v) * (v * w + v ^ 2 + w ^ 2), 2 * v ^ 25 * w ^ 25, v ^ 21 * w ^ 21 * (v ^ 2 + w ^ 2), 0, 3 * w ^ 4 * v ^ 4 * (w ^ 4 + v ^ 4), v ^ 11 * w ^ 11 * (w + v) * ((((w ^ 4 - v * w ^ 3) - v ^ 2 * w ^ 2) - w * v ^ 3) + v ^ 4), v ^ 12 * w ^ 12, v ^ 21 * w ^ 21 * ((((w ^ 6 - v ^ 2 * w ^ 4) - 2 * v ^ 3 * w ^ 3) - w ^ 2 * v ^ 4) + v ^ 6), 3 * v ^ 8 * w ^ 8 * (w ^ 8 + v ^ 8), v ^ 30 * w ^ 30 * (w + v) * (v * w + v ^ 2 + w ^ 2), v ^ 11 * w ^ 11 * (w + v) ^ 2, 0, v ^ 12 * w ^ 12 * (((w ^ 4 - 2 * v * w ^ 3) - 2 * w * v ^ 3) + v ^ 4), v ^ 31 * w ^ 31 * (v ^ 2 + w ^ 2), v ^ 20 * w ^ 20 * (w + v) * ((v ^ 2 - v * w) + w ^ 2), v ^ 42 * w ^ 42 * (w + v), v ^ 40 * w ^ 40 * (w + v) * ((v ^ 2 - v * w) + w ^ 2), v ^ 32 * w ^ 32 * (w + v), -(v ^ 12) * w ^ 12 * (v ^ 2 + w ^ 2), v ^ 21 * w ^ 21 * (w + v) * ((((w ^ 4 - v * w ^ 3) - v ^ 2 * w ^ 2) - w * v ^ 3) + v ^ 4), v ^ 10 * w ^ 10 * (-4 * v ^ 3 * w ^ 3 + v ^ 6 + w ^ 6), 2 * v ^ 11 * w ^ 11 * (w + v), v ^ 20 * w ^ 20 * (w + v) ^ 2, 2 * v ^ 15 * w ^ 15, 3 * v ^ 40 * w ^ 40 * (v ^ 2 + w ^ 2), v ^ 10 * w ^ 10 * (w + v) ^ 2, v ^ 20 * w ^ 20 * (-4 * v ^ 3 * w ^ 3 + v ^ 6 + w ^ 6), v ^ 10 * w ^ 10 * (4 * v * w + v ^ 2 + w ^ 2), 2 * v ^ 21 * w ^ 21 * (w + v), v ^ 30 * w ^ 30 * (w + v) * ((v ^ 2 - v * w) + w ^ 2), 3 * v ^ 50 * w ^ 50 * (v ^ 2 + w ^ 2), v ^ 20 * w ^ 20 * (4 * v * w + v ^ 2 + w ^ 2), 3 * v ^ 10 * w ^ 10 * (w + v), 6 * v ^ 10 * w ^ 10, v ^ 30 * w ^ 30 * (4 * v * w + v ^ 2 + w ^ 2), 3 * v ^ 30 * w ^ 30 * (v ^ 2 + w ^ 2), 3 * v ^ 20 * w ^ 20 * (w + v), 3 * v ^ 30 * w ^ 30 * (w + v), 6 * v ^ 50 * w ^ 50, 6 * v ^ 30 * w ^ 30, 6 * v ^ 20 * w ^ 20, 6 * v ^ 40 * w ^ 40]
            end
        f10(u, v, w) = begin
                return [10, u + 6v + 3w, v * (2w + 3v), 2 * u * v + 4 * v * w + 3 * v ^ 2 + w ^ 2, u ^ 2 + 6 * v ^ 2 + 3 * w ^ 2, v * (-u * w + 3 * v ^ 2), v * (u * v + w ^ 2 + 2 * v * w + v ^ 2), v ^ 2 * (w + v), u * v ^ 2 + 2 * v * w ^ 2 + u ^ 2 * v + 2 * v ^ 2 * w + 3 * v ^ 3 + w ^ 3, v ^ 4, v ^ 8 * (((((-v * u ^ 2 * w ^ 8 - v ^ 2 * u ^ 2 * w ^ 7) + v ^ 5 * u ^ 2 * w ^ 4 + u ^ 4 * w ^ 7 + v * u ^ 4 * w ^ 6 + u ^ 5 * w ^ 6) - v ^ 3 * w ^ 8) - v ^ 4 * w ^ 7) + v ^ 7 * w ^ 4 + v ^ 11), v * (w ^ 3 + u ^ 2 * v + v * w ^ 2 + v ^ 2 * w + v ^ 3), 0, 2 * u ^ 2 * v ^ 2 + 4 * v ^ 2 * w ^ 2 + 3 * v ^ 4 + w ^ 4, v ^ 2 * ((((u ^ 2 * w ^ 3 + u ^ 2 * v * w ^ 2 + u ^ 3 * w ^ 2) - 2 * v * w ^ 4) - 2 * v ^ 2 * w ^ 3) + 3 * v ^ 5), v ^ 2 * (-u * w + u * v + v * w + v ^ 2), v * ((((u * v ^ 3 - w ^ 4) + u ^ 2 * w ^ 2 + u ^ 2 * v ^ 2) - v * w ^ 3) + v ^ 4), 0, v ^ 8, 0, v ^ 13 * (u ^ 4 * w ^ 9 + v * u ^ 4 * w ^ 8 + v ^ 4 * w ^ 9 + v ^ 5 * w ^ 8 + v ^ 13), v ^ 3 * (-u * w + u ^ 2 + w ^ 2 + v ^ 2), u ^ 2 * v ^ 16 * w ^ 6, v ^ 10 * (w + v) * ((((v ^ 4 - w * v ^ 3) + v ^ 2 * w ^ 2) - v * w ^ 3) + w ^ 4), u ^ 10 * v ^ 68 * w ^ 30, v ^ 8 * (((-2 * v * u ^ 2 * w ^ 7 + v ^ 4 * u ^ 2 * w ^ 4 + 3 * u ^ 4 * w ^ 6) - 2 * v ^ 3 * w ^ 7) + v ^ 6 * w ^ 4 + v ^ 10), v ^ 3 * ((2 * u * w ^ 2 - v * w ^ 2) + v ^ 3), 0, v * (((((-(w ^ 5) + u ^ 2 * v * w ^ 2 + 2 * u ^ 2 * v ^ 3) - 2 * v ^ 2 * w ^ 3) + 2 * v ^ 3 * w ^ 2) - v ^ 4 * w) + v ^ 5), -u * v ^ 6 * w ^ 3 * (w ^ 2 + v ^ 2), v ^ 2 * ((3 * u ^ 2 * w ^ 2 - 4 * v * w ^ 3) + 3 * v ^ 4), v ^ 61 * w ^ 30 * u ^ 10 * (-u * w + 3 * v ^ 2), v ^ 14 * (((((-v * u ^ 4 * w ^ 12 - v ^ 2 * u ^ 4 * w ^ 11) + v ^ 5 * u ^ 4 * w ^ 8 + u ^ 6 * w ^ 11 + v * u ^ 6 * w ^ 10 + u ^ 7 * w ^ 10) - v ^ 5 * w ^ 12) - v ^ 6 * w ^ 11) + v ^ 9 * w ^ 8 + v ^ 17), 0, 0, v ^ 3 * ((((u * v ^ 3 + 3 * u ^ 2 * w ^ 2) - 2 * w ^ 4) - 2 * v * w ^ 3) + w * v ^ 3 + v ^ 4), u ^ 2 * v ^ 20 * w ^ 6, u ^ 2 * v ^ 15 * w ^ 6 * (-u * w + u ^ 2 + w ^ 2 + v ^ 2), u ^ 6 * v ^ 44 * w ^ 18, v ^ 6 * (u ^ 2 * w ^ 6 + 2 * v * u ^ 2 * w ^ 5 + v ^ 2 * u ^ 2 * w ^ 4 + 2 * v * u ^ 3 * w ^ 4 + 2 * v ^ 3 * w ^ 5 + w ^ 4 * v ^ 4 + v ^ 8), -u * v ^ 6 * w ^ 3 * (v + w), 0, v ^ 13 * w ^ 6 * u ^ 2 * (-u * w + 3 * v ^ 2), v ^ 7 * (u ^ 2 * w ^ 5 + v * u ^ 2 * w ^ 4 + w ^ 5 * v ^ 2 + v ^ 3 * w ^ 4 + v ^ 7), v ^ 62 * w ^ 30 * u ^ 10 * (-u * w + u * v + v * w + v ^ 2), u ^ 10 * v ^ 64 * w ^ 30, v ^ 3 * ((((3 * u ^ 2 * v * w ^ 2 + u ^ 2 * v ^ 3) - 2 * w ^ 5) - 2 * v ^ 2 * w ^ 3) + v ^ 3 * w ^ 2 + v ^ 5), v ^ 60 * u ^ 10 * w ^ 30 * (u + 6v + 3w), v ^ 14 * w ^ 6 * u ^ 2 * (-u * w + u * v + v * w + v ^ 2), u ^ 8 * v ^ 52 * w ^ 24, 0, u ^ 10 * v ^ 63 * w ^ 30 * (-u * w + u ^ 2 + w ^ 2 + v ^ 2), u ^ 2 * v ^ 12 * w ^ 6 * (2 * u ^ 2 * v ^ 2 + 4 * v ^ 2 * w ^ 2 + 3 * v ^ 4 + w ^ 4), u ^ 2 * v ^ 12 * w ^ 6 * (u ^ 2 + 6 * v ^ 2 + 3 * w ^ 2), u ^ 6 * v ^ 40 * w ^ 18, u ^ 10 * v ^ 60 * w ^ 30 * (u * v ^ 2 + 2 * v * w ^ 2 + u ^ 2 * v + 2 * v ^ 2 * w + 3 * v ^ 3 + w ^ 3), v ^ 6 * (2 * u ^ 2 * w ^ 5 + 3 * v * u ^ 2 * w ^ 4 + u ^ 3 * w ^ 4 + w ^ 5 * v ^ 2 + 2 * v ^ 3 * w ^ 4 + v ^ 7), -(u ^ 3) * v ^ 18 * w ^ 9 * (v + w), u ^ 8 * v ^ 56 * w ^ 24, -2 * u * v ^ 6 * w ^ 3, u ^ 2 * v ^ 12 * w ^ 6 * (u * v ^ 2 + 2 * v * w ^ 2 + u ^ 2 * v + 2 * v ^ 2 * w + 3 * v ^ 3 + w ^ 3), -2 * u ^ 5 * v ^ 30 * w ^ 15, v ^ 26 * w ^ 12 * u ^ 4 * (-u * w + u * v + v * w + v ^ 2), u ^ 4 * v ^ 28 * w ^ 12, v ^ 6 * (6 * u ^ 2 * w ^ 4 + 3 * v ^ 2 * w ^ 4 + v ^ 6), u ^ 2 * v ^ 15 * w ^ 6 * ((((u * v ^ 3 + 3 * u ^ 2 * w ^ 2) - 2 * w ^ 4) - 2 * v * w ^ 3) + w * v ^ 3 + v ^ 4), 0, u ^ 4 * v ^ 27 * w ^ 12 * (((-(w ^ 5) - 2 * v * w ^ 4) - v ^ 2 * w ^ 3) + v ^ 4 * w + v ^ 5 + u * v ^ 4 + u ^ 2 * w ^ 3 + u ^ 2 * v * w ^ 2 + u ^ 3 * w ^ 2), v ^ 12 * (6 * u ^ 4 * w ^ 8 + 3 * v ^ 4 * w ^ 8 + v ^ 12), u ^ 6 * v ^ 36 * w ^ 18 * (u * v ^ 2 + 2 * v * w ^ 2 + u ^ 2 * v + 2 * v ^ 2 * w + 3 * v ^ 3 + w ^ 3), u ^ 2 * v ^ 13 * w ^ 6 * (w ^ 3 + u ^ 2 * v + v * w ^ 2 + v ^ 2 * w + v ^ 3), u ^ 4 * v ^ 32 * w ^ 12, u ^ 2 * v ^ 15 * w ^ 6 * ((((3 * u ^ 2 * v * w ^ 2 + u ^ 2 * v ^ 3) - 2 * w ^ 5) - 2 * v ^ 2 * w ^ 3) + v ^ 3 * w ^ 2 + v ^ 5), v ^ 38 * w ^ 18 * u ^ 6 * (-u * w + u * v + v * w + v ^ 2), v ^ 25 * w ^ 12 * u ^ 4 * (-u * w + 3 * v ^ 2), u ^ 8 * v ^ 51 * w ^ 24 * (-u * w + u ^ 2 + w ^ 2 + v ^ 2), v ^ 49 * w ^ 24 * u ^ 8 * (-u * w + 3 * v ^ 2), u ^ 6 * v ^ 39 * w ^ 18 * (-u * w + u ^ 2 + w ^ 2 + v ^ 2), u ^ 2 * v ^ 15 * w ^ 6 * ((2 * u * w ^ 2 - v * w ^ 2) + v ^ 3), u ^ 4 * v ^ 27 * w ^ 12 * ((((u * v ^ 3 + 3 * u ^ 2 * w ^ 2) - 2 * w ^ 4) - 2 * v * w ^ 3) + w * v ^ 3 + v ^ 4), u ^ 2 * v ^ 14 * w ^ 6 * ((3 * u ^ 2 * w ^ 2 - 4 * v * w ^ 3) + 3 * v ^ 4), u ^ 2 * v ^ 13 * w ^ 6 * (u * v + w ^ 2 + 2 * v * w + v ^ 2), v ^ 25 * u ^ 4 * w ^ 12 * (2w + 3v), -2 * u ^ 3 * v ^ 18 * w ^ 9, u ^ 8 * v ^ 48 * w ^ 24 * (u ^ 2 + 6 * v ^ 2 + 3 * w ^ 2), v ^ 13 * u ^ 2 * w ^ 6 * (2w + 3v), u ^ 4 * v ^ 26 * w ^ 12 * ((3 * u ^ 2 * w ^ 2 - 4 * v * w ^ 3) + 3 * v ^ 4), u ^ 2 * v ^ 12 * w ^ 6 * (2 * u * v + 4 * v * w + 3 * v ^ 2 + w ^ 2), u ^ 4 * v ^ 25 * w ^ 12 * (u * v + w ^ 2 + 2 * v * w + v ^ 2), v ^ 37 * w ^ 18 * u ^ 6 * (-u * w + 3 * v ^ 2), u ^ 10 * v ^ 60 * w ^ 30 * (u ^ 2 + 6 * v ^ 2 + 3 * w ^ 2), u ^ 4 * v ^ 24 * w ^ 12 * (2 * u * v + 4 * v * w + 3 * v ^ 2 + w ^ 2), v ^ 12 * u ^ 2 * w ^ 6 * (u + 6v + 3w), 10 * u ^ 2 * v ^ 12 * w ^ 6, u ^ 6 * v ^ 36 * w ^ 18 * (2 * u * v + 4 * v * w + 3 * v ^ 2 + w ^ 2), u ^ 6 * v ^ 36 * w ^ 18 * (u ^ 2 + 6 * v ^ 2 + 3 * w ^ 2), v ^ 24 * u ^ 4 * w ^ 12 * (u + 6v + 3w), v ^ 36 * u ^ 6 * w ^ 18 * (u + 6v + 3w), 10 * u ^ 10 * v ^ 60 * w ^ 30, 10 * u ^ 6 * v ^ 36 * w ^ 18, 10 * u ^ 4 * v ^ 24 * w ^ 12, 10 * u ^ 8 * v ^ 48 * w ^ 24]
            end
        f15(u, v, w) = begin
                return [15, 3u + 6v + 6w, (v + w) ^ 2, 2 * u * v + 2 * u * w + 4 * v * w + u ^ 2 + 3 * v ^ 2 + 3 * w ^ 2, 3 * u ^ 2 + 6 * v ^ 2 + 6 * w ^ 2, -3 * u * v * w + v ^ 3 + w ^ 3, (v + w) * (v ^ 2 + w ^ 2), -u * v * w, u * v ^ 2 + u * w ^ 2 + 2 * v * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 2 * v ^ 2 * w + u ^ 3 + 3 * v ^ 3 + 3 * w ^ 3, 0, u ^ 2 * v ^ 4 * w ^ 4 * (((((w ^ 9 - w ^ 6 * v ^ 3) - w ^ 5 * v ^ 4) - w ^ 4 * v ^ 5) - w ^ 3 * v ^ 6) + v ^ 9 + w ^ 5 * v ^ 2 * u ^ 2 + w ^ 4 * v ^ 3 * u ^ 2 + w ^ 3 * u ^ 2 * v ^ 4 + w ^ 2 * u ^ 2 * v ^ 5 + w ^ 4 * v ^ 2 * u ^ 3 + w ^ 2 * u ^ 3 * v ^ 4 + w ^ 3 * v ^ 2 * u ^ 4 + w ^ 2 * v ^ 3 * u ^ 4 + w ^ 2 * v ^ 2 * u ^ 5), ((v ^ 2 - v * w) + w ^ 2) * (v + w) ^ 2, 0, 2 * u ^ 2 * v ^ 2 + 2 * u ^ 2 * w ^ 2 + 4 * v ^ 2 * w ^ 2 + u ^ 4 + 3 * v ^ 4 + 3 * w ^ 4, (((3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2 + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * v ^ 3 * w ^ 4) - 2 * v ^ 4 * w ^ 3) + v ^ 7 + w ^ 7, ((-u * v * w ^ 2 - u * v ^ 2 * w) - u ^ 2 * v * w) + v ^ 4 + w ^ 4, (((u * v ^ 2 * w ^ 2 - v * w ^ 4) + u ^ 2 * v * w ^ 2 + u ^ 2 * v ^ 2 * w + u ^ 2 * v ^ 3 + u ^ 2 * w ^ 3 + u ^ 3 * v ^ 2 + u ^ 3 * w ^ 2) - v ^ 4 * w) + v ^ 5 + w ^ 5, 0, 0, u * v ^ 2 * w ^ 2, u ^ 4 * v ^ 8 * w ^ 8 * ((((v ^ 4 - v ^ 3 * w) + v ^ 2 * w ^ 2) - v * w ^ 3) + w ^ 4) * (v + w) ^ 2, ((-u * v * w ^ 3 - u * v ^ 3 * w) - u ^ 3 * v * w) + v ^ 5 + w ^ 5, 0, -(u ^ 5) * v ^ 5 * w ^ 5, 0, u ^ 2 * v ^ 4 * w ^ 4 * (((((3 * u ^ 2 * v ^ 2 * w ^ 4 + 3 * u ^ 2 * v ^ 4 * w ^ 2) - 2 * v ^ 3 * w ^ 5) + 3 * u ^ 4 * v ^ 2 * w ^ 2) - 2 * v ^ 5 * w ^ 3) + v ^ 8 + w ^ 8), u * v ^ 2 * w ^ 2 * (2v + 2w + 3u), 0, ((((-v * w ^ 5 + 3 * u ^ 2 * v ^ 2 * w ^ 2 + u ^ 2 * v ^ 4 + u ^ 2 * w ^ 4 + v ^ 2 * w ^ 4) - 2 * v ^ 3 * w ^ 3) + u ^ 4 * v ^ 2 + u ^ 4 * w ^ 2 + v ^ 4 * w ^ 2) - v ^ 5 * w) + v ^ 6 + w ^ 6, u ^ 2 * v ^ 4 * w ^ 4 * (w ^ 2 + v ^ 2 + u ^ 2), (9 * u ^ 2 * v ^ 2 * w ^ 2 - 4 * v ^ 3 * w ^ 3) + v ^ 6 + w ^ 6, -(u ^ 20) * v ^ 40 * w ^ 40 * ((3 * u * v * w - v ^ 3) - w ^ 3), u ^ 4 * v ^ 8 * w ^ 8 * (((((w ^ 11 - w ^ 8 * v ^ 3) - w ^ 7 * v ^ 4) - w ^ 4 * v ^ 7) - w ^ 3 * v ^ 8) + v ^ 11 + w ^ 7 * v ^ 2 * u ^ 2 + w ^ 6 * v ^ 3 * u ^ 2 + w ^ 3 * v ^ 6 * u ^ 2 + w ^ 2 * u ^ 2 * v ^ 7 + w ^ 6 * v ^ 2 * u ^ 3 + w ^ 2 * v ^ 6 * u ^ 3 + w ^ 3 * v ^ 2 * u ^ 6 + w ^ 2 * v ^ 3 * u ^ 6 + u ^ 7 * v ^ 2 * w ^ 2), u ^ 5 * v ^ 10 * w ^ 10, 0, (((3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2 + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * v ^ 3 * w ^ 4) - 2 * v ^ 4 * w ^ 3) + v ^ 7 + w ^ 7, 0, -(u ^ 4) * v ^ 8 * w ^ 8 * (((u * v * w ^ 3 + u * v ^ 3 * w + u ^ 3 * v * w) - v ^ 5) - w ^ 5), 0, u ^ 2 * v ^ 4 * w ^ 4 * (w ^ 4 + 2 * v * w ^ 3 + 2 * v ^ 2 * w ^ 2 + 2 * v ^ 3 * w + v ^ 4 + 2 * w ^ 3 * u + 2 * v ^ 3 * u + u ^ 2 * w ^ 2 + u ^ 2 * v ^ 2 + u ^ 4), u ^ 2 * v ^ 4 * w ^ 4 * (u + v + w), 0, -(u ^ 4) * v ^ 8 * w ^ 8 * ((3 * u * v * w - v ^ 3) - w ^ 3), u ^ 2 * v ^ 4 * w ^ 4 * ((v ^ 2 - v * w) + w ^ 2) * (v + w) ^ 2, -(u ^ 20) * v ^ 40 * w ^ 40 * (((u * v * w ^ 2 + u * v ^ 2 * w + u ^ 2 * v * w) - v ^ 4) - w ^ 4), 0, ((((3 * u ^ 2 * v ^ 2 * w ^ 4 + 3 * u ^ 2 * v ^ 4 * w ^ 2) - 2 * v ^ 3 * w ^ 5) + 3 * u ^ 4 * v ^ 2 * w ^ 2) - 2 * v ^ 5 * w ^ 3) + v ^ 8 + w ^ 8, 3 * u ^ 20 * v ^ 40 * w ^ 40 * (2v + 2w + u), -(u ^ 4) * v ^ 8 * w ^ 8 * (((u * v * w ^ 2 + u * v ^ 2 * w + u ^ 2 * v * w) - v ^ 4) - w ^ 4), 0, u ^ 3 * v ^ 6 * w ^ 6, -(u ^ 20) * v ^ 40 * w ^ 40 * (((u * v * w ^ 3 + u * v ^ 3 * w + u ^ 3 * v * w) - v ^ 5) - w ^ 5), u ^ 4 * v ^ 8 * w ^ 8 * (2 * u ^ 2 * v ^ 2 + 2 * u ^ 2 * w ^ 2 + 4 * v ^ 2 * w ^ 2 + u ^ 4 + 3 * v ^ 4 + 3 * w ^ 4), 3 * u ^ 4 * v ^ 8 * w ^ 8 * (u ^ 2 + 2 * v ^ 2 + 2 * w ^ 2), 0, u ^ 20 * v ^ 40 * w ^ 40 * (u * v ^ 2 + u * w ^ 2 + 2 * v * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 2 * v ^ 2 * w + u ^ 3 + 3 * v ^ 3 + 3 * w ^ 3), u ^ 2 * v ^ 4 * w ^ 4 * (u * v ^ 2 + u * w ^ 2 + 2 * v * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 2 * v ^ 2 * w + u ^ 3 + 3 * v ^ 3 + 3 * w ^ 3), u ^ 6 * v ^ 12 * w ^ 12 * (v + w + u), 0, 3 * u ^ 2 * v ^ 4 * w ^ 4, u ^ 4 * v ^ 8 * w ^ 8 * (u * v ^ 2 + u * w ^ 2 + 2 * v * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 2 * v ^ 2 * w + u ^ 3 + 3 * v ^ 3 + 3 * w ^ 3), 3 * u ^ 10 * v ^ 20 * w ^ 20, -(u ^ 8) * v ^ 16 * w ^ 16 * (((u * v * w ^ 2 + u * v ^ 2 * w + u ^ 2 * v * w) - v ^ 4) - w ^ 4), 0, 3 * u ^ 2 * v ^ 4 * w ^ 4 * (u ^ 2 + 2 * v ^ 2 + 2 * w ^ 2), u ^ 4 * v ^ 8 * w ^ 8 * ((((3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2 + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * v ^ 3 * w ^ 4) - 2 * v ^ 4 * w ^ 3) + v ^ 7 + w ^ 7), 0, u ^ 8 * v ^ 16 * w ^ 16 * ((((w ^ 8 - v ^ 3 * w ^ 5) - 2 * v ^ 4 * w ^ 4) - v ^ 5 * w ^ 3) + v ^ 8 + u ^ 2 * v ^ 2 * w ^ 4 + 2 * w ^ 3 * v ^ 3 * u ^ 2 + u ^ 2 * v ^ 4 * w ^ 2 + 2 * w ^ 3 * v ^ 2 * u ^ 3 + 2 * w ^ 2 * v ^ 3 * u ^ 3 + u ^ 4 * v ^ 2 * w ^ 2), 3 * u ^ 4 * v ^ 8 * w ^ 8 * (2 * w ^ 4 + 2 * v ^ 4 + u ^ 4), u ^ 12 * v ^ 24 * w ^ 24 * (u * v ^ 2 + u * w ^ 2 + 2 * v * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 2 * v ^ 2 * w + u ^ 3 + 3 * v ^ 3 + 3 * w ^ 3), u ^ 4 * v ^ 8 * w ^ 8 * ((v ^ 2 - v * w) + w ^ 2) * (v + w) ^ 2, 0, u ^ 4 * v ^ 8 * w ^ 8 * (((((3 * u ^ 2 * v ^ 2 * w ^ 4 + 3 * u ^ 2 * v ^ 4 * w ^ 2) - 2 * v ^ 3 * w ^ 5) + 3 * u ^ 4 * v ^ 2 * w ^ 2) - 2 * v ^ 5 * w ^ 3) + v ^ 8 + w ^ 8), -(u ^ 12) * v ^ 24 * w ^ 24 * (((u * v * w ^ 2 + u * v ^ 2 * w + u ^ 2 * v * w) - v ^ 4) - w ^ 4), -(u ^ 8) * v ^ 16 * w ^ 16 * ((3 * u * v * w - v ^ 3) - w ^ 3), -(u ^ 16) * v ^ 32 * w ^ 32 * (((u * v * w ^ 3 + u * v ^ 3 * w + u ^ 3 * v * w) - v ^ 5) - w ^ 5), -(u ^ 16) * v ^ 32 * w ^ 32 * ((3 * u * v * w - v ^ 3) - w ^ 3), -(u ^ 12) * v ^ 24 * w ^ 24 * (((u * v * w ^ 3 + u * v ^ 3 * w + u ^ 3 * v * w) - v ^ 5) - w ^ 5), u ^ 5 * v ^ 10 * w ^ 10 * (2v + 2w + 3u), u ^ 8 * v ^ 16 * w ^ 16 * ((((3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2 + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * v ^ 3 * w ^ 4) - 2 * v ^ 4 * w ^ 3) + v ^ 7 + w ^ 7), u ^ 4 * v ^ 8 * w ^ 8 * ((9 * u ^ 2 * v ^ 2 * w ^ 2 - 4 * v ^ 3 * w ^ 3) + v ^ 6 + w ^ 6), u ^ 4 * v ^ 8 * w ^ 8 * (v + w) * (v ^ 2 + w ^ 2), u ^ 8 * v ^ 16 * w ^ 16 * (v + w) ^ 2, 3 * u ^ 6 * v ^ 12 * w ^ 12, 3 * u ^ 16 * v ^ 32 * w ^ 32 * (u ^ 2 + 2 * v ^ 2 + 2 * w ^ 2), u ^ 4 * v ^ 8 * w ^ 8 * (v + w) ^ 2, u ^ 8 * v ^ 16 * w ^ 16 * ((9 * u ^ 2 * v ^ 2 * w ^ 2 - 4 * v ^ 3 * w ^ 3) + v ^ 6 + w ^ 6), u ^ 4 * v ^ 8 * w ^ 8 * (2 * u * v + 2 * u * w + 4 * v * w + u ^ 2 + 3 * v ^ 2 + 3 * w ^ 2), u ^ 8 * v ^ 16 * w ^ 16 * (v + w) * (v ^ 2 + w ^ 2), -(u ^ 12) * v ^ 24 * w ^ 24 * ((3 * u * v * w - v ^ 3) - w ^ 3), 3 * u ^ 20 * v ^ 40 * w ^ 40 * (u ^ 2 + 2 * v ^ 2 + 2 * w ^ 2), u ^ 8 * v ^ 16 * w ^ 16 * (2 * u * v + 2 * u * w + 4 * v * w + u ^ 2 + 3 * v ^ 2 + 3 * w ^ 2), 3 * u ^ 4 * v ^ 8 * w ^ 8 * (2v + 2w + u), 15 * u ^ 4 * v ^ 8 * w ^ 8, u ^ 12 * v ^ 24 * w ^ 24 * (2 * u * v + 2 * u * w + 4 * v * w + u ^ 2 + 3 * v ^ 2 + 3 * w ^ 2), 3 * u ^ 12 * v ^ 24 * w ^ 24 * (u ^ 2 + 2 * v ^ 2 + 2 * w ^ 2), 3 * u ^ 8 * v ^ 16 * w ^ 16 * (2v + 2w + u), 3 * u ^ 12 * v ^ 24 * w ^ 24 * (2v + 2w + u), 15 * u ^ 20 * v ^ 40 * w ^ 40, 15 * u ^ 12 * v ^ 24 * w ^ 24, 15 * u ^ 8 * v ^ 16 * w ^ 16, 15 * u ^ 16 * v ^ 32 * w ^ 32]
            end
        f15b(u, v, w) = begin
                return [15, 9u + 3v + 3w, 2 * u * (v + w + 2u), 4 * u * v + 4 * u * w + 2 * v * w + 5 * u ^ 2, 9 * u ^ 2 + 3 * v ^ 2 + 3 * w ^ 2, u * (-v * w + 4 * u ^ 2), 2 * u * (w + u) * (u + v), u ^ 2 * (v + w + u), 2 * u * v ^ 2 + 2 * u * w ^ 2 + v * w ^ 2 + 2 * u ^ 2 * v + 2 * u ^ 2 * w + v ^ 2 * w + 5 * u ^ 3, u ^ 2 * (-v * w + u ^ 2), u ^ 8 * (((((((((((v ^ 5 * w ^ 6 + v ^ 6 * w ^ 5) - u * v ^ 3 * w ^ 7) + u * v ^ 5 * w ^ 5) - u * v ^ 7 * w ^ 3) - w ^ 6 * v ^ 3 * u ^ 2) - w ^ 3 * v ^ 6 * u ^ 2) - u ^ 3 * v ^ 8) - u ^ 3 * w ^ 8) - u ^ 4 * v ^ 7) - u ^ 4 * w ^ 7) + u ^ 5 * v ^ 3 * w ^ 3 + u ^ 7 * v ^ 4 + u ^ 7 * w ^ 4 + u ^ 11), u * (v * w ^ 2 + v ^ 2 * w + u * v ^ 2 + u * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 2 * u ^ 3), 0, 4 * u ^ 2 * v ^ 2 + 4 * u ^ 2 * w ^ 2 + 2 * v ^ 2 * w ^ 2 + 5 * u ^ 4, u ^ 2 * ((((((w ^ 3 * v ^ 2 + v ^ 3 * w ^ 2 + u * v ^ 2 * w ^ 2) - 2 * u * v ^ 4) - 2 * u * w ^ 4) - 2 * u ^ 2 * v ^ 3) - 2 * u ^ 2 * w ^ 3) + 4 * u ^ 5), u ^ 2 * (-v * w + u * v + u * w + 2 * u ^ 2), u * ((((((-v * w ^ 3 + v ^ 2 * w ^ 2) - v ^ 3 * w) - v ^ 3 * u) - w ^ 3 * u) - 2 * u ^ 2 * v * w) + u ^ 2 * v ^ 2 + u ^ 2 * w ^ 2 + 2 * u ^ 4), 0, u ^ 4 * (-v * w + u ^ 2) * (u ^ 2 + v * w), -(u ^ 3) * v * w, u ^ 13 * (v ^ 6 * w ^ 7 + v ^ 7 * w ^ 6 + u * v ^ 6 * w ^ 6 + u ^ 4 * v ^ 9 + u ^ 4 * w ^ 9 + u ^ 5 * v ^ 8 + u ^ 5 * w ^ 8 + u ^ 13), u ^ 3 * (-v * w + v ^ 2 + w ^ 2 + 2 * u ^ 2), u ^ 14 * v ^ 4 * w ^ 4 * (-v * w + u ^ 2), u ^ 10 * (v ^ 5 + w ^ 5 + u ^ 5), u ^ 64 * v ^ 20 * w ^ 20 * (-v * w + u ^ 2) * (u ^ 2 + v * w), u ^ 8 * (((((3 * v ^ 5 * w ^ 5 - 2 * u * w ^ 6 * v ^ 3) - 2 * u * w ^ 3 * v ^ 6) - 2 * u ^ 3 * v ^ 7) - 2 * u ^ 3 * w ^ 7) + u ^ 4 * v ^ 3 * w ^ 3 + u ^ 6 * v ^ 4 + u ^ 6 * w ^ 4 + u ^ 10), u ^ 4 * ((-(v ^ 2) - w ^ 2) + u ^ 2), 0, u * ((((((((((-(w ^ 3) * v ^ 2 - v ^ 3 * w ^ 2) + u * v ^ 2 * w ^ 2) - u ^ 2 * v * w ^ 2) - u ^ 2 * v ^ 2 * w) - u ^ 2 * v ^ 3) - u ^ 2 * w ^ 3) + 2 * u ^ 3 * v ^ 2 + 2 * u ^ 3 * w ^ 2) - u ^ 4 * v) - u ^ 4 * w) + 2 * u ^ 5), -(u ^ 8) * v ^ 2 * w ^ 2, u ^ 2 * (((3 * v ^ 2 * w ^ 2 - 4 * v ^ 3 * u) - 4 * w ^ 3 * u) + 4 * u ^ 4), u ^ 61 * v ^ 20 * w ^ 20 * (-v * w + 4 * u ^ 2), u ^ 14 * ((((((((((((v ^ 8 * w ^ 9 + v ^ 9 * w ^ 8) - u * v ^ 6 * w ^ 10) + u * v ^ 8 * w ^ 8) - u * v ^ 10 * w ^ 6) - u ^ 2 * v ^ 6 * w ^ 9) - u ^ 2 * v ^ 9 * w ^ 6) + u ^ 5 * v ^ 6 * w ^ 6) - u ^ 5 * v ^ 12) - u ^ 5 * w ^ 12) - u ^ 6 * v ^ 11) - u ^ 6 * w ^ 11) + u ^ 9 * v ^ 8 + u ^ 9 * w ^ 8 + u ^ 17), -(u ^ 15) * v ^ 5 * w ^ 5, 0, u ^ 3 * (((((-2 * v * w ^ 3 + 3 * v ^ 2 * w ^ 2) - 2 * v ^ 3 * w) - 2 * v ^ 3 * u) - 2 * w ^ 3 * u) + u ^ 3 * v + u ^ 3 * w + 2 * u ^ 4), u ^ 16 * v ^ 4 * w ^ 4 * (-v * w + u ^ 2) * (u ^ 2 + v * w), u ^ 15 * v ^ 4 * w ^ 4 * (-v * w + v ^ 2 + w ^ 2 + 2 * u ^ 2), u ^ 40 * v ^ 12 * w ^ 12 * (-v * w + u ^ 2) * (u ^ 2 + v * w), u ^ 6 * (2 * v ^ 4 * w ^ 4 + 2 * u * v ^ 3 * w ^ 4 + 2 * u * v ^ 4 * w ^ 3 + 2 * w ^ 3 * v ^ 3 * u ^ 2 + 2 * u ^ 3 * v ^ 5 + 2 * u ^ 3 * w ^ 5 + u ^ 4 * v ^ 4 + u ^ 4 * w ^ 4 + u ^ 8), -(u ^ 7) * v ^ 2 * w ^ 2, 0, u ^ 13 * v ^ 4 * w ^ 4 * (-v * w + 4 * u ^ 2), u ^ 7 * (v ^ 3 * w ^ 4 + v ^ 4 * w ^ 3 + u * w ^ 3 * v ^ 3 + u ^ 2 * v ^ 5 + u ^ 2 * w ^ 5 + u ^ 3 * v ^ 4 + u ^ 3 * w ^ 4 + u ^ 7), u ^ 62 * v ^ 20 * w ^ 20 * (-v * w + u * v + u * w + 2 * u ^ 2), u ^ 62 * v ^ 20 * w ^ 20 * (-v * w + u ^ 2), u ^ 3 * (((((-2 * w ^ 3 * v ^ 2 - 2 * v ^ 3 * w ^ 2) + 3 * u * v ^ 2 * w ^ 2) - 2 * u ^ 2 * v ^ 3) - 2 * u ^ 2 * w ^ 3) + u ^ 3 * v ^ 2 + u ^ 3 * w ^ 2 + 2 * u ^ 5), 3 * u ^ 60 * v ^ 20 * w ^ 20 * (v + w + 3u), u ^ 14 * v ^ 4 * w ^ 4 * (-v * w + u * v + u * w + 2 * u ^ 2), u ^ 50 * v ^ 16 * w ^ 16 * (-v * w + u ^ 2), -(u ^ 9) * v ^ 3 * w ^ 3, u ^ 63 * v ^ 20 * w ^ 20 * (-v * w + v ^ 2 + w ^ 2 + 2 * u ^ 2), u ^ 12 * v ^ 4 * w ^ 4 * (4 * u ^ 2 * v ^ 2 + 4 * u ^ 2 * w ^ 2 + 2 * v ^ 2 * w ^ 2 + 5 * u ^ 4), 3 * u ^ 12 * v ^ 4 * w ^ 4 * (w ^ 2 + v ^ 2 + 3 * u ^ 2), u ^ 38 * v ^ 12 * w ^ 12 * (-v * w + u ^ 2), u ^ 60 * v ^ 20 * w ^ 20 * (2 * u * v ^ 2 + 2 * u * w ^ 2 + v * w ^ 2 + 2 * u ^ 2 * v + 2 * u ^ 2 * w + v ^ 2 * w + 5 * u ^ 3), u ^ 6 * (2 * v ^ 3 * w ^ 4 + 2 * v ^ 4 * w ^ 3 + 4 * u * w ^ 3 * v ^ 3 + u ^ 2 * v ^ 5 + u ^ 2 * w ^ 5 + 2 * u ^ 3 * v ^ 4 + 2 * u ^ 3 * w ^ 4 + u ^ 7), -(u ^ 19) * v ^ 6 * w ^ 6, u ^ 52 * v ^ 16 * w ^ 16 * (-v * w + u ^ 2) * (u ^ 2 + v * w), -(u ^ 6) * v ^ 2 * w ^ 2, u ^ 12 * v ^ 4 * w ^ 4 * (2 * u * v ^ 2 + 2 * u * w ^ 2 + v * w ^ 2 + 2 * u ^ 2 * v + 2 * u ^ 2 * w + v ^ 2 * w + 5 * u ^ 3), -(u ^ 30) * v ^ 10 * w ^ 10, u ^ 26 * v ^ 8 * w ^ 8 * (-v * w + u * v + u * w + 2 * u ^ 2), u ^ 26 * v ^ 8 * w ^ 8 * (-v * w + u ^ 2), u ^ 6 * (8 * v ^ 3 * w ^ 3 + 3 * u ^ 2 * v ^ 4 + 3 * u ^ 2 * w ^ 4 + u ^ 6), u ^ 15 * v ^ 4 * w ^ 4 * (((((-2 * v * w ^ 3 + 3 * v ^ 2 * w ^ 2) - 2 * v ^ 3 * w) - 2 * v ^ 3 * u) - 2 * w ^ 3 * u) + u ^ 3 * v + u ^ 3 * w + 2 * u ^ 4), 0, u ^ 27 * v ^ 8 * w ^ 8 * ((((((((((-v * w ^ 4 + w ^ 3 * v ^ 2 + v ^ 3 * w ^ 2) - v ^ 4 * w) - u * w ^ 4) - u * v * w ^ 3) + u * v ^ 2 * w ^ 2) - u * v ^ 3 * w) - u * v ^ 4) - u ^ 2 * w ^ 3) - u ^ 2 * v ^ 3) + u ^ 4 * w + u ^ 4 * v + 2 * u ^ 5), u ^ 12 * (8 * v ^ 6 * w ^ 6 + 3 * u ^ 4 * v ^ 8 + 3 * u ^ 4 * w ^ 8 + u ^ 12), u ^ 36 * v ^ 12 * w ^ 12 * (2 * u * v ^ 2 + 2 * u * w ^ 2 + v * w ^ 2 + 2 * u ^ 2 * v + 2 * u ^ 2 * w + v ^ 2 * w + 5 * u ^ 3), u ^ 13 * v ^ 4 * w ^ 4 * (v * w ^ 2 + v ^ 2 * w + u * v ^ 2 + u * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 2 * u ^ 3), u ^ 28 * v ^ 8 * w ^ 8 * (-v * w + u ^ 2) * (u ^ 2 + v * w), u ^ 15 * v ^ 4 * w ^ 4 * (((((-2 * w ^ 3 * v ^ 2 - 2 * v ^ 3 * w ^ 2) + 3 * u * v ^ 2 * w ^ 2) - 2 * u ^ 2 * v ^ 3) - 2 * u ^ 2 * w ^ 3) + u ^ 3 * v ^ 2 + u ^ 3 * w ^ 2 + 2 * u ^ 5), u ^ 38 * v ^ 12 * w ^ 12 * (-v * w + u * v + u * w + 2 * u ^ 2), u ^ 25 * v ^ 8 * w ^ 8 * (-v * w + 4 * u ^ 2), u ^ 51 * v ^ 16 * w ^ 16 * (-v * w + v ^ 2 + w ^ 2 + 2 * u ^ 2), u ^ 49 * v ^ 16 * w ^ 16 * (-v * w + 4 * u ^ 2), u ^ 39 * v ^ 12 * w ^ 12 * (-v * w + v ^ 2 + w ^ 2 + 2 * u ^ 2), u ^ 16 * v ^ 4 * w ^ 4 * ((-(v ^ 2) - w ^ 2) + u ^ 2), u ^ 27 * v ^ 8 * w ^ 8 * (((((-2 * v * w ^ 3 + 3 * v ^ 2 * w ^ 2) - 2 * v ^ 3 * w) - 2 * v ^ 3 * u) - 2 * w ^ 3 * u) + u ^ 3 * v + u ^ 3 * w + 2 * u ^ 4), u ^ 14 * v ^ 4 * w ^ 4 * (((3 * v ^ 2 * w ^ 2 - 4 * v ^ 3 * u) - 4 * w ^ 3 * u) + 4 * u ^ 4), 2 * u ^ 13 * v ^ 4 * w ^ 4 * (w + u) * (u + v), 2 * u ^ 25 * v ^ 8 * w ^ 8 * (v + w + 2u), -(u ^ 18) * v ^ 6 * w ^ 6, 3 * u ^ 48 * v ^ 16 * w ^ 16 * (w ^ 2 + v ^ 2 + 3 * u ^ 2), 2 * u ^ 13 * v ^ 4 * w ^ 4 * (v + w + 2u), u ^ 26 * v ^ 8 * w ^ 8 * (((3 * v ^ 2 * w ^ 2 - 4 * v ^ 3 * u) - 4 * w ^ 3 * u) + 4 * u ^ 4), u ^ 12 * v ^ 4 * w ^ 4 * (4 * u * v + 4 * u * w + 2 * v * w + 5 * u ^ 2), 2 * u ^ 25 * v ^ 8 * w ^ 8 * (w + u) * (u + v), u ^ 37 * v ^ 12 * w ^ 12 * (-v * w + 4 * u ^ 2), 3 * u ^ 60 * v ^ 20 * w ^ 20 * (w ^ 2 + v ^ 2 + 3 * u ^ 2), u ^ 24 * v ^ 8 * w ^ 8 * (4 * u * v + 4 * u * w + 2 * v * w + 5 * u ^ 2), 3 * u ^ 12 * v ^ 4 * w ^ 4 * (v + w + 3u), 15 * u ^ 12 * v ^ 4 * w ^ 4, u ^ 36 * v ^ 12 * w ^ 12 * (4 * u * v + 4 * u * w + 2 * v * w + 5 * u ^ 2), 3 * u ^ 36 * v ^ 12 * w ^ 12 * (w ^ 2 + v ^ 2 + 3 * u ^ 2), 3 * u ^ 24 * v ^ 8 * w ^ 8 * (v + w + 3u), 3 * u ^ 36 * v ^ 12 * w ^ 12 * (v + w + 3u), 15 * u ^ 60 * v ^ 20 * w ^ 20, 15 * u ^ 36 * v ^ 12 * w ^ 12, 15 * u ^ 24 * v ^ 8 * w ^ 8, 15 * u ^ 48 * v ^ 16 * w ^ 16]
            end
        f20a(u, v, w) = begin
                return [20, 2u + 9v + 9w, (v + 2w) * (2v + w), 2 * (v + w) * (2v + 2w + u), 2 * u ^ 2 + 9 * v ^ 2 + 9 * w ^ 2, -2 * u * v * w + 2 * v ^ 3 + 2 * w ^ 3, u * v * w + 3 * v * w ^ 2 + 3 * v ^ 2 * w + v ^ 3 + w ^ 3, v * w * (v + w), u * v ^ 2 + u * w ^ 2 + 4 * v * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 4 * v ^ 2 * w + 4 * v ^ 3 + 4 * w ^ 3, -(v ^ 2) * w ^ 2, v ^ 4 * w ^ 4 * ((((((((((((w ^ 9 * u ^ 2 - w ^ 6 * v ^ 3 * u ^ 2) - u ^ 2 * v ^ 4 * w ^ 5) - u ^ 2 * v ^ 5 * w ^ 4) - w ^ 3 * v ^ 6 * u ^ 2) + v ^ 9 * u ^ 2 + w ^ 5 * v ^ 2 * u ^ 4 + w ^ 4 * v ^ 3 * u ^ 4 + w ^ 3 * v ^ 4 * u ^ 4 + w ^ 2 * v ^ 5 * u ^ 4 + w ^ 11 + w ^ 4 * v ^ 2 * u ^ 5 + w ^ 2 * v ^ 4 * u ^ 5) - w ^ 8 * v ^ 3) - w ^ 7 * v ^ 4) - v ^ 5 * w ^ 6) - v ^ 6 * w ^ 5) - w ^ 4 * v ^ 7) - w ^ 3 * v ^ 8) + v ^ 11), 2 * v * w ^ 3 + u ^ 2 * v * w + 2 * v ^ 2 * w ^ 2 + 2 * v ^ 3 * w + v ^ 4 + w ^ 4, 0, 2 * (v ^ 2 + w ^ 2) * (u ^ 2 + 2 * v ^ 2 + 2 * w ^ 2), (((2 * u ^ 2 * v ^ 2 * w ^ 3 + 2 * u ^ 2 * v ^ 3 * w ^ 2 + 2 * u ^ 3 * v ^ 2 * w ^ 2) - 5 * v ^ 3 * w ^ 4) - 5 * v ^ 4 * w ^ 3) + 2 * v ^ 7 + 2 * w ^ 7, -((v + w)) * ((u * v * w - v ^ 3) - w ^ 3), ((((((-u * v * w ^ 3 - u * v ^ 3 * w) - v * w ^ 4) + u ^ 2 * v * w ^ 2 + u ^ 2 * v ^ 2 * w + u ^ 2 * v ^ 3 + u ^ 2 * w ^ 3) - w ^ 3 * v ^ 2) - v ^ 3 * w ^ 2) - v ^ 4 * w) + v ^ 5 + w ^ 5, 0, -(v ^ 4) * w ^ 4, 0, v ^ 8 * w ^ 8 * (w ^ 6 * u ^ 4 + w ^ 5 * v * u ^ 4 + w * v ^ 5 * u ^ 4 + u ^ 4 * v ^ 6 + w ^ 10 + v * w ^ 9 + v ^ 5 * w ^ 5 + w * v ^ 9 + v ^ 10), -((v ^ 2 + w ^ 2)) * ((u * v * w - v ^ 3) - w ^ 3), u ^ 2 * v ^ 11 * w ^ 11, v ^ 5 * w ^ 5 * (v + w) * ((((v ^ 4 - v ^ 3 * w) + v ^ 2 * w ^ 2) - v * w ^ 3) + w ^ 4), u ^ 10 * v ^ 49 * w ^ 49, v ^ 4 * w ^ 4 * (((((((u ^ 2 * w ^ 8 - 2 * w ^ 5 * v ^ 3 * u ^ 2) - 2 * w ^ 3 * u ^ 2 * v ^ 5) + u ^ 2 * v ^ 8 + 3 * w ^ 4 * v ^ 2 * u ^ 4 + 3 * w ^ 2 * u ^ 4 * v ^ 4 + w ^ 10) - 2 * w ^ 7 * v ^ 3) - 2 * v ^ 5 * w ^ 5) - 2 * w ^ 3 * v ^ 7) + v ^ 10), v ^ 2 * w ^ 2 * (v + w) * ((-v - w) + 2u), 0, (v ^ 2 + w ^ 2) * (((((v ^ 4 - 2 * v ^ 3 * w) + u ^ 2 * v ^ 2 + v ^ 2 * w ^ 2) - u ^ 2 * v * w) - 2 * v * w ^ 3) + u ^ 2 * w ^ 2 + w ^ 4), 0, (6 * u ^ 2 * v ^ 2 * w ^ 2 - 10 * v ^ 3 * w ^ 3) + 2 * v ^ 6 + 2 * w ^ 6, 2 * u ^ 10 * v ^ 45 * w ^ 45 * ((u * v * w - v ^ 3) - w ^ 3), w ^ 8 * v ^ 8 * ((((((((((((w ^ 11 * u ^ 4 - w ^ 8 * v ^ 3 * u ^ 4) - w ^ 7 * v ^ 4 * u ^ 4) - w ^ 4 * v ^ 7 * u ^ 4) - w ^ 3 * v ^ 8 * u ^ 4) + v ^ 11 * u ^ 4 + w ^ 7 * v ^ 2 * u ^ 6 + w ^ 6 * v ^ 3 * u ^ 6 + w ^ 3 * v ^ 6 * u ^ 6 + w ^ 2 * v ^ 7 * u ^ 6 + w ^ 6 * v ^ 2 * u ^ 7 + w ^ 2 * v ^ 6 * u ^ 7 + w ^ 15) - w ^ 12 * v ^ 3) - w ^ 11 * v ^ 4) - w ^ 8 * v ^ 7) - w ^ 7 * v ^ 8) - w ^ 4 * v ^ 11) - w ^ 3 * v ^ 12) + v ^ 15), 0, 0, (((-2 * u * w ^ 3 * v ^ 3 + v * w ^ 6 + 3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2) - 4 * v ^ 3 * w ^ 4) - 4 * v ^ 4 * w ^ 3) + v ^ 6 * w + v ^ 7 + w ^ 7, u ^ 2 * v ^ 13 * w ^ 13, u ^ 2 * (v ^ 2 + w ^ 2) * v ^ 9 * w ^ 9 * ((u * v * w - v ^ 3) - w ^ 3), u ^ 6 * v ^ 31 * w ^ 31, v ^ 4 * w ^ 4 * (v + w) * (((v ^ 5 + v ^ 4 * w + u ^ 2 * v ^ 3 + 2 * u ^ 3 * v ^ 2 + u ^ 2 * v ^ 2 * w + u ^ 2 * v * w ^ 2 + v * w ^ 4) - 2 * u ^ 3 * v * w) + w ^ 5 + u ^ 2 * w ^ 3 + 2 * u ^ 3 * w ^ 2), 0, 0, 2 * u ^ 2 * v ^ 9 * w ^ 9 * ((u * v * w - v ^ 3) - w ^ 3), v ^ 4 * w ^ 4 * (u ^ 2 * w ^ 4 + u ^ 2 * v * w ^ 3 + u ^ 2 * v ^ 3 * w + u ^ 2 * v ^ 4 + w ^ 6 + v * w ^ 5 + v ^ 3 * w ^ 3 + v ^ 5 * w + v ^ 6), u ^ 10 * (v + w) * v ^ 45 * w ^ 45 * ((u * v * w - v ^ 3) - w ^ 3), u ^ 10 * v ^ 47 * w ^ 47, ((((3 * u ^ 2 * v ^ 2 * w ^ 4 - 2 * w ^ 3 * v ^ 3 * u ^ 2) + 3 * u ^ 2 * v ^ 4 * w ^ 2 + w ^ 6 * v ^ 2) - 4 * v ^ 3 * w ^ 5) - 4 * v ^ 5 * w ^ 3) + v ^ 6 * w ^ 2 + v ^ 8 + w ^ 8, -(u ^ 10) * v ^ 45 * w ^ 45 * (2u + 9v + 9w), u ^ 2 * (v + w) * v ^ 9 * w ^ 9 * ((u * v * w - v ^ 3) - w ^ 3), -(u ^ 8) * v ^ 38 * w ^ 38, 0, u ^ 10 * (v ^ 2 + w ^ 2) * v ^ 45 * w ^ 45 * ((u * v * w - v ^ 3) - w ^ 3), -2 * u ^ 2 * v ^ 9 * w ^ 9 * (v ^ 2 + w ^ 2) * (u ^ 2 + 2 * v ^ 2 + 2 * w ^ 2), -(u ^ 2) * v ^ 9 * w ^ 9 * (2 * u ^ 2 + 9 * v ^ 2 + 9 * w ^ 2), u ^ 6 * v ^ 29 * w ^ 29, -(u ^ 10) * v ^ 45 * w ^ 45 * (u * v ^ 2 + u * w ^ 2 + 4 * v * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 4 * v ^ 2 * w + 4 * v ^ 3 + 4 * w ^ 3), v ^ 4 * w ^ 4 * (3 * u ^ 2 * w ^ 3 + 2 * u ^ 2 * v * w ^ 2 + 2 * u ^ 2 * v ^ 2 * w + 3 * u ^ 2 * v ^ 3 + u ^ 3 * w ^ 2 + u ^ 3 * v ^ 2 + 2 * w ^ 5 + v * w ^ 4 + w ^ 3 * v ^ 2 + v ^ 3 * w ^ 2 + v ^ 4 * w + 2 * v ^ 5), 0, -(u ^ 8) * v ^ 40 * w ^ 40, 0, -(u ^ 2) * v ^ 9 * w ^ 9 * (u * v ^ 2 + u * w ^ 2 + 4 * v * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 4 * v ^ 2 * w + 4 * v ^ 3 + 4 * w ^ 3), 0, -(u ^ 4) * (v + w) * v ^ 18 * w ^ 18 * ((u * v * w - v ^ 3) - w ^ 3), -(u ^ 4) * v ^ 20 * w ^ 20, v ^ 4 * w ^ 4 * (6 * u ^ 2 * w ^ 2 + 6 * u ^ 2 * v ^ 2 + 3 * w ^ 4 + 2 * v ^ 2 * w ^ 2 + 3 * v ^ 4), -(u ^ 2) * v ^ 9 * w ^ 9 * ((((-2 * u * w ^ 3 * v ^ 3 + v * w ^ 6 + 3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2) - 4 * v ^ 3 * w ^ 4) - 4 * v ^ 4 * w ^ 3) + v ^ 6 * w + v ^ 7 + w ^ 7), 0, u ^ 4 * v ^ 18 * w ^ 18 * (v + w) * ((((v ^ 7 - 2 * v ^ 4 * w ^ 3) - 2 * v ^ 3 * w ^ 4) - u * w ^ 3 * v ^ 3) + u ^ 2 * v ^ 3 * w ^ 2 + u ^ 2 * v ^ 2 * w ^ 3 + u ^ 3 * v ^ 2 * w ^ 2 + w ^ 7), v ^ 8 * w ^ 8 * (6 * u ^ 4 * w ^ 4 + 6 * u ^ 4 * v ^ 4 + 3 * w ^ 8 + 2 * v ^ 4 * w ^ 4 + 3 * v ^ 8), -(u ^ 6) * v ^ 27 * w ^ 27 * (u * v ^ 2 + u * w ^ 2 + 4 * v * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 4 * v ^ 2 * w + 4 * v ^ 3 + 4 * w ^ 3), -(u ^ 2) * v ^ 9 * w ^ 9 * (2 * v * w ^ 3 + u ^ 2 * v * w + 2 * v ^ 2 * w ^ 2 + 2 * v ^ 3 * w + v ^ 4 + w ^ 4), -(u ^ 4) * v ^ 22 * w ^ 22, -(u ^ 2) * v ^ 9 * w ^ 9 * (((((3 * u ^ 2 * v ^ 2 * w ^ 4 - 2 * w ^ 3 * v ^ 3 * u ^ 2) + 3 * u ^ 2 * v ^ 4 * w ^ 2 + w ^ 6 * v ^ 2) - 4 * v ^ 3 * w ^ 5) - 4 * v ^ 5 * w ^ 3) + v ^ 6 * w ^ 2 + v ^ 8 + w ^ 8), u ^ 6 * (v + w) * v ^ 27 * w ^ 27 * ((u * v * w - v ^ 3) - w ^ 3), -2 * u ^ 4 * v ^ 18 * w ^ 18 * ((u * v * w - v ^ 3) - w ^ 3), -(u ^ 8) * (v ^ 2 + w ^ 2) * v ^ 36 * w ^ 36 * ((u * v * w - v ^ 3) - w ^ 3), -2 * u ^ 8 * v ^ 36 * w ^ 36 * ((u * v * w - v ^ 3) - w ^ 3), u ^ 6 * (v ^ 2 + w ^ 2) * v ^ 27 * w ^ 27 * ((u * v * w - v ^ 3) - w ^ 3), -(u ^ 2) * v ^ 11 * w ^ 11 * (v + w) * ((-v - w) + 2u), u ^ 4 * v ^ 18 * w ^ 18 * ((((-2 * u * w ^ 3 * v ^ 3 + v * w ^ 6 + 3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2) - 4 * v ^ 3 * w ^ 4) - 4 * v ^ 4 * w ^ 3) + v ^ 6 * w + v ^ 7 + w ^ 7), -2 * u ^ 2 * v ^ 9 * w ^ 9 * ((w ^ 6 - 5 * v ^ 3 * w ^ 3) + v ^ 6 + 3 * u ^ 2 * v ^ 2 * w ^ 2), -(u ^ 2) * v ^ 9 * w ^ 9 * (u * v * w + 3 * v * w ^ 2 + 3 * v ^ 2 * w + v ^ 3 + w ^ 3), u ^ 4 * v ^ 18 * w ^ 18 * (v + 2w) * (2v + w), 0, u ^ 8 * v ^ 36 * w ^ 36 * (2 * u ^ 2 + 9 * v ^ 2 + 9 * w ^ 2), -(u ^ 2) * v ^ 9 * w ^ 9 * (v + 2w) * (2v + w), 2 * u ^ 4 * v ^ 18 * w ^ 18 * ((w ^ 6 - 5 * v ^ 3 * w ^ 3) + v ^ 6 + 3 * u ^ 2 * v ^ 2 * w ^ 2), -2 * u ^ 2 * (v + w) * v ^ 9 * w ^ 9 * (2v + 2w + u), u ^ 4 * v ^ 18 * w ^ 18 * (u * v * w + 3 * v * w ^ 2 + 3 * v ^ 2 * w + v ^ 3 + w ^ 3), 2 * u ^ 6 * v ^ 27 * w ^ 27 * ((u * v * w - v ^ 3) - w ^ 3), -(u ^ 10) * v ^ 45 * w ^ 45 * (2 * u ^ 2 + 9 * v ^ 2 + 9 * w ^ 2), 2 * u ^ 4 * (v + w) * v ^ 18 * w ^ 18 * (2v + 2w + u), -(u ^ 2) * v ^ 9 * w ^ 9 * (2u + 9v + 9w), -20 * u ^ 2 * v ^ 9 * w ^ 9, -2 * u ^ 6 * (v + w) * v ^ 27 * w ^ 27 * (2v + 2w + u), -(u ^ 6) * v ^ 27 * w ^ 27 * (2 * u ^ 2 + 9 * v ^ 2 + 9 * w ^ 2), u ^ 4 * v ^ 18 * w ^ 18 * (2u + 9v + 9w), -(u ^ 6) * v ^ 27 * w ^ 27 * (2u + 9v + 9w), -20 * u ^ 10 * v ^ 45 * w ^ 45, -20 * u ^ 6 * v ^ 27 * w ^ 27, 20 * u ^ 4 * v ^ 18 * w ^ 18, 20 * u ^ 8 * v ^ 36 * w ^ 36]
            end
        f20b(u, v, w) = begin
                return [20, 8u + 6v + 6w, 2 * u * v + 2 * u * w + u ^ 2 + v ^ 2 + w ^ 2, 4 * u * v + 4 * u * w + 6 * v * w + 4 * u ^ 2 + v ^ 2 + w ^ 2, 8 * u ^ 2 + 6 * v ^ 2 + 6 * w ^ 2, (v + w + u) * (((((v ^ 2 - v * w) - u * v) + w ^ 2) - u * w) + u ^ 2), 2 * u * v * w + v * w ^ 2 + u ^ 2 * v + u ^ 2 * w + v ^ 2 * w + u ^ 3, 0, 2 * u * v ^ 2 + 2 * u * w ^ 2 + 3 * v * w ^ 2 + 2 * u ^ 2 * v + 2 * u ^ 2 * w + 3 * v ^ 2 * w + 4 * u ^ 3 + v ^ 3 + w ^ 3, -(u ^ 2) * v * w, u ^ 4 * v ^ 2 * w ^ 2 * (((((((((((((w ^ 11 + v ^ 11 + w ^ 7 * v ^ 2 * u ^ 2 + w ^ 6 * v ^ 3 * u ^ 2 + w ^ 3 * v ^ 6 * u ^ 2 + w ^ 2 * u ^ 2 * v ^ 7) - u ^ 3 * w ^ 8) + w ^ 6 * v ^ 2 * u ^ 3 + w ^ 2 * u ^ 3 * v ^ 6) - u ^ 3 * v ^ 8) - u ^ 4 * w ^ 7) + w ^ 4 * v ^ 3 * u ^ 4 + w ^ 3 * v ^ 4 * u ^ 4) - u ^ 4 * v ^ 7) - w ^ 5 * v * u ^ 5) + u ^ 5 * v ^ 3 * w ^ 3) - w * v ^ 5 * u ^ 5) - w ^ 4 * v * u ^ 6) - w * u ^ 6 * v ^ 4) + w * v * u ^ 9), u * v * w ^ 2 + u * v ^ 2 * w + 2 * v ^ 2 * w ^ 2 + u ^ 3 * v + u ^ 3 * w + u ^ 4, 0, 4 * u ^ 2 * v ^ 2 + 4 * u ^ 2 * w ^ 2 + 6 * v ^ 2 * w ^ 2 + 4 * u ^ 4 + v ^ 4 + w ^ 4, (((((3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2 + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 4) - 2 * u ^ 3 * w ^ 4) - 2 * u ^ 4 * v ^ 3) - 2 * u ^ 4 * w ^ 3) + u ^ 7 + v ^ 7 + w ^ 7, (((-u * v * w ^ 2 - u * v ^ 2 * w) + v * w ^ 3) - u ^ 2 * v * w) + v ^ 3 * w + u ^ 4, (((((((-u * v * w ^ 3 + u * v ^ 2 * w ^ 2) - u * v ^ 3 * w) + v * w ^ 4 + u ^ 2 * v * w ^ 2 + u ^ 2 * v ^ 2 * w + w ^ 3 * v ^ 2) - 2 * u ^ 3 * v * w) + u ^ 3 * v ^ 2 + u ^ 3 * w ^ 2 + v ^ 3 * w ^ 2) - u ^ 4 * v) - u ^ 4 * w) + v ^ 4 * w + u ^ 5, 0, -(u ^ 4) * v ^ 2 * w ^ 2, 0, u ^ 8 * v ^ 4 * w ^ 4 * (w ^ 10 + v ^ 10 + u * w ^ 9 + v ^ 9 * u + u ^ 5 * w ^ 3 * v ^ 2 + u ^ 5 * v ^ 3 * w ^ 2 + u ^ 6 * v ^ 2 * w ^ 2), (((-u * v * w ^ 3 - u * v ^ 3 * w) + w ^ 3 * v ^ 2) - u ^ 3 * v * w) + v ^ 3 * w ^ 2 + u ^ 5, -(u ^ 10) * v ^ 7 * w ^ 7, 0, -(u ^ 44) * v ^ 32 * w ^ 32, u ^ 4 * v ^ 2 * w ^ 2 * (((((((w ^ 10 + v ^ 10 + 3 * v ^ 2 * u ^ 2 * w ^ 6 + 3 * w ^ 2 * u ^ 2 * v ^ 6) - 2 * u ^ 3 * w ^ 7) - 2 * u ^ 3 * v ^ 7) + 3 * u ^ 4 * v ^ 3 * w ^ 3) - 2 * u ^ 5 * v * w ^ 4) - 2 * u ^ 5 * v ^ 4 * w) + w * v * u ^ 8), 2 * u ^ 2 * v * w * (v ^ 2 + w ^ 2), 0, (((((((((-u * v ^ 2 * w ^ 3 - u * v ^ 3 * w ^ 2) + 3 * u ^ 2 * v ^ 2 * w ^ 2 + u ^ 2 * v ^ 4 + u ^ 2 * w ^ 4 + 2 * v ^ 2 * w ^ 4) - u ^ 3 * v * w ^ 2) - u ^ 3 * v ^ 2 * w) - u ^ 3 * v ^ 3) - u ^ 3 * w ^ 3) + u ^ 4 * v ^ 2 + u ^ 4 * w ^ 2 + 2 * v ^ 4 * w ^ 2) - u ^ 5 * v) - u ^ 5 * w) + u ^ 6, u ^ 4 * v ^ 3 * w ^ 5 + u ^ 4 * v ^ 5 * w ^ 3 + 2 * u ^ 6 * v ^ 3 * w ^ 3, ((9 * u ^ 2 * v ^ 2 * w ^ 2 - 4 * u ^ 3 * v ^ 3) - 4 * u ^ 3 * w ^ 3) + u ^ 6 + v ^ 6 + w ^ 6, u ^ 40 * v ^ 30 * w ^ 30 * (v + w + u) * (((((v ^ 2 - v * w) - u * v) + w ^ 2) - u * w) + u ^ 2), u ^ 8 * v ^ 4 * w ^ 4 * (((((((((((((w ^ 15 + v ^ 15 + w ^ 11 * v ^ 2 * u ^ 2 + w ^ 10 * v ^ 3 * u ^ 2 + w ^ 3 * u ^ 2 * v ^ 10 + w ^ 2 * v ^ 11 * u ^ 2) - w ^ 12 * u ^ 3) + w ^ 10 * v ^ 2 * u ^ 3 + w ^ 2 * v ^ 10 * u ^ 3) - v ^ 12 * u ^ 3) - w ^ 11 * u ^ 4) - v ^ 11 * u ^ 4) + w ^ 5 * u ^ 6 * v ^ 4 + w ^ 4 * u ^ 6 * v ^ 5) - w ^ 6 * v ^ 2 * u ^ 7) + w ^ 4 * u ^ 7 * v ^ 4) - w ^ 2 * v ^ 6 * u ^ 7) - w ^ 5 * u ^ 8 * v ^ 2) - w ^ 2 * u ^ 8 * v ^ 5) + w ^ 2 * v ^ 2 * u ^ 11), 0, 0, ((((((v * w ^ 6 + 3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v * w ^ 3) + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 3 * w) - 2 * u ^ 4 * v ^ 3) - 2 * u ^ 4 * w ^ 3) + v ^ 6 * w + u ^ 7, -(u ^ 12) * v ^ 8 * w ^ 8, u ^ 8 * v ^ 6 * w ^ 6 * ((((-u * v * w ^ 3 - u * v ^ 3 * w) + w ^ 3 * v ^ 2) - u ^ 3 * v * w) + v ^ 3 * w ^ 2 + u ^ 5), -(u ^ 28) * v ^ 20 * w ^ 20, u ^ 4 * v ^ 2 * w ^ 2 * (w ^ 6 + 2 * v * w ^ 5 + 2 * v ^ 5 * w + v ^ 6 + 2 * w ^ 5 * u + 2 * v ^ 5 * u + u ^ 2 * w ^ 4 + 2 * u ^ 2 * v ^ 2 * w ^ 2 + u ^ 2 * v ^ 4 + 2 * u ^ 3 * v * w ^ 2 + 2 * u ^ 3 * v ^ 2 * w + 2 * w * v * u ^ 4), u ^ 4 * v ^ 3 * w ^ 3 * (a * (u + v + w) + u), 0, u ^ 8 * v ^ 6 * w ^ 6 * (v + w + u) * (((((v ^ 2 - v * w) - u * v) + w ^ 2) - u * w) + u ^ 2), u ^ 4 * v ^ 2 * w ^ 2 * (w ^ 6 + v ^ 6 + w ^ 5 * u + v ^ 5 * u + u ^ 3 * v * w ^ 2 + u ^ 3 * v ^ 2 * w + w * v * u ^ 4), u ^ 40 * v ^ 30 * w ^ 30 * ((((-u * v * w ^ 2 - u * v ^ 2 * w) + v * w ^ 3) - u ^ 2 * v * w) + v ^ 3 * w + u ^ 4), -(u ^ 42) * v ^ 31 * w ^ 31, ((((((3 * u ^ 2 * v ^ 2 * w ^ 4 + 3 * u ^ 2 * v ^ 4 * w ^ 2 + w ^ 6 * v ^ 2) - 2 * w ^ 3 * v ^ 2 * u ^ 3) - 2 * w ^ 2 * v ^ 3 * u ^ 3) + 3 * u ^ 4 * v ^ 2 * w ^ 2) - 2 * u ^ 5 * v ^ 3) - 2 * u ^ 5 * w ^ 3) + v ^ 6 * w ^ 2 + u ^ 8, 2 * u ^ 40 * v ^ 30 * w ^ 30 * (3v + 3w + 4u), u ^ 8 * v ^ 6 * w ^ 6 * ((((-u * v * w ^ 2 - u * v ^ 2 * w) + v * w ^ 3) - u ^ 2 * v * w) + v ^ 3 * w + u ^ 4), -(u ^ 34) * v ^ 25 * w ^ 25, 0, u ^ 40 * v ^ 30 * w ^ 30 * ((((-u * v * w ^ 3 - u * v ^ 3 * w) + w ^ 3 * v ^ 2) - u ^ 3 * v * w) + v ^ 3 * w ^ 2 + u ^ 5), u ^ 8 * v ^ 6 * w ^ 6 * (4 * u ^ 2 * v ^ 2 + 4 * u ^ 2 * w ^ 2 + 6 * v ^ 2 * w ^ 2 + 4 * u ^ 4 + v ^ 4 + w ^ 4), 2 * u ^ 8 * v ^ 6 * w ^ 6 * (3 * w ^ 2 + 3 * v ^ 2 + 4 * u ^ 2), -(u ^ 26) * v ^ 19 * w ^ 19, u ^ 40 * v ^ 30 * w ^ 30 * (2 * u * v ^ 2 + 2 * u * w ^ 2 + 3 * v * w ^ 2 + 2 * u ^ 2 * v + 2 * u ^ 2 * w + 3 * v ^ 2 * w + 4 * u ^ 3 + v ^ 3 + w ^ 3), u ^ 4 * v ^ 2 * w ^ 2 * (3 * w ^ 5 + v * w ^ 4 + v ^ 4 * w + 3 * v ^ 5 + 2 * w ^ 4 * u + 2 * v ^ 4 * u + 2 * u ^ 2 * v * w ^ 2 + 2 * u ^ 2 * v ^ 2 * w + 4 * u ^ 3 * v * w), u ^ 12 * v ^ 9 * w ^ 9 * (a * (u + v + w) + u), -(u ^ 36) * v ^ 26 * w ^ 26, 4 * u ^ 4 * v ^ 3 * w ^ 3, u ^ 8 * v ^ 6 * w ^ 6 * (2 * u * v ^ 2 + 2 * u * w ^ 2 + 3 * v * w ^ 2 + 2 * u ^ 2 * v + 2 * u ^ 2 * w + 3 * v ^ 2 * w + 4 * u ^ 3 + v ^ 3 + w ^ 3), 4 * u ^ 20 * v ^ 15 * w ^ 15, u ^ 16 * v ^ 12 * w ^ 12 * ((((-u * v * w ^ 2 - u * v ^ 2 * w) + v * w ^ 3) - u ^ 2 * v * w) + v ^ 3 * w + u ^ 4), -(u ^ 18) * v ^ 13 * w ^ 13, 2 * u ^ 4 * v ^ 2 * w ^ 2 * (3 * w ^ 4 + 3 * v ^ 4 + 4 * u ^ 2 * v * w), u ^ 8 * v ^ 6 * w ^ 6 * (((((((v * w ^ 6 + 3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v * w ^ 3) + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 3 * w) - 2 * u ^ 4 * v ^ 3) - 2 * u ^ 4 * w ^ 3) + v ^ 6 * w + u ^ 7), 0, u ^ 16 * v ^ 12 * w ^ 12 * ((((((((((((v * w ^ 7 + w * v ^ 7 + u ^ 2 * v ^ 2 * w ^ 4 + 2 * w ^ 3 * v ^ 3 * u ^ 2 + u ^ 2 * v ^ 4 * w ^ 2) - v * u ^ 3 * w ^ 4) + 2 * w ^ 3 * v ^ 2 * u ^ 3 + 2 * w ^ 2 * v ^ 3 * u ^ 3) - w * v ^ 4 * u ^ 3) - u ^ 4 * w ^ 4) - v * u ^ 4 * w ^ 3) + u ^ 4 * v ^ 2 * w ^ 2) - u ^ 4 * v ^ 3 * w) - u ^ 4 * v ^ 4) - u ^ 5 * w ^ 3) - u ^ 5 * v ^ 3) + u ^ 8), 2 * u ^ 8 * v ^ 4 * w ^ 4 * (3 * w ^ 8 + 3 * v ^ 8 + 4 * u ^ 4 * v ^ 2 * w ^ 2), u ^ 24 * v ^ 18 * w ^ 18 * (2 * u * v ^ 2 + 2 * u * w ^ 2 + 3 * v * w ^ 2 + 2 * u ^ 2 * v + 2 * u ^ 2 * w + 3 * v ^ 2 * w + 4 * u ^ 3 + v ^ 3 + w ^ 3), u ^ 8 * v ^ 6 * w ^ 6 * (u * v * w ^ 2 + u * v ^ 2 * w + 2 * v ^ 2 * w ^ 2 + u ^ 3 * v + u ^ 3 * w + u ^ 4), -(u ^ 20) * v ^ 14 * w ^ 14, u ^ 8 * v ^ 6 * w ^ 6 * (((((((3 * u ^ 2 * v ^ 2 * w ^ 4 + 3 * u ^ 2 * v ^ 4 * w ^ 2 + w ^ 6 * v ^ 2) - 2 * w ^ 3 * v ^ 2 * u ^ 3) - 2 * w ^ 2 * v ^ 3 * u ^ 3) + 3 * u ^ 4 * v ^ 2 * w ^ 2) - 2 * u ^ 5 * v ^ 3) - 2 * u ^ 5 * w ^ 3) + v ^ 6 * w ^ 2 + u ^ 8), u ^ 24 * v ^ 18 * w ^ 18 * ((((-u * v * w ^ 2 - u * v ^ 2 * w) + v * w ^ 3) - u ^ 2 * v * w) + v ^ 3 * w + u ^ 4), u ^ 16 * v ^ 12 * w ^ 12 * (v + w + u) * (((((v ^ 2 - v * w) - u * v) + w ^ 2) - u * w) + u ^ 2), u ^ 32 * v ^ 24 * w ^ 24 * ((((-u * v * w ^ 3 - u * v ^ 3 * w) + w ^ 3 * v ^ 2) - u ^ 3 * v * w) + v ^ 3 * w ^ 2 + u ^ 5), u ^ 32 * v ^ 24 * w ^ 24 * (v + w + u) * (((((v ^ 2 - v * w) - u * v) + w ^ 2) - u * w) + u ^ 2), u ^ 24 * v ^ 18 * w ^ 18 * ((((-u * v * w ^ 3 - u * v ^ 3 * w) + w ^ 3 * v ^ 2) - u ^ 3 * v * w) + v ^ 3 * w ^ 2 + u ^ 5), 2 * u ^ 10 * v ^ 7 * w ^ 7 * (v ^ 2 + w ^ 2), u ^ 16 * v ^ 12 * w ^ 12 * (((((((v * w ^ 6 + 3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v * w ^ 3) + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 3 * w) - 2 * u ^ 4 * v ^ 3) - 2 * u ^ 4 * w ^ 3) + v ^ 6 * w + u ^ 7), u ^ 8 * v ^ 6 * w ^ 6 * (((9 * u ^ 2 * v ^ 2 * w ^ 2 - 4 * u ^ 3 * v ^ 3) - 4 * u ^ 3 * w ^ 3) + u ^ 6 + v ^ 6 + w ^ 6), u ^ 8 * v ^ 6 * w ^ 6 * (2 * u * v * w + v * w ^ 2 + u ^ 2 * v + u ^ 2 * w + v ^ 2 * w + u ^ 3), u ^ 16 * v ^ 12 * w ^ 12 * (2 * u * v + 2 * u * w + u ^ 2 + v ^ 2 + w ^ 2), 4 * u ^ 12 * v ^ 9 * w ^ 9, 2 * u ^ 32 * v ^ 24 * w ^ 24 * (3 * w ^ 2 + 3 * v ^ 2 + 4 * u ^ 2), u ^ 8 * v ^ 6 * w ^ 6 * (2 * u * v + 2 * u * w + u ^ 2 + v ^ 2 + w ^ 2), u ^ 16 * v ^ 12 * w ^ 12 * (((9 * u ^ 2 * v ^ 2 * w ^ 2 - 4 * u ^ 3 * v ^ 3) - 4 * u ^ 3 * w ^ 3) + u ^ 6 + v ^ 6 + w ^ 6), u ^ 8 * v ^ 6 * w ^ 6 * (4 * u * v + 4 * u * w + 6 * v * w + 4 * u ^ 2 + v ^ 2 + w ^ 2), u ^ 16 * v ^ 12 * w ^ 12 * (2 * u * v * w + v * w ^ 2 + u ^ 2 * v + u ^ 2 * w + v ^ 2 * w + u ^ 3), u ^ 24 * v ^ 18 * w ^ 18 * (v + w + u) * (((((v ^ 2 - v * w) - u * v) + w ^ 2) - u * w) + u ^ 2), 2 * u ^ 40 * v ^ 30 * w ^ 30 * (3 * w ^ 2 + 3 * v ^ 2 + 4 * u ^ 2), u ^ 16 * v ^ 12 * w ^ 12 * (4 * u * v + 4 * u * w + 6 * v * w + 4 * u ^ 2 + v ^ 2 + w ^ 2), 2 * u ^ 8 * v ^ 6 * w ^ 6 * (3v + 3w + 4u), 20 * u ^ 8 * v ^ 6 * w ^ 6, u ^ 24 * v ^ 18 * w ^ 18 * (4 * u * v + 4 * u * w + 6 * v * w + 4 * u ^ 2 + v ^ 2 + w ^ 2), 2 * u ^ 24 * v ^ 18 * w ^ 18 * (3 * w ^ 2 + 3 * v ^ 2 + 4 * u ^ 2), 2 * u ^ 16 * v ^ 12 * w ^ 12 * (3v + 3w + 4u), 2 * u ^ 24 * v ^ 18 * w ^ 18 * (3v + 3w + 4u), 20 * u ^ 40 * v ^ 30 * w ^ 30, 20 * u ^ 24 * v ^ 18 * w ^ 18, 20 * u ^ 16 * v ^ 12 * w ^ 12, 20 * u ^ 32 * v ^ 24 * w ^ 24]
            end
        f20c(u, v, w) = begin
                return [20, 6u + 11v + 3w, v * (4v + 4u + w), 6 * u * v + 2 * u * w + 4 * v * w + 2 * u ^ 2 + 6 * v ^ 2, 6 * u ^ 2 + 11 * v ^ 2 + 3 * w ^ 2, -2 * v * (-2 * v ^ 2 + u * w), v * (u + 2v) * (v + w + u), v ^ 2 * (u + v), 3 * u * v ^ 2 + u * w ^ 2 + 2 * v * w ^ 2 + 3 * u ^ 2 * v + u ^ 2 * w + 2 * v ^ 2 * w + 2 * u ^ 3 + 6 * v ^ 3, -(v ^ 2) * ((u * w + u ^ 2) - v ^ 2), -(v ^ 8) * ((((((((((((v * u ^ 3 * w ^ 7 + w ^ 6 * v ^ 2 * u ^ 3) - v ^ 5 * u ^ 3 * w ^ 3) - w ^ 2 * v ^ 5 * u ^ 4) - u ^ 4 * v ^ 7) - u ^ 5 * w ^ 6) - w ^ 5 * v * u ^ 5) - 2 * u ^ 6 * w ^ 5) - w ^ 4 * v * u ^ 6) + u ^ 6 * v ^ 2 * w ^ 3) - u ^ 7 * w ^ 4) + u ^ 7 * v * w ^ 3 + u ^ 7 * v ^ 2 * w ^ 2 + v ^ 4 * u ^ 7 + v * u ^ 8 * w ^ 2 + u ^ 8 * v ^ 3 + v ^ 2 * u ^ 9 + v * u ^ 10) - v ^ 11), v * (u * w ^ 2 + 2 * u * v ^ 2 + u ^ 2 * v + v * w ^ 2 + u ^ 3 + v ^ 2 * w + 2 * v ^ 3), 0, 6 * u ^ 2 * v ^ 2 + 2 * u ^ 2 * w ^ 2 + 4 * v ^ 2 * w ^ 2 + 2 * u ^ 4 + 6 * v ^ 4, -(v ^ 2) * ((((-2 * u ^ 2 * w ^ 3 - 2 * u ^ 2 * v * w ^ 2) - 2 * u ^ 3 * w ^ 2) + 4 * u ^ 3 * v ^ 2 + v * w ^ 4 + 4 * u ^ 4 * v + w ^ 3 * v ^ 2) - 4 * v ^ 5), -v * ((((u * v * w - u * v ^ 2) + u ^ 2 * w) - v ^ 2 * w) - 2 * v ^ 3), ((((((((u * v ^ 2 * w ^ 2 - u * v ^ 3 * w) - v ^ 4 * u) + u ^ 2 * v * w ^ 2) - w ^ 3 * v ^ 2) - u ^ 3 * v * w) - u ^ 3 * v ^ 2) + u ^ 3 * w ^ 2 + v ^ 3 * w ^ 2) - u ^ 4 * v) + 2 * v ^ 5, 0, -(v ^ 4) * ((u ^ 2 * w ^ 2 + u ^ 4) - v ^ 4), 0, v ^ 13 * (u ^ 6 * w ^ 7 + v * u ^ 6 * w ^ 6 + u ^ 7 * w ^ 6 + u ^ 8 * v * w ^ 4 + v ^ 5 * u ^ 8 + u ^ 9 * w ^ 4 + v ^ 4 * u ^ 9 + u ^ 13 + v ^ 13), -v * ((((u * v ^ 2 * w - u ^ 2 * v ^ 2) + u ^ 3 * w) - v ^ 2 * w ^ 2) - 2 * v ^ 4), u ^ 6 * v ^ 13 * w ^ 3 * ((u * w + u ^ 2) - v ^ 2), v ^ 10 * (u + v) * ((((u ^ 4 - u ^ 3 * v) + u ^ 2 * v ^ 2) - u * v ^ 3) + v ^ 4), u ^ 30 * v ^ 59 * w ^ 15 * ((u ^ 2 * w ^ 2 + u ^ 4) - v ^ 4), -(v ^ 8) * (((((((2 * v * u ^ 3 * w ^ 6 - u ^ 3 * v ^ 4 * w ^ 3) - w ^ 2 * u ^ 4 * v ^ 4) - u ^ 4 * v ^ 6) - 3 * u ^ 5 * w ^ 5) - 3 * u ^ 6 * w ^ 4) + 2 * v * u ^ 6 * w ^ 3 + 2 * v * u ^ 7 * w ^ 2 + 2 * u ^ 7 * v ^ 3 + 2 * v * u ^ 9) - v ^ 10), -(v ^ 3) * ((-2 * u ^ 2 * w + u ^ 2 * v + 2 * u ^ 3) - v ^ 3), 0, ((((((((-u * v ^ 3 * w ^ 2 - 2 * v ^ 5 * u) + 2 * u ^ 2 * v ^ 2 * w ^ 2 + 2 * u ^ 2 * v ^ 4) - u ^ 3 * v * w ^ 2) - 3 * u ^ 3 * v ^ 3) - v ^ 3 * w ^ 3) + u ^ 4 * v ^ 2 + u ^ 4 * w ^ 2 + 2 * v ^ 4 * w ^ 2) - u ^ 5 * v) - v ^ 5 * w) + 2 * v ^ 6, 0, -2 * v ^ 2 * ((-3 * u ^ 2 * w ^ 2 + 4 * u ^ 3 * v + v * w ^ 3) - 2 * v ^ 4), 2 * u ^ 30 * v ^ 56 * w ^ 15 * (-2 * v ^ 2 + u * w), -(v ^ 14) * ((((((((((((v * u ^ 6 * w ^ 10 + v ^ 2 * u ^ 6 * w ^ 9) - v ^ 5 * u ^ 6 * w ^ 6) - u ^ 8 * w ^ 9) - v * u ^ 8 * w ^ 8) - v ^ 5 * u ^ 8 * w ^ 4) - v ^ 9 * u ^ 8) - u ^ 9 * w ^ 8) + v ^ 2 * u ^ 9 * w ^ 6) - u ^ 10 * w ^ 7) - u ^ 11 * w ^ 6) + v ^ 2 * u ^ 11 * w ^ 4 + v ^ 6 * u ^ 11 + v * u ^ 12 * w ^ 4 + v ^ 5 * u ^ 12 + v ^ 2 * u ^ 15 + v * u ^ 16) - v ^ 17), 0, 0, -(v ^ 2) * (((((-(v ^ 4) * u - 3 * u ^ 2 * v * w ^ 2) - 3 * u ^ 3 * w ^ 2) + 2 * u ^ 3 * v * w + 4 * u ^ 3 * v ^ 2 + 2 * u ^ 4 * v + 2 * w ^ 3 * v ^ 2) - v ^ 4 * w) - 2 * v ^ 5), u ^ 6 * v ^ 15 * w ^ 3 * ((u ^ 2 * w ^ 2 + u ^ 4) - v ^ 4), u ^ 6 * v ^ 12 * w ^ 3 * ((((u * v ^ 2 * w - u ^ 2 * v ^ 2) + u ^ 3 * w) - v ^ 2 * w ^ 2) - 2 * v ^ 4), u ^ 18 * v ^ 37 * w ^ 9 * ((u ^ 2 * w ^ 2 + u ^ 4) - v ^ 4), v ^ 6 * (2 * v * u ^ 3 * w ^ 4 + 2 * w ^ 3 * v ^ 2 * u ^ 3 + 2 * u ^ 4 * w ^ 4 + 4 * v * u ^ 4 * w ^ 3 + u ^ 4 * v ^ 2 * w ^ 2 + u ^ 4 * v ^ 4 + 2 * u ^ 5 * v * w ^ 2 + 2 * u ^ 5 * v ^ 3 + u ^ 6 * w ^ 2 + u ^ 6 * v ^ 2 + u ^ 8 + v ^ 8), 0, 0, 2 * u ^ 6 * w ^ 3 * v ^ 12 * (-2 * v ^ 2 + u * w), v ^ 7 * (u ^ 3 * w ^ 4 + u ^ 3 * v * w ^ 3 + u ^ 4 * w ^ 3 + u ^ 4 * v * w ^ 2 + u ^ 4 * v ^ 3 + u ^ 5 * w ^ 2 + u ^ 5 * v ^ 2 + u ^ 7 + v ^ 7), u ^ 30 * v ^ 56 * w ^ 15 * ((((u * v * w - u * v ^ 2) + u ^ 2 * w) - v ^ 2 * w) - 2 * v ^ 3), u ^ 30 * v ^ 57 * w ^ 15 * ((u * w + u ^ 2) - v ^ 2), -(v ^ 2) * ((((((-3 * u ^ 2 * v ^ 2 * w ^ 2 - u ^ 2 * v ^ 4) + 2 * u ^ 3 * v * w ^ 2 + 4 * u ^ 3 * v ^ 3) - 3 * u ^ 4 * w ^ 2) + 2 * u ^ 5 * v + 2 * v ^ 3 * w ^ 3) - v ^ 4 * w ^ 2) - 2 * v ^ 6), -(u ^ 30) * v ^ 55 * w ^ 15 * (6u + 11v + 3w), u ^ 6 * v ^ 12 * w ^ 3 * ((((u * v * w - u * v ^ 2) + u ^ 2 * w) - v ^ 2 * w) - 2 * v ^ 3), -(u ^ 24) * v ^ 46 * w ^ 12 * ((u * w + u ^ 2) - v ^ 2), 0, u ^ 30 * v ^ 56 * w ^ 15 * ((((u * v ^ 2 * w - u ^ 2 * v ^ 2) + u ^ 3 * w) - v ^ 2 * w ^ 2) - 2 * v ^ 4), -2 * u ^ 6 * v ^ 11 * w ^ 3 * (2 * v ^ 2 * w ^ 2 + 3 * v ^ 4 + u ^ 2 * w ^ 2 + 3 * u ^ 2 * v ^ 2 + u ^ 4), -(u ^ 6) * v ^ 11 * w ^ 3 * (6 * u ^ 2 + 11 * v ^ 2 + 3 * w ^ 2), u ^ 18 * v ^ 35 * w ^ 9 * ((u * w + u ^ 2) - v ^ 2), -(u ^ 30) * v ^ 55 * w ^ 15 * (3 * u * v ^ 2 + u * w ^ 2 + 2 * v * w ^ 2 + 3 * u ^ 2 * v + u ^ 2 * w + 2 * v ^ 2 * w + 2 * u ^ 3 + 6 * v ^ 3), v ^ 6 * (2 * u ^ 3 * w ^ 4 + 4 * u ^ 3 * v * w ^ 3 + 3 * u ^ 4 * w ^ 3 + 3 * u ^ 4 * v * w ^ 2 + 2 * u ^ 4 * v ^ 3 + 2 * u ^ 5 * w ^ 2 + u ^ 5 * v ^ 2 + u ^ 6 * v + u ^ 7 + v ^ 7), 0, -(u ^ 24) * v ^ 48 * w ^ 12 * ((u ^ 2 * w ^ 2 + u ^ 4) - v ^ 4), 0, -(u ^ 6) * v ^ 11 * w ^ 3 * (3 * u * v ^ 2 + u * w ^ 2 + 2 * v * w ^ 2 + 3 * u ^ 2 * v + u ^ 2 * w + 2 * v ^ 2 * w + 2 * u ^ 3 + 6 * v ^ 3), 0, -(u ^ 12) * v ^ 23 * w ^ 6 * ((((u * v * w - u * v ^ 2) + u ^ 2 * w) - v ^ 2 * w) - 2 * v ^ 3), -(u ^ 12) * v ^ 24 * w ^ 6 * ((u * w + u ^ 2) - v ^ 2), v ^ 6 * (8 * u ^ 3 * w ^ 3 + 6 * u ^ 4 * w ^ 2 + 3 * u ^ 4 * v ^ 2 + 2 * u ^ 6 + v ^ 6), u ^ 6 * v ^ 13 * w ^ 3 * (((((-(v ^ 4) * u - 3 * u ^ 2 * v * w ^ 2) - 3 * u ^ 3 * w ^ 2) + 2 * u ^ 3 * v * w + 4 * u ^ 3 * v ^ 2 + 2 * u ^ 4 * v + 2 * w ^ 3 * v ^ 2) - v ^ 4 * w) - 2 * v ^ 5), 0, -(u ^ 12) * v ^ 24 * w ^ 6 * (((((((((((v ^ 2 * w ^ 4 + v ^ 3 * w ^ 3) - v ^ 5 * w) - 2 * v ^ 6) - v ^ 5 * u) - u ^ 2 * v * w ^ 3) - u ^ 2 * v ^ 2 * w ^ 2) - u ^ 3 * w ^ 3) - 2 * u ^ 3 * v * w ^ 2) + u ^ 3 * v ^ 2 * w + 2 * u ^ 3 * v ^ 3) - u ^ 4 * w ^ 2) + w * v * u ^ 4 + 3 * u ^ 4 * v ^ 2 + u ^ 5 * v), v ^ 12 * (8 * u ^ 6 * w ^ 6 + 6 * u ^ 8 * w ^ 4 + 3 * v ^ 4 * u ^ 8 + 2 * u ^ 12 + v ^ 12), -(u ^ 18) * v ^ 33 * w ^ 9 * (3 * u * v ^ 2 + u * w ^ 2 + 2 * v * w ^ 2 + 3 * u ^ 2 * v + u ^ 2 * w + 2 * v ^ 2 * w + 2 * u ^ 3 + 6 * v ^ 3), -(u ^ 6) * v ^ 12 * w ^ 3 * (u * w ^ 2 + 2 * u * v ^ 2 + u ^ 2 * v + v * w ^ 2 + u ^ 3 + v ^ 2 * w + 2 * v ^ 3), -(u ^ 12) * v ^ 26 * w ^ 6 * ((u ^ 2 * w ^ 2 + u ^ 4) - v ^ 4), u ^ 6 * v ^ 13 * w ^ 3 * ((((((-3 * u ^ 2 * v ^ 2 * w ^ 2 - u ^ 2 * v ^ 4) + 2 * u ^ 3 * v * w ^ 2 + 4 * u ^ 3 * v ^ 3) - 3 * u ^ 4 * w ^ 2) + 2 * u ^ 5 * v + 2 * v ^ 3 * w ^ 3) - v ^ 4 * w ^ 2) - 2 * v ^ 6), u ^ 18 * v ^ 34 * w ^ 9 * ((((u * v * w - u * v ^ 2) + u ^ 2 * w) - v ^ 2 * w) - 2 * v ^ 3), -2 * u ^ 12 * v ^ 23 * w ^ 6 * (-2 * v ^ 2 + u * w), -(u ^ 24) * v ^ 45 * w ^ 12 * ((((u * v ^ 2 * w - u ^ 2 * v ^ 2) + u ^ 3 * w) - v ^ 2 * w ^ 2) - 2 * v ^ 4), -2 * u ^ 24 * v ^ 45 * w ^ 12 * (-2 * v ^ 2 + u * w), u ^ 18 * v ^ 34 * w ^ 9 * ((((u * v ^ 2 * w - u ^ 2 * v ^ 2) + u ^ 3 * w) - v ^ 2 * w ^ 2) - 2 * v ^ 4), u ^ 6 * v ^ 14 * w ^ 3 * ((-2 * u ^ 2 * w + u ^ 2 * v + 2 * u ^ 3) - v ^ 3), -(u ^ 12) * v ^ 24 * w ^ 6 * (((((-(v ^ 4) * u - 3 * u ^ 2 * v * w ^ 2) - 3 * u ^ 3 * w ^ 2) + 2 * u ^ 3 * v * w + 4 * u ^ 3 * v ^ 2 + 2 * u ^ 4 * v + 2 * w ^ 3 * v ^ 2) - v ^ 4 * w) - 2 * v ^ 5), 2 * u ^ 6 * v ^ 13 * w ^ 3 * ((-3 * u ^ 2 * w ^ 2 + 4 * u ^ 3 * v + v * w ^ 3) - 2 * v ^ 4), -(u ^ 6) * v ^ 12 * w ^ 3 * (u + 2v) * (v + w + u), u ^ 12 * v ^ 23 * w ^ 6 * (4v + 4u + w), 0, u ^ 24 * v ^ 44 * w ^ 12 * (6 * u ^ 2 + 11 * v ^ 2 + 3 * w ^ 2), -(u ^ 6) * v ^ 12 * w ^ 3 * (4v + 4u + w), -2 * u ^ 12 * v ^ 24 * w ^ 6 * ((-3 * u ^ 2 * w ^ 2 + 4 * u ^ 3 * v + v * w ^ 3) - 2 * v ^ 4), -2 * u ^ 6 * v ^ 11 * w ^ 3 * (2 * v * w + 3 * v ^ 2 + u * w + 3 * u * v + u ^ 2), u ^ 12 * v ^ 23 * w ^ 6 * (u + 2v) * (v + w + u), 2 * u ^ 18 * v ^ 34 * w ^ 9 * (-2 * v ^ 2 + u * w), -(u ^ 30) * v ^ 55 * w ^ 15 * (6 * u ^ 2 + 11 * v ^ 2 + 3 * w ^ 2), 2 * u ^ 12 * v ^ 22 * w ^ 6 * (2 * v * w + 3 * v ^ 2 + u * w + 3 * u * v + u ^ 2), -(u ^ 6) * v ^ 11 * w ^ 3 * (6u + 11v + 3w), -20 * u ^ 6 * v ^ 11 * w ^ 3, -2 * u ^ 18 * v ^ 33 * w ^ 9 * (2 * v * w + 3 * v ^ 2 + u * w + 3 * u * v + u ^ 2), -(u ^ 18) * v ^ 33 * w ^ 9 * (6 * u ^ 2 + 11 * v ^ 2 + 3 * w ^ 2), u ^ 12 * v ^ 22 * w ^ 6 * (6u + 11v + 3w), -(u ^ 18) * v ^ 33 * w ^ 9 * (6u + 11v + 3w), -20 * u ^ 30 * v ^ 55 * w ^ 15, -20 * u ^ 18 * v ^ 33 * w ^ 9, 20 * u ^ 12 * v ^ 22 * w ^ 6, 20 * u ^ 24 * v ^ 44 * w ^ 12]
            end
        f20d(u, v, w) = begin
                return [20, 3u + 8v + 9w, u * w + 4 * v * w + 2 * v ^ 2 + 2 * w ^ 2, 4 * u * v + 2 * u * w + 8 * v * w + 2 * v ^ 2 + 4 * w ^ 2, 3 * u ^ 2 + 8 * v ^ 2 + 9 * w ^ 2, -2 * u * v * w + 2 * v ^ 3 + 2 * w ^ 3, 2 * u * v * w + u * v ^ 2 + 3 * v * w ^ 2 + 2 * v ^ 2 * w + w ^ 3, v * w * (w + v), 2 * u * v ^ 2 + u * w ^ 2 + 4 * v * w ^ 2 + 2 * u ^ 2 * v + u ^ 2 * w + 4 * v ^ 2 * w + 2 * v ^ 3 + 4 * w ^ 3, -u * v * w ^ 2, -(v ^ 3) * w ^ 4 * ((((((((((((((u ^ 2 * v ^ 6 * w ^ 4 + w ^ 3 * v ^ 7 * u ^ 2) - v ^ 10 * u ^ 2) - u ^ 3 * w ^ 9) + v ^ 3 * u ^ 3 * w ^ 6 + w ^ 5 * v ^ 4 * u ^ 3) - w ^ 3 * v ^ 5 * u ^ 4) - u ^ 4 * v ^ 6 * w ^ 2) - v * w ^ 11) - w ^ 5 * v ^ 2 * u ^ 5) - w ^ 4 * v ^ 3 * u ^ 5) - w ^ 2 * v ^ 5 * u ^ 5) + u ^ 6 * w ^ 6) - u ^ 6 * v ^ 2 * w ^ 4) + w ^ 5 * u ^ 7 + v ^ 4 * w ^ 8 + v ^ 5 * w ^ 7 + v ^ 8 * w ^ 4 + w ^ 3 * v ^ 9) - v ^ 12), u * v ^ 2 * w + 2 * v * w ^ 3 + u ^ 2 * v * w + u ^ 2 * v ^ 2 + 2 * v ^ 2 * w ^ 2 + v ^ 3 * w + w ^ 4, 0, 4 * u ^ 2 * v ^ 2 + 2 * u ^ 2 * w ^ 2 + 8 * v ^ 2 * w ^ 2 + 2 * v ^ 4 + 4 * w ^ 4, (((((2 * u ^ 2 * v ^ 2 * w ^ 3 + 2 * u ^ 2 * v ^ 3 * w ^ 2 + 2 * u ^ 3 * v ^ 2 * w ^ 2) - u ^ 3 * w ^ 4) - 4 * v ^ 3 * w ^ 4) - u ^ 4 * w ^ 3) - 4 * v ^ 4 * w ^ 3) + 2 * v ^ 7 + 2 * w ^ 7, (-u * v * w ^ 2 - u * v ^ 2 * w) + u * v ^ 3 + v * w ^ 3 + v ^ 3 * w + w ^ 4, ((((((-2 * u * v * w ^ 3 - u * v ^ 3 * w) + v ^ 4 * u) - v * w ^ 4) + u ^ 2 * v * w ^ 2 + u ^ 2 * v ^ 2 * w + u ^ 2 * v ^ 3 + u ^ 2 * w ^ 3) - u ^ 3 * v * w) - v ^ 3 * w ^ 2) + w ^ 5, 0, -(u ^ 2) * v ^ 2 * w ^ 4, 0, v ^ 6 * w ^ 8 * (w * v ^ 7 * u ^ 4 + u ^ 4 * v ^ 8 + u ^ 6 * w ^ 6 + w ^ 5 * v * u ^ 6 + w ^ 5 * u ^ 7 + v ^ 2 * w ^ 10 + v ^ 3 * w ^ 9 + w * v ^ 11 + v ^ 12), (-u * v * w ^ 3 - u * v ^ 3 * w) + u ^ 2 * v ^ 3 + w ^ 3 * v ^ 2 + v ^ 3 * w ^ 2 + w ^ 5, u ^ 4 * v ^ 9 * w ^ 11, v ^ 5 * w ^ 5 * (w + v) * ((((w ^ 4 - v * w ^ 3) + v ^ 2 * w ^ 2) - v ^ 3 * w) + v ^ 4), u ^ 17 * v ^ 42 * w ^ 49, -(v ^ 3) * w ^ 4 * ((((((((2 * w ^ 3 * v ^ 6 * u ^ 2 - v ^ 9 * u ^ 2) - u ^ 3 * w ^ 8) + 2 * w ^ 5 * v ^ 3 * u ^ 3) - 3 * w ^ 2 * v ^ 5 * u ^ 4) - v * w ^ 10) - 3 * w ^ 4 * v ^ 2 * u ^ 5) + 2 * u ^ 6 * w ^ 5 + 2 * v ^ 4 * w ^ 7 + 2 * w ^ 3 * v ^ 8) - v ^ 11), v ^ 2 * w ^ 2 * ((-(v ^ 2) + 2 * u * v) - w ^ 2), 0, (((((((((-u * v ^ 2 * w ^ 3 - 2 * v * w ^ 5) - u ^ 2 * v * w ^ 3) + 2 * u ^ 2 * v ^ 2 * w ^ 2) - u ^ 2 * v ^ 3 * w) + 2 * u ^ 2 * v ^ 4 + u ^ 2 * w ^ 4 + 2 * v ^ 2 * w ^ 4) - u ^ 3 * v ^ 2 * w) - 3 * v ^ 3 * w ^ 3) + 2 * v ^ 4 * w ^ 2) - v ^ 5 * w) + w ^ 6, 0, ((6 * u ^ 2 * v ^ 2 * w ^ 2 - 2 * u ^ 3 * w ^ 3) - 8 * v ^ 3 * w ^ 3) + 2 * v ^ 6 + 2 * w ^ 6, 2 * u ^ 15 * v ^ 40 * w ^ 45 * ((-(v ^ 3) + u * v * w) - w ^ 3), -(v ^ 6) * w ^ 8 * ((((((((((((((w ^ 4 * u ^ 4 * v ^ 9 + w ^ 3 * v ^ 10 * u ^ 4) - v ^ 13 * u ^ 4) - w ^ 11 * u ^ 6) + w ^ 8 * v ^ 3 * u ^ 6 + w ^ 7 * v ^ 4 * u ^ 6) - w ^ 3 * v ^ 8 * u ^ 6) - w ^ 2 * v ^ 9 * u ^ 6) - w ^ 2 * v ^ 8 * u ^ 7) - w ^ 7 * v ^ 2 * u ^ 8) - w ^ 6 * v ^ 3 * u ^ 8) - v ^ 2 * w ^ 15) + u ^ 9 * w ^ 8) - v ^ 2 * u ^ 9 * w ^ 6) + u ^ 10 * w ^ 7 + w ^ 12 * v ^ 5 + w ^ 11 * v ^ 6 + v ^ 13 * w ^ 4 + v ^ 14 * w ^ 3) - v ^ 17), 0, 0, ((((-2 * u * v ^ 3 * w ^ 3 + u * v ^ 6 + v * w ^ 6 + 3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v * w ^ 3) - 4 * v ^ 3 * w ^ 4) - 2 * v ^ 4 * w ^ 3) + v ^ 6 * w + w ^ 7, u ^ 5 * v ^ 10 * w ^ 13, -(u ^ 3) * v ^ 8 * w ^ 9 * ((-u * v * w ^ 3 - u * v ^ 3 * w) + u ^ 2 * v ^ 3 + w ^ 3 * v ^ 2 + v ^ 3 * w ^ 2 + w ^ 5), u ^ 11 * v ^ 26 * w ^ 31, v ^ 3 * w ^ 4 * (u ^ 2 * v ^ 3 * w ^ 2 + 2 * w * v ^ 4 * u ^ 2 + v ^ 5 * u ^ 2 + 2 * u ^ 3 * w ^ 4 + 2 * u ^ 3 * v * w ^ 3 + 2 * u ^ 3 * v ^ 4 + 2 * u ^ 4 * w ^ 3 + 2 * u ^ 4 * v * w ^ 2 + v * w ^ 6 + 2 * v ^ 2 * w ^ 5 + 2 * v ^ 6 * w + v ^ 7), 0, 0, 2 * u ^ 3 * v ^ 8 * w ^ 9 * ((-(v ^ 3) + u * v * w) - w ^ 3), v ^ 3 * w ^ 4 * (w * v ^ 4 * u ^ 2 + v ^ 5 * u ^ 2 + u ^ 3 * w ^ 4 + u ^ 3 * v * w ^ 3 + u ^ 4 * w ^ 3 + v * w ^ 6 + v ^ 2 * w ^ 5 + v ^ 6 * w + v ^ 7), -(u ^ 15) * v ^ 40 * w ^ 45 * ((-u * v * w ^ 2 - u * v ^ 2 * w) + u * v ^ 3 + v * w ^ 3 + v ^ 3 * w + w ^ 4), u ^ 16 * v ^ 41 * w ^ 47, (((((3 * u ^ 2 * v ^ 2 * w ^ 4 - 2 * w ^ 3 * v ^ 3 * u ^ 2) + 3 * u ^ 2 * v ^ 4 * w ^ 2 + u ^ 2 * v ^ 6 + w ^ 6 * v ^ 2) - 2 * w ^ 3 * v ^ 2 * u ^ 3) - 4 * v ^ 3 * w ^ 5) - 2 * v ^ 5 * w ^ 3) + v ^ 6 * w ^ 2 + w ^ 8, -(u ^ 15) * v ^ 40 * w ^ 45 * (3u + 8v + 9w), -(u ^ 3) * v ^ 8 * w ^ 9 * ((-u * v * w ^ 2 - u * v ^ 2 * w) + u * v ^ 3 + v * w ^ 3 + v ^ 3 * w + w ^ 4), -(u ^ 13) * v ^ 33 * w ^ 38, 0, -(u ^ 15) * v ^ 40 * w ^ 45 * ((-u * v * w ^ 3 - u * v ^ 3 * w) + u ^ 2 * v ^ 3 + w ^ 3 * v ^ 2 + v ^ 3 * w ^ 2 + w ^ 5), -2 * u ^ 3 * v ^ 8 * w ^ 9 * (2 * w ^ 4 + 4 * v ^ 2 * w ^ 2 + v ^ 4 + u ^ 2 * w ^ 2 + 2 * u ^ 2 * v ^ 2), -(u ^ 3) * v ^ 8 * w ^ 9 * (3 * u ^ 2 + 8 * v ^ 2 + 9 * w ^ 2), u ^ 10 * v ^ 25 * w ^ 29, -(u ^ 15) * v ^ 40 * w ^ 45 * (2 * u * v ^ 2 + u * w ^ 2 + 4 * v * w ^ 2 + 2 * u ^ 2 * v + u ^ 2 * w + 4 * v ^ 2 * w + 2 * v ^ 3 + 4 * w ^ 3), v ^ 3 * w ^ 4 * (2 * u ^ 2 * v ^ 3 * w + 3 * u ^ 2 * v ^ 4 + 4 * u ^ 3 * w ^ 3 + 2 * u ^ 3 * v * w ^ 2 + u ^ 3 * v ^ 3 + 2 * u ^ 4 * w ^ 2 + 2 * v * w ^ 5 + v ^ 2 * w ^ 4 + v ^ 5 * w + 2 * v ^ 6), 0, -(u ^ 14) * v ^ 34 * w ^ 40, 0, -(u ^ 3) * v ^ 8 * w ^ 9 * (2 * u * v ^ 2 + u * w ^ 2 + 4 * v * w ^ 2 + 2 * u ^ 2 * v + u ^ 2 * w + 4 * v ^ 2 * w + 2 * v ^ 3 + 4 * w ^ 3), 0, u ^ 6 * v ^ 16 * w ^ 18 * ((-u * v * w ^ 2 - u * v ^ 2 * w) + u * v ^ 3 + v * w ^ 3 + v ^ 3 * w + w ^ 4), -(u ^ 7) * v ^ 17 * w ^ 20, v ^ 3 * w ^ 4 * (6 * u ^ 2 * v ^ 3 + 8 * u ^ 3 * w ^ 2 + 3 * v * w ^ 4 + 3 * v ^ 5), u ^ 3 * v ^ 8 * w ^ 9 * ((((((((-(w ^ 7) - v * w ^ 6) + 4 * v ^ 3 * w ^ 4 + 2 * v ^ 4 * w ^ 3) - v ^ 6 * w) + 2 * u * v ^ 3 * w ^ 3) - u * v ^ 6) - 3 * u ^ 2 * v ^ 2 * w ^ 3) - 3 * u ^ 2 * v ^ 3 * w ^ 2) + 2 * u ^ 3 * v * w ^ 3), 0, -(u ^ 6) * v ^ 16 * w ^ 18 * ((((((((((((-(w ^ 8) - w ^ 7 * v) + 2 * v ^ 3 * w ^ 5 + 3 * w ^ 4 * v ^ 4 + v ^ 5 * w ^ 3) - w * v ^ 7) + w ^ 4 * v ^ 3 * u + w ^ 3 * v ^ 4 * u) - v ^ 7 * u) - u ^ 2 * v ^ 2 * w ^ 4) - 2 * w ^ 3 * v ^ 3 * u ^ 2) - u ^ 2 * v ^ 4 * w ^ 2) + v * u ^ 3 * w ^ 4) - w ^ 3 * v ^ 2 * u ^ 3) - w ^ 2 * v ^ 3 * u ^ 3) + v * u ^ 4 * w ^ 3), v ^ 6 * w ^ 8 * (6 * u ^ 4 * v ^ 6 + 8 * u ^ 6 * w ^ 4 + 3 * v ^ 2 * w ^ 8 + 3 * v ^ 10), -(u ^ 9) * v ^ 24 * w ^ 27 * (2 * u * v ^ 2 + u * w ^ 2 + 4 * v * w ^ 2 + 2 * u ^ 2 * v + u ^ 2 * w + 4 * v ^ 2 * w + 2 * v ^ 3 + 4 * w ^ 3), -(u ^ 3) * v ^ 8 * w ^ 9 * (u * v ^ 2 * w + 2 * v * w ^ 3 + u ^ 2 * v * w + u ^ 2 * v ^ 2 + 2 * v ^ 2 * w ^ 2 + v ^ 3 * w + w ^ 4), -(u ^ 8) * v ^ 18 * w ^ 22, u ^ 3 * v ^ 8 * w ^ 9 * ((((((((-(w ^ 8) - w ^ 6 * v ^ 2) + 4 * v ^ 3 * w ^ 5 + 2 * v ^ 5 * w ^ 3) - v ^ 6 * w ^ 2) - 3 * u ^ 2 * v ^ 2 * w ^ 4) + 2 * w ^ 3 * v ^ 3 * u ^ 2) - 3 * u ^ 2 * v ^ 4 * w ^ 2) - u ^ 2 * v ^ 6) + 2 * w ^ 3 * v ^ 2 * u ^ 3), -(u ^ 9) * v ^ 24 * w ^ 27 * ((-u * v * w ^ 2 - u * v ^ 2 * w) + u * v ^ 3 + v * w ^ 3 + v ^ 3 * w + w ^ 4), -2 * u ^ 6 * v ^ 16 * w ^ 18 * ((-(v ^ 3) + u * v * w) - w ^ 3), u ^ 12 * v ^ 32 * w ^ 36 * ((-u * v * w ^ 3 - u * v ^ 3 * w) + u ^ 2 * v ^ 3 + w ^ 3 * v ^ 2 + v ^ 3 * w ^ 2 + w ^ 5), -2 * u ^ 12 * v ^ 32 * w ^ 36 * ((-(v ^ 3) + u * v * w) - w ^ 3), -(u ^ 9) * v ^ 24 * w ^ 27 * ((-u * v * w ^ 3 - u * v ^ 3 * w) + u ^ 2 * v ^ 3 + w ^ 3 * v ^ 2 + v ^ 3 * w ^ 2 + w ^ 5), -(u ^ 3) * v ^ 10 * w ^ 11 * ((-(v ^ 2) + 2 * u * v) - w ^ 2), -(u ^ 6) * v ^ 16 * w ^ 18 * ((((((((-(w ^ 7) - v * w ^ 6) + 4 * v ^ 3 * w ^ 4 + 2 * v ^ 4 * w ^ 3) - v ^ 6 * w) + 2 * u * v ^ 3 * w ^ 3) - u * v ^ 6) - 3 * u ^ 2 * v ^ 2 * w ^ 3) - 3 * u ^ 2 * v ^ 3 * w ^ 2) + 2 * u ^ 3 * v * w ^ 3), 2 * u ^ 3 * v ^ 8 * w ^ 9 * ((((-(w ^ 6) + 4 * v ^ 3 * w ^ 3) - v ^ 6) - 3 * u ^ 2 * v ^ 2 * w ^ 2) + u ^ 3 * w ^ 3), -(u ^ 3) * v ^ 8 * w ^ 9 * (2 * u * v * w + u * v ^ 2 + 3 * v * w ^ 2 + 2 * v ^ 2 * w + w ^ 3), u ^ 6 * v ^ 16 * w ^ 18 * (u * w + 4 * v * w + 2 * v ^ 2 + 2 * w ^ 2), 0, u ^ 12 * v ^ 32 * w ^ 36 * (3 * u ^ 2 + 8 * v ^ 2 + 9 * w ^ 2), -(u ^ 3) * v ^ 8 * w ^ 9 * (u * w + 4 * v * w + 2 * v ^ 2 + 2 * w ^ 2), -2 * u ^ 6 * v ^ 16 * w ^ 18 * ((((-(w ^ 6) + 4 * v ^ 3 * w ^ 3) - v ^ 6) - 3 * u ^ 2 * v ^ 2 * w ^ 2) + u ^ 3 * w ^ 3), -2 * u ^ 3 * v ^ 8 * w ^ 9 * (v ^ 2 + 4 * v * w + 2 * u * v + 2 * w ^ 2 + u * w), u ^ 6 * v ^ 16 * w ^ 18 * (2 * u * v * w + u * v ^ 2 + 3 * v * w ^ 2 + 2 * v ^ 2 * w + w ^ 3), 2 * u ^ 9 * v ^ 24 * w ^ 27 * ((-(v ^ 3) + u * v * w) - w ^ 3), -(u ^ 15) * v ^ 40 * w ^ 45 * (3 * u ^ 2 + 8 * v ^ 2 + 9 * w ^ 2), 2 * u ^ 6 * v ^ 16 * w ^ 18 * (v ^ 2 + 4 * v * w + 2 * u * v + 2 * w ^ 2 + u * w), -(u ^ 3) * v ^ 8 * w ^ 9 * (3u + 8v + 9w), -20 * u ^ 3 * v ^ 8 * w ^ 9, -2 * u ^ 9 * v ^ 24 * w ^ 27 * (v ^ 2 + 4 * v * w + 2 * u * v + 2 * w ^ 2 + u * w), -(u ^ 9) * v ^ 24 * w ^ 27 * (3 * u ^ 2 + 8 * v ^ 2 + 9 * w ^ 2), u ^ 6 * v ^ 16 * w ^ 18 * (3u + 8v + 9w), -(u ^ 9) * v ^ 24 * w ^ 27 * (3u + 8v + 9w), -20 * u ^ 15 * v ^ 40 * w ^ 45, -20 * u ^ 9 * v ^ 24 * w ^ 27, 20 * u ^ 6 * v ^ 16 * w ^ 18, 20 * u ^ 12 * v ^ 32 * w ^ 36]
            end
        f24(u, v, w) = begin
                return [24, 12u + 6v + 6w, 2 * u * (v + w + 2u), 6 * u * v + 6 * u * w + 2 * v * w + 6 * u ^ 2 + 2 * v ^ 2 + 2 * w ^ 2, 12 * u ^ 2 + 6 * v ^ 2 + 6 * w ^ 2, 4 * u * (-v * w + u ^ 2), u * (v ^ 2 + w ^ 2 + 2 * u * v + 2 * u * w + 2 * u ^ 2), u * (-v * w + u ^ 2), 3 * u * v ^ 2 + 3 * u * w ^ 2 + v * w ^ 2 + 3 * u ^ 2 * v + 3 * u ^ 2 * w + v ^ 2 * w + 6 * u ^ 3 + 2 * v ^ 3 + 2 * w ^ 3, u ^ 2 * (-v * w + u ^ 2), u ^ 6 * (((((((((((v ^ 6 * w ^ 7 + v ^ 7 * w ^ 6 + u * v ^ 6 * w ^ 6 + u ^ 2 * v ^ 4 * w ^ 7 + 2 * u ^ 2 * v ^ 5 * w ^ 6 + 2 * u ^ 2 * v ^ 6 * w ^ 5 + u ^ 2 * v ^ 7 * w ^ 4) - u ^ 3 * v ^ 2 * w ^ 8) - u ^ 3 * v ^ 3 * w ^ 7) + u ^ 3 * v ^ 4 * w ^ 6 + u ^ 3 * v ^ 5 * w ^ 5 + u ^ 3 * v ^ 6 * w ^ 4) - u ^ 3 * v ^ 7 * w ^ 3) - u ^ 3 * v ^ 8 * w ^ 2) - u ^ 4 * v ^ 2 * w ^ 7) - u ^ 4 * v ^ 3 * w ^ 6) - u ^ 4 * v ^ 6 * w ^ 3) - u ^ 4 * v ^ 7 * w ^ 2) + u ^ 7 * v ^ 2 * w ^ 4 + u ^ 7 * v ^ 3 * w ^ 3 + u ^ 7 * v ^ 4 * w ^ 2 + u ^ 13), u * (v ^ 3 + w ^ 3 + u * v ^ 2 + u * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 2 * u ^ 3), -(u ^ 2) * v * w, 6 * u ^ 2 * v ^ 2 + 6 * u ^ 2 * w ^ 2 + 2 * v ^ 2 * w ^ 2 + 6 * u ^ 4 + 2 * v ^ 4 + 2 * w ^ 4, 2 * u ^ 2 * ((((((2 * w ^ 3 * v ^ 2 + 2 * v ^ 3 * w ^ 2 + 2 * u * v ^ 2 * w ^ 2) - v ^ 4 * u) - w ^ 4 * u) - u ^ 2 * v ^ 3) - u ^ 2 * w ^ 3) + 2 * u ^ 5), u * (v + w + 2u) * (-v * w + u ^ 2), ((2 * u * v ^ 2 * w ^ 2 - v ^ 4 * u) - w ^ 4 * u) + u ^ 2 * v * w ^ 2 + u ^ 2 * v ^ 2 * w + w ^ 3 * v ^ 2 + u ^ 3 * v ^ 2 + u ^ 3 * w ^ 2 + v ^ 3 * w ^ 2 + 2 * u ^ 5, -(u ^ 4) * v ^ 2 * w ^ 2, u ^ 4 * (-v * w + u ^ 2) * (v * w + u ^ 2), 0, u ^ 13 * (v ^ 4 * w ^ 9 + v ^ 6 * w ^ 7 + v ^ 7 * w ^ 6 + v ^ 9 * w ^ 4 + u * v ^ 4 * w ^ 8 + u * v ^ 6 * w ^ 6 + u * v ^ 8 * w ^ 4 + u ^ 13), u * (-v * w + u ^ 2) * (2 * u ^ 2 + v ^ 2 + w ^ 2), v ^ 5 * u ^ 12 * w ^ 5 * (-v * w + u ^ 2), u ^ 5 * (-v * w + u ^ 2) * (u ^ 8 + u ^ 6 * w * v + u ^ 4 * v ^ 2 * w ^ 2 + w ^ 3 * v ^ 3 * u ^ 2 + w ^ 4 * v ^ 4), u ^ 54 * v ^ 25 * w ^ 25 * (-v * w + u ^ 2) * (v * w + u ^ 2), u ^ 6 * ((((((3 * v ^ 6 * w ^ 6 + 3 * u ^ 2 * v ^ 4 * w ^ 6 + 3 * u ^ 2 * v ^ 5 * w ^ 5 + 3 * u ^ 2 * v ^ 6 * w ^ 4) - 2 * u ^ 3 * v ^ 2 * w ^ 7) - 2 * v ^ 3 * u ^ 3 * w ^ 6) - 2 * u ^ 3 * v ^ 6 * w ^ 3) - 2 * u ^ 3 * v ^ 7 * w ^ 2) + u ^ 6 * v ^ 2 * w ^ 4 + u ^ 6 * v ^ 3 * w ^ 3 + u ^ 6 * v ^ 4 * w ^ 2 + u ^ 12), u ^ 2 * (3 * v ^ 2 * w ^ 2 + 2 * u * v * w ^ 2 + 2 * u * v ^ 2 * w + u ^ 4), -(u ^ 6) * v ^ 3 * w ^ 3, (((((((-(v ^ 5) * u - u * w ^ 5) + 4 * u ^ 2 * v ^ 2 * w ^ 2 + u ^ 2 * v ^ 4 + u ^ 2 * w ^ 4 + v ^ 2 * w ^ 4) - 2 * u ^ 3 * v ^ 3) - 2 * u ^ 3 * w ^ 3) + 3 * u ^ 4 * v ^ 2 + 3 * u ^ 4 * w ^ 2 + v ^ 4 * w ^ 2) - u ^ 5 * v) - u ^ 5 * w) + 2 * u ^ 6, 0, 4 * u ^ 2 * (((3 * v ^ 2 * w ^ 2 - u * v ^ 3) - u * w ^ 3) + u ^ 4), 4 * u ^ 51 * v ^ 25 * w ^ 25 * (-v * w + u ^ 2), u ^ 10 * (((((((((v ^ 10 * w ^ 11 + v ^ 11 * w ^ 10 + u * v ^ 10 * w ^ 10 + u ^ 4 * v ^ 6 * w ^ 11 + u ^ 4 * v ^ 7 * w ^ 10 + u ^ 4 * v ^ 8 * w ^ 9 + u ^ 4 * v ^ 9 * w ^ 8 + u ^ 4 * v ^ 10 * w ^ 7 + u ^ 4 * v ^ 11 * w ^ 6) - u ^ 5 * v ^ 4 * w ^ 12) + u ^ 5 * v ^ 8 * w ^ 8) - u ^ 5 * v ^ 12 * w ^ 4) - u ^ 6 * v ^ 4 * w ^ 11) - u ^ 6 * v ^ 6 * w ^ 9) - u ^ 6 * v ^ 9 * w ^ 6) - u ^ 6 * v ^ 11 * w ^ 4) + u ^ 9 * v ^ 4 * w ^ 8 + u ^ 9 * v ^ 6 * w ^ 6 + u ^ 9 * v ^ 8 * w ^ 4 + u ^ 21), 0, -(u ^ 8) * w ^ 4 * v ^ 4, u ^ 2 * ((((((3 * w ^ 3 * v ^ 2 + 3 * v ^ 3 * w ^ 2 + 6 * u * v ^ 2 * w ^ 2) - 2 * v ^ 4 * u) - 2 * w ^ 4 * u) - 2 * u ^ 2 * v ^ 3) - 2 * u ^ 2 * w ^ 3) + u ^ 4 * v + u ^ 4 * w + 2 * u ^ 5), u ^ 14 * v ^ 5 * w ^ 5 * (-v * w + u ^ 2) * (v * w + u ^ 2), u ^ 11 * v ^ 5 * w ^ 5 * (-v * w + u ^ 2) * (2 * u ^ 2 + v ^ 2 + w ^ 2), u ^ 34 * v ^ 15 * w ^ 15 * (-v * w + u ^ 2) * (v * w + u ^ 2), u ^ 4 * (v ^ 4 * w ^ 6 + v ^ 6 * w ^ 4 + u ^ 2 * v ^ 2 * w ^ 6 + 3 * u ^ 2 * v ^ 4 * w ^ 4 + u ^ 2 * v ^ 6 * w ^ 2 + 2 * u ^ 3 * v ^ 2 * w ^ 5 + 4 * u ^ 3 * v ^ 3 * w ^ 4 + 4 * u ^ 3 * v ^ 4 * w ^ 3 + 2 * u ^ 3 * v ^ 5 * w ^ 2 + u ^ 4 * v ^ 2 * w ^ 4 + 2 * u ^ 4 * w ^ 3 * v ^ 3 + u ^ 4 * v ^ 4 * w ^ 2 + u ^ 10), 0, -(u ^ 22) * v ^ 11 * w ^ 11, 4 * u ^ 11 * v ^ 5 * w ^ 5 * (-v * w + u ^ 2), u ^ 7 * (v ^ 2 * w ^ 5 + v ^ 3 * w ^ 4 + v ^ 4 * w ^ 3 + v ^ 5 * w ^ 2 + u * v ^ 2 * w ^ 4 + u * v ^ 3 * w ^ 3 + u * v ^ 4 * w ^ 2 + u ^ 7), u ^ 51 * v ^ 25 * w ^ 25 * (v + w + 2u) * (-v * w + u ^ 2), u ^ 52 * v ^ 25 * w ^ 25 * (-v * w + u ^ 2), u ^ 2 * (((((((3 * v ^ 2 * w ^ 4 + 3 * v ^ 4 * w ^ 2) - 2 * v ^ 5 * u) - 2 * u * w ^ 5) + 6 * u ^ 2 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 3) - 2 * u ^ 3 * w ^ 3) + u ^ 4 * v ^ 2 + u ^ 4 * w ^ 2 + 2 * u ^ 6), 6 * u ^ 50 * v ^ 25 * w ^ 25 * (v + w + 2u), u ^ 11 * v ^ 5 * w ^ 5 * (v + w + 2u) * (-v * w + u ^ 2), u ^ 42 * v ^ 20 * w ^ 20 * (-v * w + u ^ 2), 0, u ^ 51 * v ^ 25 * w ^ 25 * (-v * w + u ^ 2) * (2 * u ^ 2 + v ^ 2 + w ^ 2), 2 * u ^ 10 * v ^ 5 * w ^ 5 * (w ^ 4 + v ^ 2 * w ^ 2 + v ^ 4 + 3 * u ^ 2 * w ^ 2 + 3 * u ^ 2 * v ^ 2 + 3 * u ^ 4), 6 * u ^ 10 * v ^ 5 * w ^ 5 * (2 * u ^ 2 + v ^ 2 + w ^ 2), u ^ 32 * v ^ 15 * w ^ 15 * (-v * w + u ^ 2), u ^ 50 * v ^ 25 * w ^ 25 * (3 * u * v ^ 2 + 3 * u * w ^ 2 + v * w ^ 2 + 3 * u ^ 2 * v + 3 * u ^ 2 * w + v ^ 2 * w + 6 * u ^ 3 + 2 * v ^ 3 + 2 * w ^ 3), u ^ 4 * (v ^ 4 * w ^ 5 + v ^ 5 * w ^ 4 + u * v ^ 4 * w ^ 4 + 2 * v ^ 2 * u ^ 2 * w ^ 5 + 3 * u ^ 2 * v ^ 3 * w ^ 4 + 3 * u ^ 2 * v ^ 4 * w ^ 3 + 2 * u ^ 2 * v ^ 5 * w ^ 2 + 3 * u ^ 3 * v ^ 2 * w ^ 4 + 4 * u ^ 3 * w ^ 3 * v ^ 3 + 3 * u ^ 3 * v ^ 4 * w ^ 2 + u ^ 9), 0, u ^ 44 * v ^ 20 * w ^ 20 * (-v * w + u ^ 2) * (v * w + u ^ 2), 0, u ^ 10 * v ^ 5 * w ^ 5 * (3 * u * v ^ 2 + 3 * u * w ^ 2 + v * w ^ 2 + 3 * u ^ 2 * v + 3 * u ^ 2 * w + v ^ 2 * w + 6 * u ^ 3 + 2 * v ^ 3 + 2 * w ^ 3), 0, u ^ 21 * v ^ 10 * w ^ 10 * (v + w + 2u) * (-v * w + u ^ 2), u ^ 22 * v ^ 10 * w ^ 10 * (-v * w + u ^ 2), u ^ 4 * (3 * w ^ 4 * v ^ 4 + 6 * u ^ 2 * v ^ 2 * w ^ 4 + 8 * w ^ 3 * v ^ 3 * u ^ 2 + 6 * u ^ 2 * v ^ 4 * w ^ 2 + u ^ 8), u ^ 12 * v ^ 5 * w ^ 5 * ((((((3 * w ^ 3 * v ^ 2 + 3 * v ^ 3 * w ^ 2 + 6 * u * v ^ 2 * w ^ 2) - 2 * v ^ 4 * u) - 2 * w ^ 4 * u) - 2 * u ^ 2 * v ^ 3) - 2 * u ^ 2 * w ^ 3) + u ^ 4 * v + u ^ 4 * w + 2 * u ^ 5), -(u ^ 12) * v ^ 6 * w ^ 6, u ^ 22 * v ^ 10 * w ^ 10 * ((((((((((v ^ 2 * w ^ 4 + 2 * v ^ 3 * w ^ 3 + v ^ 4 * w ^ 2) - u * w ^ 5) + 3 * u * v ^ 2 * w ^ 3 + 3 * u * v ^ 3 * w ^ 2) - v ^ 5 * u) - 2 * u ^ 2 * w ^ 4) + 2 * u ^ 2 * v ^ 2 * w ^ 2) - 2 * u ^ 2 * v ^ 4) - u ^ 3 * w ^ 3) - u ^ 3 * v ^ 3) + u ^ 5 * w + u ^ 5 * v + 2 * u ^ 6), u ^ 8 * (3 * v ^ 8 * w ^ 8 + 6 * u ^ 4 * v ^ 4 * w ^ 8 + 8 * u ^ 4 * v ^ 6 * w ^ 6 + 6 * u ^ 4 * v ^ 8 * w ^ 4 + u ^ 16), u ^ 30 * v ^ 15 * w ^ 15 * (3 * u * v ^ 2 + 3 * u * w ^ 2 + v * w ^ 2 + 3 * u ^ 2 * v + 3 * u ^ 2 * w + v ^ 2 * w + 6 * u ^ 3 + 2 * v ^ 3 + 2 * w ^ 3), u ^ 11 * v ^ 5 * w ^ 5 * (v ^ 3 + w ^ 3 + u * v ^ 2 + u * w ^ 2 + u ^ 2 * v + u ^ 2 * w + 2 * u ^ 3), u ^ 24 * v ^ 10 * w ^ 10 * (-v * w + u ^ 2) * (v * w + u ^ 2), u ^ 12 * v ^ 5 * w ^ 5 * (((((((3 * v ^ 2 * w ^ 4 + 3 * v ^ 4 * w ^ 2) - 2 * v ^ 5 * u) - 2 * u * w ^ 5) + 6 * u ^ 2 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 3) - 2 * u ^ 3 * w ^ 3) + u ^ 4 * v ^ 2 + u ^ 4 * w ^ 2 + 2 * u ^ 6), u ^ 31 * v ^ 15 * w ^ 15 * (v + w + 2u) * (-v * w + u ^ 2), 4 * u ^ 21 * v ^ 10 * w ^ 10 * (-v * w + u ^ 2), u ^ 41 * v ^ 20 * w ^ 20 * (-v * w + u ^ 2) * (2 * u ^ 2 + v ^ 2 + w ^ 2), 4 * u ^ 41 * v ^ 20 * w ^ 20 * (-v * w + u ^ 2), u ^ 31 * v ^ 15 * w ^ 15 * (-v * w + u ^ 2) * (2 * u ^ 2 + v ^ 2 + w ^ 2), u ^ 12 * v ^ 5 * w ^ 5 * (3 * v ^ 2 * w ^ 2 + 2 * u * v * w ^ 2 + 2 * u * v ^ 2 * w + u ^ 4), u ^ 22 * v ^ 10 * w ^ 10 * ((((((3 * w ^ 3 * v ^ 2 + 3 * v ^ 3 * w ^ 2 + 6 * u * v ^ 2 * w ^ 2) - 2 * v ^ 4 * u) - 2 * w ^ 4 * u) - 2 * u ^ 2 * v ^ 3) - 2 * u ^ 2 * w ^ 3) + u ^ 4 * v + u ^ 4 * w + 2 * u ^ 5), 4 * u ^ 12 * v ^ 5 * w ^ 5 * (((3 * v ^ 2 * w ^ 2 - u * v ^ 3) - u * w ^ 3) + u ^ 4), u ^ 11 * v ^ 5 * w ^ 5 * (v ^ 2 + w ^ 2 + 2 * u * v + 2 * u * w + 2 * u ^ 2), 2 * u ^ 21 * v ^ 10 * w ^ 10 * (v + w + 2u), 0, 6 * u ^ 40 * v ^ 20 * w ^ 20 * (2 * u ^ 2 + v ^ 2 + w ^ 2), 2 * u ^ 11 * v ^ 5 * w ^ 5 * (v + w + 2u), 4 * u ^ 22 * v ^ 10 * w ^ 10 * (((3 * v ^ 2 * w ^ 2 - u * v ^ 3) - u * w ^ 3) + u ^ 4), 2 * u ^ 10 * v ^ 5 * w ^ 5 * (w ^ 2 + v * w + v ^ 2 + 3 * u * w + 3 * u * v + 3 * u ^ 2), u ^ 21 * v ^ 10 * w ^ 10 * (v ^ 2 + w ^ 2 + 2 * u * v + 2 * u * w + 2 * u ^ 2), 4 * u ^ 31 * v ^ 15 * w ^ 15 * (-v * w + u ^ 2), 6 * u ^ 50 * v ^ 25 * w ^ 25 * (2 * u ^ 2 + v ^ 2 + w ^ 2), 2 * u ^ 20 * v ^ 10 * w ^ 10 * (w ^ 2 + v * w + v ^ 2 + 3 * u * w + 3 * u * v + 3 * u ^ 2), 6 * u ^ 10 * v ^ 5 * w ^ 5 * (v + w + 2u), 24 * u ^ 10 * v ^ 5 * w ^ 5, 2 * u ^ 30 * v ^ 15 * w ^ 15 * (w ^ 2 + v * w + v ^ 2 + 3 * u * w + 3 * u * v + 3 * u ^ 2), 6 * u ^ 30 * v ^ 15 * w ^ 15 * (2 * u ^ 2 + v ^ 2 + w ^ 2), 6 * u ^ 20 * v ^ 10 * w ^ 10 * (v + w + 2u), 6 * u ^ 30 * v ^ 15 * w ^ 15 * (v + w + 2u), 24 * u ^ 50 * v ^ 25 * w ^ 25, 24 * u ^ 30 * v ^ 15 * w ^ 15, 24 * u ^ 20 * v ^ 10 * w ^ 10, 24 * u ^ 40 * v ^ 20 * w ^ 20]
            end
        f30a(u, v, w) = begin
                return [30, 12u + 9v + 9w, 4 * u * v + 4 * u * w + 2 * v * w + u ^ 2, 6 * u * v + 6 * u * w + 6 * v * w + 6 * u ^ 2 + 3 * v ^ 2 + 3 * w ^ 2, 12 * u ^ 2 + 9 * v ^ 2 + 9 * w ^ 2, u * (-3 * v * w + u ^ 2), 2 * u * v * w + u * v ^ 2 + u * w ^ 2 + v * w ^ 2 + 2 * u ^ 2 * v + 2 * u ^ 2 * w + v ^ 2 * w + u ^ 3, u * v * w, 3 * u * v ^ 2 + 3 * u * w ^ 2 + 3 * v * w ^ 2 + 3 * u ^ 2 * v + 3 * u ^ 2 * w + 3 * v ^ 2 * w + 6 * u ^ 3 + 3 * v ^ 3 + 3 * w ^ 3, -(u ^ 2) * (w ^ 2 + v * w + v ^ 2), u ^ 4 * ((((((((((((((((v ^ 7 * w ^ 8 + v ^ 8 * w ^ 7) - u ^ 2 * v ^ 6 * w ^ 7) - u ^ 2 * v ^ 7 * w ^ 6) + u ^ 3 * v ^ 4 * w ^ 8) - u ^ 3 * v ^ 6 * w ^ 6) + u ^ 3 * v ^ 8 * w ^ 4 + u ^ 4 * v ^ 4 * w ^ 7 + u ^ 4 * v ^ 5 * w ^ 6 + u ^ 4 * v ^ 6 * w ^ 5 + u ^ 4 * v ^ 7 * w ^ 4) - u ^ 5 * v ^ 3 * w ^ 7) + u ^ 5 * v ^ 5 * w ^ 5) - u ^ 5 * v ^ 7 * w ^ 3) - u ^ 5 * v ^ 10) - u ^ 5 * w ^ 10) - u ^ 6 * v ^ 3 * w ^ 6) - u ^ 6 * v ^ 6 * w ^ 3) - u ^ 6 * v ^ 9) - u ^ 6 * w ^ 9) + u ^ 9 * w ^ 3 * v ^ 3), u * v * w ^ 2 + u * v ^ 2 * w + u * v ^ 3 + u * w ^ 3 + v * w ^ 3 + 2 * u ^ 3 * v + 2 * u ^ 3 * w + v ^ 3 * w + u ^ 4, 0, 6 * u ^ 2 * v ^ 2 + 6 * u ^ 2 * w ^ 2 + 6 * v ^ 2 * w ^ 2 + 6 * u ^ 4 + 3 * v ^ 4 + 3 * w ^ 4, (((((((3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2 + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 4 * u ^ 3 * v ^ 4) - 4 * u ^ 3 * w ^ 4) - 2 * v ^ 3 * w ^ 4) - 4 * u ^ 4 * v ^ 3) - 4 * u ^ 4 * w ^ 3) - 2 * v ^ 4 * w ^ 3) + u ^ 7, u * (((-v * w ^ 2 - v ^ 2 * w) - u * v * w) + u ^ 3), ((((((((((((-u * v * w ^ 3 + u * v ^ 2 * w ^ 2) - u * v ^ 3 * w) - v ^ 4 * u) - w ^ 4 * u) - v * w ^ 4) + u ^ 2 * v * w ^ 2 + u ^ 2 * v ^ 2 * w) - u ^ 2 * v ^ 3) - u ^ 2 * w ^ 3) - 2 * u ^ 3 * v * w) - 2 * u ^ 4 * v) - 2 * u ^ 4 * w) - v ^ 4 * w) + u ^ 5, 0, -(u ^ 4) * ((w ^ 2 - v * w) + v ^ 2) * (w ^ 2 + v * w + v ^ 2), 0, u ^ 8 * (((-(v ^ 9) * w ^ 9 - u * v ^ 8 * w ^ 9) - u * v ^ 9 * w ^ 8) + u ^ 5 * v ^ 6 * w ^ 7 + u ^ 5 * v ^ 7 * w ^ 6 + u ^ 5 * v ^ 13 + u ^ 5 * w ^ 13 + u ^ 6 * v ^ 6 * w ^ 6), u * (((-v * w ^ 3 - v ^ 3 * w) - u ^ 2 * v * w) + u ^ 4), -(u ^ 10) * v ^ 6 * w ^ 6 * (w ^ 2 + v * w + v ^ 2), u ^ 5 * v ^ 5 * w ^ 5, -(u ^ 44) * v ^ 30 * w ^ 30 * ((w ^ 2 - v * w) + v ^ 2) * (w ^ 2 + v * w + v ^ 2), u ^ 4 * (((((((2 * v ^ 7 * w ^ 7 - 3 * u ^ 2 * v ^ 6 * w ^ 6) + 2 * u ^ 3 * v ^ 4 * w ^ 7 + 2 * u ^ 3 * v ^ 7 * w ^ 4 + 3 * u ^ 4 * v ^ 5 * w ^ 5) - 2 * u ^ 5 * v ^ 3 * w ^ 6) - 2 * u ^ 5 * v ^ 6 * w ^ 3) - 2 * u ^ 5 * v ^ 9) - 2 * u ^ 5 * w ^ 9) + u ^ 8 * w ^ 3 * v ^ 3), -(u ^ 2) * (-3 * v ^ 2 * w ^ 2 + 2 * u * v ^ 3 + 2 * u * w ^ 3), 0, ((((((((((((((-u * v ^ 2 * w ^ 3 - u * v ^ 3 * w ^ 2) - v ^ 5 * u) - u * w ^ 5) - v * w ^ 5) + 3 * u ^ 2 * v ^ 2 * w ^ 2 + u ^ 2 * v ^ 4 + u ^ 2 * w ^ 4 + v ^ 2 * w ^ 4) - u ^ 3 * v * w ^ 2) - u ^ 3 * v ^ 2 * w) - 3 * u ^ 3 * v ^ 3) - 3 * u ^ 3 * w ^ 3) - 2 * v ^ 3 * w ^ 3) + u ^ 4 * v ^ 2 + u ^ 4 * w ^ 2 + v ^ 4 * w ^ 2) - 2 * u ^ 5 * v) - 2 * u ^ 5 * w) - v ^ 5 * w) + u ^ 6, u ^ 4 * v ^ 3 * w ^ 5 + u ^ 4 * v ^ 5 * w ^ 3, (((9 * u ^ 2 * v ^ 2 * w ^ 2 - 8 * u ^ 3 * v ^ 3) - 8 * u ^ 3 * w ^ 3) - 4 * v ^ 3 * w ^ 3) + u ^ 6, u ^ 41 * v ^ 30 * w ^ 30 * (-3 * v * w + u ^ 2), u ^ 8 * ((((((((((((((((v ^ 11 * w ^ 12 + v ^ 12 * w ^ 11) - u ^ 2 * v ^ 10 * w ^ 11) - u ^ 2 * v ^ 11 * w ^ 10) + u ^ 3 * v ^ 8 * w ^ 12) - u ^ 3 * v ^ 10 * w ^ 10) + u ^ 3 * v ^ 12 * w ^ 8 + u ^ 4 * v ^ 8 * w ^ 11 + u ^ 4 * v ^ 11 * w ^ 8 + u ^ 6 * v ^ 8 * w ^ 9 + u ^ 6 * v ^ 9 * w ^ 8) - u ^ 7 * v ^ 6 * w ^ 10) + u ^ 7 * v ^ 8 * w ^ 8) - u ^ 7 * v ^ 10 * w ^ 6) - u ^ 7 * v ^ 16) - u ^ 7 * w ^ 16) - u ^ 8 * v ^ 6 * w ^ 9) - u ^ 8 * v ^ 9 * w ^ 6) - u ^ 8 * v ^ 15) - u ^ 8 * w ^ 15) + u ^ 11 * v ^ 6 * w ^ 6), 0, 0, ((((((((((3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v * w ^ 3) + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 3 * w) - 2 * u ^ 3 * v ^ 4) - 2 * u ^ 3 * w ^ 4) - 2 * v ^ 3 * w ^ 4) - 4 * u ^ 4 * v ^ 3) - 4 * u ^ 4 * w ^ 3) - 2 * v ^ 4 * w ^ 3) + u ^ 7, -(u ^ 12) * v ^ 6 * w ^ 6 * (w ^ 2 + v * w + v ^ 2) * ((w ^ 2 - v * w) + v ^ 2), u ^ 9 * v ^ 6 * w ^ 6 * (((-v * w ^ 3 - v ^ 3 * w) - u ^ 2 * v * w) + u ^ 4), -(u ^ 28) * v ^ 18 * w ^ 18 * (w ^ 2 + v * w + v ^ 2) * ((w ^ 2 - v * w) + v ^ 2), u ^ 4 * (((((-(v ^ 4) * w ^ 6 - 2 * v ^ 5 * w ^ 5) - v ^ 6 * w ^ 4) - 2 * u * v ^ 4 * w ^ 5) - 2 * u * v ^ 5 * w ^ 4) + u ^ 2 * v ^ 4 * w ^ 4 + u ^ 2 * v ^ 8 + u ^ 2 * w ^ 8 + 2 * u ^ 3 * v ^ 3 * w ^ 4 + 2 * u ^ 3 * v ^ 4 * w ^ 3 + 2 * u ^ 4 * w ^ 3 * v ^ 3 + u ^ 4 * v ^ 6 + u ^ 4 * w ^ 6), u ^ 4 * v ^ 3 * w ^ 3 * (b * (u + v + w) - u), 0, u ^ 9 * v ^ 6 * w ^ 6 * (-3 * v * w + u ^ 2), u ^ 4 * (((-(v ^ 5) * w ^ 5 - u * v ^ 4 * w ^ 5) - u * v ^ 5 * w ^ 4) + u ^ 3 * v ^ 3 * w ^ 4 + u ^ 3 * v ^ 4 * w ^ 3 + u ^ 3 * v ^ 7 + u ^ 3 * w ^ 7 + u ^ 4 * w ^ 3 * v ^ 3), u ^ 41 * v ^ 30 * w ^ 30 * (((-v * w ^ 2 - v ^ 2 * w) - u * v * w) + u ^ 3), -(u ^ 42) * v ^ 30 * w ^ 30 * (w ^ 2 + v * w + v ^ 2), ((((((((((3 * u ^ 2 * v ^ 2 * w ^ 4 + 3 * u ^ 2 * v ^ 4 * w ^ 2) - 2 * w ^ 3 * v ^ 2 * u ^ 3) - 2 * w ^ 2 * v ^ 3 * u ^ 3) - 2 * u ^ 3 * v ^ 5) - 2 * u ^ 3 * w ^ 5) - 2 * v ^ 3 * w ^ 5) + 3 * u ^ 4 * v ^ 2 * w ^ 2) - 4 * u ^ 5 * v ^ 3) - 4 * u ^ 5 * w ^ 3) - 2 * v ^ 5 * w ^ 3) + u ^ 8, 3 * u ^ 40 * v ^ 30 * w ^ 30 * (3v + 3w + 4u), u ^ 9 * v ^ 6 * w ^ 6 * (((-v * w ^ 2 - v ^ 2 * w) - u * v * w) + u ^ 3), -(u ^ 34) * v ^ 24 * w ^ 24 * (w ^ 2 + v * w + v ^ 2), 0, u ^ 41 * v ^ 30 * w ^ 30 * (((-v * w ^ 3 - v ^ 3 * w) - u ^ 2 * v * w) + u ^ 4), 3 * u ^ 8 * v ^ 6 * w ^ 6 * (w ^ 4 + 2 * v ^ 2 * w ^ 2 + v ^ 4 + 2 * u ^ 2 * w ^ 2 + 2 * u ^ 2 * v ^ 2 + 2 * u ^ 4), 3 * u ^ 8 * v ^ 6 * w ^ 6 * (3 * w ^ 2 + 3 * v ^ 2 + 4 * u ^ 2), -(u ^ 26) * v ^ 18 * w ^ 18 * (w ^ 2 + v * w + v ^ 2), 3 * u ^ 40 * v ^ 30 * w ^ 30 * (w ^ 3 + v * w ^ 2 + v ^ 2 * w + v ^ 3 + u * w ^ 2 + u * v ^ 2 + u ^ 2 * w + u ^ 2 * v + 2 * u ^ 3), u ^ 4 * (((-3 * v ^ 4 * w ^ 5 - 3 * v ^ 5 * w ^ 4) - 3 * u * v ^ 4 * w ^ 4) + 2 * u ^ 2 * v ^ 3 * w ^ 4 + 2 * u ^ 2 * v ^ 4 * w ^ 3 + u ^ 2 * v ^ 7 + u ^ 2 * w ^ 7 + 4 * u ^ 3 * w ^ 3 * v ^ 3 + u ^ 3 * v ^ 6 + u ^ 3 * w ^ 6), u ^ 12 * v ^ 9 * w ^ 9 * (b * (u + v + w) - u), -(u ^ 36) * v ^ 24 * w ^ 24 * (w ^ 2 + v * w + v ^ 2) * ((w ^ 2 - v * w) + v ^ 2), 2 * u ^ 4 * w ^ 3 * v ^ 3, 3 * u ^ 8 * v ^ 6 * w ^ 6 * (w ^ 3 + v * w ^ 2 + v ^ 2 * w + v ^ 3 + u * w ^ 2 + u * v ^ 2 + u ^ 2 * w + u ^ 2 * v + 2 * u ^ 3), 2 * u ^ 20 * v ^ 15 * w ^ 15, u ^ 17 * v ^ 12 * w ^ 12 * (((-v * w ^ 2 - v ^ 2 * w) - u * v * w) + u ^ 3), -(u ^ 18) * v ^ 12 * w ^ 12 * (w ^ 2 + v * w + v ^ 2), u ^ 4 * (-9 * w ^ 4 * v ^ 4 + 8 * w ^ 3 * v ^ 3 * u ^ 2 + 2 * u ^ 2 * v ^ 6 + 2 * u ^ 2 * w ^ 6), u ^ 8 * v ^ 6 * w ^ 6 * (((((((((((3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v * w ^ 3) + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 3 * w) - 2 * u ^ 3 * v ^ 4) - 2 * u ^ 3 * w ^ 4) - 2 * v ^ 3 * w ^ 4) - 4 * u ^ 4 * v ^ 3) - 4 * u ^ 4 * w ^ 3) - 2 * v ^ 4 * w ^ 3) + u ^ 7), 0, u ^ 16 * v ^ 12 * w ^ 12 * ((((((((((((((((-(v ^ 3) * w ^ 5 - 2 * w ^ 4 * v ^ 4) - v ^ 5 * w ^ 3) + u ^ 2 * v ^ 2 * w ^ 4 + 2 * w ^ 3 * v ^ 3 * u ^ 2 + u ^ 2 * v ^ 4 * w ^ 2) - u ^ 3 * w ^ 5) - w ^ 4 * v * u ^ 3) + 2 * w ^ 3 * v ^ 2 * u ^ 3 + 2 * w ^ 2 * v ^ 3 * u ^ 3) - w * v ^ 4 * u ^ 3) - u ^ 3 * v ^ 5) - 3 * u ^ 4 * w ^ 4) - u ^ 4 * v * w ^ 3) + u ^ 4 * v ^ 2 * w ^ 2) - u ^ 4 * v ^ 3 * w) - 3 * u ^ 4 * v ^ 4) - 2 * u ^ 5 * w ^ 3) - 2 * u ^ 5 * v ^ 3) + u ^ 8), u ^ 8 * (-9 * v ^ 8 * w ^ 8 + 8 * u ^ 4 * v ^ 6 * w ^ 6 + 2 * u ^ 4 * v ^ 12 + 2 * u ^ 4 * w ^ 12), 3 * u ^ 24 * v ^ 18 * w ^ 18 * (w ^ 3 + v * w ^ 2 + v ^ 2 * w + v ^ 3 + u * w ^ 2 + u * v ^ 2 + u ^ 2 * w + u ^ 2 * v + 2 * u ^ 3), u ^ 8 * v ^ 6 * w ^ 6 * (u * v * w ^ 2 + u * v ^ 2 * w + u * v ^ 3 + u * w ^ 3 + v * w ^ 3 + 2 * u ^ 3 * v + 2 * u ^ 3 * w + v ^ 3 * w + u ^ 4), -(u ^ 20) * v ^ 12 * w ^ 12 * (w ^ 2 + v * w + v ^ 2) * ((w ^ 2 - v * w) + v ^ 2), u ^ 8 * v ^ 6 * w ^ 6 * (((((((((((3 * u ^ 2 * v ^ 2 * w ^ 4 + 3 * u ^ 2 * v ^ 4 * w ^ 2) - 2 * w ^ 3 * v ^ 2 * u ^ 3) - 2 * w ^ 2 * v ^ 3 * u ^ 3) - 2 * u ^ 3 * v ^ 5) - 2 * u ^ 3 * w ^ 5) - 2 * v ^ 3 * w ^ 5) + 3 * u ^ 4 * v ^ 2 * w ^ 2) - 4 * u ^ 5 * v ^ 3) - 4 * u ^ 5 * w ^ 3) - 2 * v ^ 5 * w ^ 3) + u ^ 8), u ^ 25 * v ^ 18 * w ^ 18 * (((-v * w ^ 2 - v ^ 2 * w) - u * v * w) + u ^ 3), u ^ 17 * v ^ 12 * w ^ 12 * (-3 * v * w + u ^ 2), u ^ 33 * v ^ 24 * w ^ 24 * (((-v * w ^ 3 - v ^ 3 * w) - u ^ 2 * v * w) + u ^ 4), u ^ 33 * v ^ 24 * w ^ 24 * (-3 * v * w + u ^ 2), u ^ 25 * v ^ 18 * w ^ 18 * (((-v * w ^ 3 - v ^ 3 * w) - u ^ 2 * v * w) + u ^ 4), -(u ^ 10) * v ^ 6 * w ^ 6 * (-3 * v ^ 2 * w ^ 2 + 2 * u * v ^ 3 + 2 * u * w ^ 3), u ^ 16 * v ^ 12 * w ^ 12 * (((((((((((3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v * w ^ 3) + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 3 * w) - 2 * u ^ 3 * v ^ 4) - 2 * u ^ 3 * w ^ 4) - 2 * v ^ 3 * w ^ 4) - 4 * u ^ 4 * v ^ 3) - 4 * u ^ 4 * w ^ 3) - 2 * v ^ 4 * w ^ 3) + u ^ 7), u ^ 8 * v ^ 6 * w ^ 6 * ((((9 * u ^ 2 * v ^ 2 * w ^ 2 - 8 * u ^ 3 * v ^ 3) - 8 * u ^ 3 * w ^ 3) - 4 * v ^ 3 * w ^ 3) + u ^ 6), u ^ 8 * v ^ 6 * w ^ 6 * (2 * u * v * w + u * v ^ 2 + u * w ^ 2 + v * w ^ 2 + 2 * u ^ 2 * v + 2 * u ^ 2 * w + v ^ 2 * w + u ^ 3), u ^ 16 * v ^ 12 * w ^ 12 * (4 * u * v + 4 * u * w + 2 * v * w + u ^ 2), 2 * u ^ 12 * v ^ 9 * w ^ 9, 3 * u ^ 32 * v ^ 24 * w ^ 24 * (3 * w ^ 2 + 3 * v ^ 2 + 4 * u ^ 2), u ^ 8 * v ^ 6 * w ^ 6 * (4 * u * v + 4 * u * w + 2 * v * w + u ^ 2), u ^ 16 * v ^ 12 * w ^ 12 * ((((9 * u ^ 2 * v ^ 2 * w ^ 2 - 8 * u ^ 3 * v ^ 3) - 8 * u ^ 3 * w ^ 3) - 4 * v ^ 3 * w ^ 3) + u ^ 6), 3 * u ^ 8 * v ^ 6 * w ^ 6 * (w ^ 2 + 2 * v * w + v ^ 2 + 2 * u * w + 2 * u * v + 2 * u ^ 2), u ^ 16 * v ^ 12 * w ^ 12 * (2 * u * v * w + u * v ^ 2 + u * w ^ 2 + v * w ^ 2 + 2 * u ^ 2 * v + 2 * u ^ 2 * w + v ^ 2 * w + u ^ 3), u ^ 25 * v ^ 18 * w ^ 18 * (-3 * v * w + u ^ 2), 3 * u ^ 40 * v ^ 30 * w ^ 30 * (3 * w ^ 2 + 3 * v ^ 2 + 4 * u ^ 2), 3 * u ^ 16 * v ^ 12 * w ^ 12 * (w ^ 2 + 2 * v * w + v ^ 2 + 2 * u * w + 2 * u * v + 2 * u ^ 2), 3 * u ^ 8 * v ^ 6 * w ^ 6 * (3v + 3w + 4u), 30 * u ^ 8 * v ^ 6 * w ^ 6, 3 * u ^ 24 * v ^ 18 * w ^ 18 * (w ^ 2 + 2 * v * w + v ^ 2 + 2 * u * w + 2 * u * v + 2 * u ^ 2), 3 * u ^ 24 * v ^ 18 * w ^ 18 * (3 * w ^ 2 + 3 * v ^ 2 + 4 * u ^ 2), 3 * u ^ 16 * v ^ 12 * w ^ 12 * (3v + 3w + 4u), 3 * u ^ 24 * v ^ 18 * w ^ 18 * (3v + 3w + 4u), 30 * u ^ 40 * v ^ 30 * w ^ 30, 30 * u ^ 24 * v ^ 18 * w ^ 18, 30 * u ^ 16 * v ^ 12 * w ^ 12, 30 * u ^ 32 * v ^ 24 * w ^ 24]
            end
        f30b(u, v, w) = begin
                return [30, 9u + 15v + 6w, 4 * u * v + 2 * v * w + u ^ 2 + 5 * v ^ 2, 10 * u * v + 4 * u * w + 6 * v * w + 2 * u ^ 2 + 7 * v ^ 2 + w ^ 2, 9 * u ^ 2 + 15 * v ^ 2 + 6 * w ^ 2, -4 * u * v * w + u ^ 3 + 5 * v ^ 3, 2 * v * (u + v) * (u + w + v), v ^ 2 * (u + v), 5 * u * v ^ 2 + 2 * u * w ^ 2 + 3 * v * w ^ 2 + 5 * u ^ 2 * v + 2 * u ^ 2 * w + 3 * v ^ 2 * w + 2 * u ^ 3 + 7 * v ^ 3 + w ^ 3, -(v ^ 2) * (-(v ^ 2) + u * w), v ^ 4 * ((((((((((((((((((-(u ^ 6) * v ^ 6 * w ^ 3 + u ^ 4 * v ^ 5 * w ^ 6) - v ^ 6 * u ^ 7 * w ^ 2) - v ^ 5 * u ^ 8 * w ^ 2) + v ^ 9 * u ^ 3 * w ^ 3 + v ^ 9 * u ^ 4 * w ^ 2 + v ^ 4 * u ^ 7 * w ^ 4 + v ^ 5 * u ^ 6 * w ^ 4) - v ^ 5 * u ^ 7 * w ^ 3) + 2 * v ^ 4 * u ^ 6 * w ^ 5 + 2 * v ^ 4 * u ^ 5 * w ^ 6 + u ^ 13 * w ^ 2) - v ^ 3 * u ^ 10 * w ^ 2) + v ^ 3 * u ^ 8 * w ^ 4) - v ^ 4 * u ^ 9 * w ^ 2) + v ^ 2 * u ^ 9 * w ^ 4 + v ^ 2 * u ^ 8 * w ^ 5) - u ^ 2 * v ^ 6 * w ^ 7) - u ^ 3 * v ^ 6 * w ^ 6) + u ^ 4 * v ^ 4 * w ^ 7 + u ^ 5 * v ^ 5 * w ^ 5 + v ^ 15 + v ^ 11 * u ^ 4) - v ^ 8 * u ^ 7) - v ^ 7 * u ^ 8) + v ^ 9 * u ^ 2 * w ^ 4) - v ^ 5 * u ^ 2 * w ^ 8) - v ^ 5 * u ^ 3 * w ^ 7), v * (u * w ^ 2 + 2 * u * v ^ 2 + u ^ 2 * w + 3 * u ^ 2 * v + v * w ^ 2 + u ^ 3 + v ^ 2 * w + 2 * v ^ 3), 0, 10 * u ^ 2 * v ^ 2 + 4 * u ^ 2 * w ^ 2 + 6 * v ^ 2 * w ^ 2 + 2 * u ^ 4 + 7 * v ^ 4 + w ^ 4, (((((4 * u ^ 2 * v ^ 2 * w ^ 3 + 4 * u ^ 2 * v ^ 3 * w ^ 2 + 4 * u ^ 3 * v ^ 2 * w ^ 2) - 4 * u ^ 3 * v ^ 4) - 2 * v ^ 3 * w ^ 4) - 4 * u ^ 4 * v ^ 3) - 2 * v ^ 4 * w ^ 3) + u ^ 7 + 5 * v ^ 7, v * ((((-u * w ^ 2 - 2 * u * v * w) + 2 * u * v ^ 2) - u ^ 2 * w) + u ^ 3 + v ^ 2 * w + 2 * v ^ 3), (((((-u * v * w ^ 3 + u * v ^ 2 * w ^ 2) - 2 * u * v ^ 3 * w) + 2 * u ^ 2 * v * w ^ 2 + u ^ 2 * v ^ 2 * w + u ^ 2 * v ^ 3 + u ^ 2 * w ^ 3) - u ^ 3 * v * w) - u ^ 3 * v ^ 2) + u ^ 3 * w ^ 2 + 2 * v ^ 3 * w ^ 2 + 2 * v ^ 5, 0, -(v ^ 4) * (-(v ^ 2) + u * w) * (v ^ 2 + u * w), 0, v ^ 8 * (v ^ 5 * u ^ 4 * w ^ 9 + v ^ 6 * u ^ 4 * w ^ 8 + v ^ 5 * u ^ 6 * w ^ 7 + u ^ 6 * v ^ 6 * w ^ 6 + v ^ 5 * u ^ 7 * w ^ 6 + u ^ 8 * v ^ 6 * w ^ 4 + v ^ 10 * u ^ 8 + u ^ 9 * v ^ 5 * w ^ 4 + u ^ 9 * v ^ 9 + v * u ^ 13 * w ^ 4 + u ^ 14 * w ^ 4 + v ^ 18), v * ((((-u * w ^ 3 - 2 * u * v ^ 2 * w) + 2 * u ^ 2 * v ^ 2) - u ^ 3 * w) + u ^ 3 * v + v ^ 2 * w ^ 2 + 2 * v ^ 4), -(u ^ 6) * v ^ 12 * w ^ 4 * (-(v ^ 2) + u * w), v ^ 10 * (u + v) * ((((u ^ 4 - u ^ 3 * v) + u ^ 2 * v ^ 2) - u * v ^ 3) + v ^ 4), -(u ^ 30) * v ^ 54 * w ^ 20 * (-(v ^ 2) + u * w) * (v ^ 2 + u * w), v ^ 4 * (((((((((-2 * v ^ 5 * u ^ 2 * w ^ 7 + u ^ 2 * v ^ 8 * w ^ 4) - 2 * v ^ 5 * u ^ 3 * w ^ 6) + u ^ 3 * v ^ 8 * w ^ 3 + 3 * u ^ 4 * v ^ 4 * w ^ 6 + u ^ 4 * v ^ 8 * w ^ 2 + u ^ 4 * v ^ 10 + 3 * u ^ 5 * v ^ 4 * w ^ 5 + 3 * u ^ 6 * v ^ 4 * w ^ 4) - 2 * v ^ 5 * u ^ 6 * w ^ 3) - 2 * u ^ 7 * v ^ 5 * w ^ 2) - 2 * u ^ 7 * v ^ 7) + 3 * u ^ 8 * v ^ 2 * w ^ 4) - 2 * v ^ 3 * u ^ 9 * w ^ 2) + u ^ 12 * w ^ 2 + v ^ 14), v ^ 2 * (((2 * u * v * w ^ 2 + 2 * u ^ 2 * v * w) - u ^ 2 * v ^ 2) + 2 * u ^ 3 * w + v ^ 4), 0, -((u ^ 2 + v ^ 2)) * (((((((u ^ 3 * v - 2 * u ^ 2 * v ^ 2) - u ^ 2 * w ^ 2) + u * v * w ^ 2 + 2 * u * v ^ 3 + v ^ 3 * w) - 3 * v ^ 2 * w ^ 2) - 2 * v ^ 4) - w ^ 4) + v * w ^ 3), u ^ 3 * v ^ 5 * w ^ 4 + u ^ 3 * v ^ 7 * w ^ 2, ((12 * u ^ 2 * v ^ 2 * w ^ 2 - 8 * u ^ 3 * v ^ 3) - 4 * v ^ 3 * w ^ 3) + u ^ 6 + 5 * v ^ 6, u ^ 30 * v ^ 50 * w ^ 20 * (-4 * u * v * w + u ^ 3 + 5 * v ^ 3), v ^ 8 * ((((((((((((((((((u ^ 8 * v ^ 11 * w ^ 4 + u ^ 6 * v ^ 11 * w ^ 6) - u ^ 9 * v ^ 8 * w ^ 6) + u ^ 8 * v ^ 7 * w ^ 8 + u ^ 8 * v ^ 6 * w ^ 9 + u ^ 9 * v ^ 6 * w ^ 8) - u ^ 4 * v ^ 8 * w ^ 11) - v ^ 12 * u ^ 11) - v ^ 11 * u ^ 12) + u ^ 10 * v ^ 6 * w ^ 7 + u ^ 8 * v ^ 15 + v ^ 23 + u ^ 11 * v ^ 6 * w ^ 6 + v ^ 6 * u ^ 6 * w ^ 11) - v ^ 7 * u ^ 4 * w ^ 12) + v ^ 2 * u ^ 15 * w ^ 6) - v ^ 7 * u ^ 12 * w ^ 4) + v ^ 3 * u ^ 14 * w ^ 6 + u ^ 19 * w ^ 4) - v ^ 3 * u ^ 16 * w ^ 4) + v ^ 2 * u ^ 14 * w ^ 7) - v ^ 8 * u ^ 11 * w ^ 4) + u ^ 4 * v ^ 11 * w ^ 8) - u ^ 6 * v ^ 8 * w ^ 9) + u ^ 7 * v ^ 6 * w ^ 10) - u ^ 15 * v ^ 4 * w ^ 4), 0, 0, v * ((((((-2 * u * v ^ 2 * w ^ 3 + 2 * v ^ 5 * u + 3 * u ^ 2 * v * w ^ 3 + 6 * u ^ 2 * v ^ 2 * w ^ 2 + 3 * u ^ 3 * v * w ^ 2) - 2 * u ^ 3 * v ^ 2 * w) - 4 * u ^ 3 * v ^ 3) - 2 * u ^ 4 * v ^ 2) - 2 * v ^ 3 * w ^ 3) + u ^ 6 + v ^ 5 * w + 2 * v ^ 6), -(u ^ 6) * v ^ 14 * w ^ 4 * (-(v ^ 2) + u * w) * (v ^ 2 + u * w), u ^ 6 * v ^ 11 * w ^ 4 * ((((-u * w ^ 3 - 2 * u * v ^ 2 * w) + 2 * u ^ 2 * v ^ 2) - u ^ 3 * w) + u ^ 3 * v + v ^ 2 * w ^ 2 + 2 * v ^ 4), -(u ^ 18) * v ^ 34 * w ^ 12 * (-(v ^ 2) + u * w) * (v ^ 2 + u * w), v ^ 4 * (v ^ 2 * u ^ 2 * w ^ 6 + 2 * v ^ 3 * u ^ 2 * w ^ 5 + u ^ 2 * v ^ 4 * w ^ 4 + 4 * u ^ 3 * v ^ 3 * w ^ 4 + 2 * u ^ 3 * v ^ 4 * w ^ 3 + 2 * v ^ 2 * u ^ 4 * w ^ 4 + 4 * u ^ 4 * w ^ 3 * v ^ 3 + v ^ 4 * u ^ 4 * w ^ 2 + u ^ 4 * v ^ 6 + 2 * v ^ 3 * u ^ 5 * w ^ 2 + 2 * v ^ 5 * u ^ 5 + 2 * u ^ 6 * v ^ 2 * w ^ 2 + 2 * u ^ 7 * w ^ 3 + 2 * v * u ^ 7 * w ^ 2 + u ^ 8 * w ^ 2 + v ^ 10), u ^ 3 * v ^ 5 * w ^ 2 * (c * (u + v + w) - u), 0, u ^ 6 * v ^ 10 * w ^ 4 * (-4 * u * v * w + u ^ 3 + 5 * v ^ 3), v ^ 4 * (v ^ 3 * u ^ 2 * w ^ 5 + u ^ 2 * v ^ 4 * w ^ 4 + u ^ 3 * v ^ 3 * w ^ 4 + u ^ 3 * v ^ 4 * w ^ 3 + u ^ 4 * w ^ 3 * v ^ 3 + v ^ 4 * u ^ 4 * w ^ 2 + u ^ 4 * v ^ 6 + v ^ 3 * u ^ 5 * w ^ 2 + v ^ 5 * u ^ 5 + v * u ^ 7 * w ^ 2 + u ^ 8 * w ^ 2 + v ^ 10), u ^ 30 * v ^ 51 * w ^ 20 * ((((-u * w ^ 2 - 2 * u * v * w) + 2 * u * v ^ 2) - u ^ 2 * w) + u ^ 3 + v ^ 2 * w + 2 * v ^ 3), -(u ^ 30) * v ^ 52 * w ^ 20 * (-(v ^ 2) + u * w), v ^ 2 * ((((((((3 * u ^ 2 * w ^ 4 - 2 * u ^ 2 * v * w ^ 3) + 6 * u ^ 2 * v ^ 2 * w ^ 2 + 2 * u ^ 2 * v ^ 4) - 2 * u ^ 3 * v * w ^ 2) - 4 * u ^ 3 * v ^ 3) + 3 * u ^ 4 * w ^ 2) - 2 * u ^ 5 * v) - 2 * v ^ 3 * w ^ 3) + u ^ 6 + v ^ 4 * w ^ 2 + 2 * v ^ 6), 3 * u ^ 30 * v ^ 50 * w ^ 20 * (5v + 2w + 3u), u ^ 6 * v ^ 11 * w ^ 4 * ((((-u * w ^ 2 - 2 * u * v * w) + 2 * u * v ^ 2) - u ^ 2 * w) + u ^ 3 + v ^ 2 * w + 2 * v ^ 3), -(u ^ 24) * v ^ 42 * w ^ 16 * (-(v ^ 2) + u * w), 0, u ^ 30 * v ^ 51 * w ^ 20 * ((((-u * w ^ 3 - 2 * u * v ^ 2 * w) + 2 * u ^ 2 * v ^ 2) - u ^ 3 * w) + u ^ 3 * v + v ^ 2 * w ^ 2 + 2 * v ^ 4), u ^ 6 * v ^ 10 * w ^ 4 * (10 * u ^ 2 * v ^ 2 + 4 * u ^ 2 * w ^ 2 + 6 * v ^ 2 * w ^ 2 + 2 * u ^ 4 + 7 * v ^ 4 + w ^ 4), 3 * u ^ 6 * v ^ 10 * w ^ 4 * (2 * w ^ 2 + 5 * v ^ 2 + 3 * u ^ 2), -(u ^ 18) * v ^ 32 * w ^ 12 * (-(v ^ 2) + u * w), u ^ 30 * v ^ 50 * w ^ 20 * (5 * u * v ^ 2 + 2 * u * w ^ 2 + 3 * v * w ^ 2 + 5 * u ^ 2 * v + 2 * u ^ 2 * w + 3 * v ^ 2 * w + 2 * u ^ 3 + 7 * v ^ 3 + w ^ 3), v ^ 4 * (2 * v ^ 2 * u ^ 2 * w ^ 5 + 3 * u ^ 2 * v ^ 3 * w ^ 4 + 3 * v ^ 2 * u ^ 3 * w ^ 4 + 4 * u ^ 3 * w ^ 3 * v ^ 3 + 3 * v ^ 2 * u ^ 4 * w ^ 3 + 3 * v ^ 3 * u ^ 4 * w ^ 2 + 2 * v ^ 5 * u ^ 4 + 2 * v ^ 2 * u ^ 5 * w ^ 2 + v ^ 4 * u ^ 5 + u ^ 6 * w ^ 3 + 2 * u ^ 6 * v * w ^ 2 + 3 * u ^ 7 * w ^ 2 + v ^ 9), u ^ 9 * v ^ 15 * w ^ 6 * (c * (u + v + w) - u), -(u ^ 24) * v ^ 44 * w ^ 16 * (-(v ^ 2) + u * w) * (v ^ 2 + u * w), 2 * u ^ 3 * v ^ 5 * w ^ 2, u ^ 6 * v ^ 10 * w ^ 4 * (5 * u * v ^ 2 + 2 * u * w ^ 2 + 3 * v * w ^ 2 + 5 * u ^ 2 * v + 2 * u ^ 2 * w + 3 * v ^ 2 * w + 2 * u ^ 3 + 7 * v ^ 3 + w ^ 3), 2 * u ^ 15 * v ^ 25 * w ^ 10, u ^ 12 * v ^ 21 * w ^ 8 * ((((-u * w ^ 2 - 2 * u * v * w) + 2 * u * v ^ 2) - u ^ 2 * w) + u ^ 3 + v ^ 2 * w + 2 * v ^ 3), -(u ^ 12) * v ^ 22 * w ^ 8 * (-(v ^ 2) + u * w), v ^ 4 * (6 * u ^ 2 * v ^ 2 * w ^ 4 + 8 * w ^ 3 * v ^ 2 * u ^ 3 + 6 * u ^ 4 * v ^ 2 * w ^ 2 + 3 * u ^ 4 * v ^ 4 + 6 * u ^ 6 * w ^ 2 + v ^ 8), u ^ 6 * v ^ 11 * w ^ 4 * ((((((-2 * u * v ^ 2 * w ^ 3 + 2 * v ^ 5 * u + 3 * u ^ 2 * v * w ^ 3 + 6 * u ^ 2 * v ^ 2 * w ^ 2 + 3 * u ^ 3 * v * w ^ 2) - 2 * u ^ 3 * v ^ 2 * w) - 4 * u ^ 3 * v ^ 3) - 2 * u ^ 4 * v ^ 2) - 2 * v ^ 3 * w ^ 3) + u ^ 6 + v ^ 5 * w + 2 * v ^ 6), 0, u ^ 12 * v ^ 21 * w ^ 8 * ((((((((((((-(v ^ 3) * w ^ 4 - v ^ 4 * w ^ 3) + v ^ 6 * w + 2 * v ^ 7) - v ^ 2 * u * w ^ 4) - u * v ^ 3 * w ^ 3) + 2 * u * v ^ 6 + v * u ^ 2 * w ^ 4 + 3 * u ^ 2 * v ^ 2 * w ^ 3 + 2 * u ^ 2 * v ^ 3 * w ^ 2 + 2 * u ^ 3 * v * w ^ 3 + 3 * u ^ 3 * v ^ 2 * w ^ 2) - u ^ 3 * v ^ 3 * w) - 2 * u ^ 3 * v ^ 4) + w ^ 2 * v * u ^ 4) - u ^ 4 * v ^ 2 * w) - 3 * u ^ 4 * v ^ 3) - v ^ 2 * u ^ 5) + u ^ 7), v ^ 8 * (6 * v ^ 4 * u ^ 4 * w ^ 8 + 8 * v ^ 4 * u ^ 6 * w ^ 6 + 6 * v ^ 4 * u ^ 8 * w ^ 4 + 3 * u ^ 8 * v ^ 8 + 6 * u ^ 12 * w ^ 4 + v ^ 16), u ^ 18 * v ^ 30 * w ^ 12 * (5 * u * v ^ 2 + 2 * u * w ^ 2 + 3 * v * w ^ 2 + 5 * u ^ 2 * v + 2 * u ^ 2 * w + 3 * v ^ 2 * w + 2 * u ^ 3 + 7 * v ^ 3 + w ^ 3), u ^ 6 * v ^ 11 * w ^ 4 * (u * w ^ 2 + 2 * u * v ^ 2 + u ^ 2 * w + 3 * u ^ 2 * v + v * w ^ 2 + u ^ 3 + v ^ 2 * w + 2 * v ^ 3), -(u ^ 12) * v ^ 24 * w ^ 8 * (-(v ^ 2) + u * w) * (v ^ 2 + u * w), u ^ 6 * v ^ 12 * w ^ 4 * ((((((((3 * u ^ 2 * w ^ 4 - 2 * u ^ 2 * v * w ^ 3) + 6 * u ^ 2 * v ^ 2 * w ^ 2 + 2 * u ^ 2 * v ^ 4) - 2 * u ^ 3 * v * w ^ 2) - 4 * u ^ 3 * v ^ 3) + 3 * u ^ 4 * w ^ 2) - 2 * u ^ 5 * v) - 2 * v ^ 3 * w ^ 3) + u ^ 6 + v ^ 4 * w ^ 2 + 2 * v ^ 6), u ^ 18 * v ^ 31 * w ^ 12 * ((((-u * w ^ 2 - 2 * u * v * w) + 2 * u * v ^ 2) - u ^ 2 * w) + u ^ 3 + v ^ 2 * w + 2 * v ^ 3), u ^ 12 * v ^ 20 * w ^ 8 * (-4 * u * v * w + u ^ 3 + 5 * v ^ 3), u ^ 24 * v ^ 41 * w ^ 16 * ((((-u * w ^ 3 - 2 * u * v ^ 2 * w) + 2 * u ^ 2 * v ^ 2) - u ^ 3 * w) + u ^ 3 * v + v ^ 2 * w ^ 2 + 2 * v ^ 4), u ^ 24 * v ^ 40 * w ^ 16 * (-4 * u * v * w + u ^ 3 + 5 * v ^ 3), u ^ 18 * v ^ 31 * w ^ 12 * ((((-u * w ^ 3 - 2 * u * v ^ 2 * w) + 2 * u ^ 2 * v ^ 2) - u ^ 3 * w) + u ^ 3 * v + v ^ 2 * w ^ 2 + 2 * v ^ 4), u ^ 6 * v ^ 12 * w ^ 4 * (((2 * u * v * w ^ 2 + 2 * u ^ 2 * v * w) - u ^ 2 * v ^ 2) + 2 * u ^ 3 * w + v ^ 4), u ^ 12 * v ^ 21 * w ^ 8 * ((((((-2 * u * v ^ 2 * w ^ 3 + 2 * v ^ 5 * u + 3 * u ^ 2 * v * w ^ 3 + 6 * u ^ 2 * v ^ 2 * w ^ 2 + 3 * u ^ 3 * v * w ^ 2) - 2 * u ^ 3 * v ^ 2 * w) - 4 * u ^ 3 * v ^ 3) - 2 * u ^ 4 * v ^ 2) - 2 * v ^ 3 * w ^ 3) + u ^ 6 + v ^ 5 * w + 2 * v ^ 6), u ^ 6 * v ^ 10 * w ^ 4 * (((12 * u ^ 2 * v ^ 2 * w ^ 2 - 8 * u ^ 3 * v ^ 3) - 4 * v ^ 3 * w ^ 3) + u ^ 6 + 5 * v ^ 6), 2 * u ^ 6 * v ^ 11 * w ^ 4 * (u + v) * (u + w + v), u ^ 12 * v ^ 20 * w ^ 8 * (4 * u * v + 2 * v * w + u ^ 2 + 5 * v ^ 2), 2 * u ^ 9 * v ^ 15 * w ^ 6, 3 * u ^ 24 * v ^ 40 * w ^ 16 * (2 * w ^ 2 + 5 * v ^ 2 + 3 * u ^ 2), u ^ 6 * v ^ 10 * w ^ 4 * (4 * u * v + 2 * v * w + u ^ 2 + 5 * v ^ 2), u ^ 12 * v ^ 20 * w ^ 8 * (((12 * u ^ 2 * v ^ 2 * w ^ 2 - 8 * u ^ 3 * v ^ 3) - 4 * v ^ 3 * w ^ 3) + u ^ 6 + 5 * v ^ 6), u ^ 6 * v ^ 10 * w ^ 4 * (10 * u * v + 4 * u * w + 6 * v * w + 2 * u ^ 2 + 7 * v ^ 2 + w ^ 2), 2 * u ^ 12 * v ^ 21 * w ^ 8 * (u + v) * (u + w + v), u ^ 18 * v ^ 30 * w ^ 12 * (-4 * u * v * w + u ^ 3 + 5 * v ^ 3), 3 * u ^ 30 * v ^ 50 * w ^ 20 * (2 * w ^ 2 + 5 * v ^ 2 + 3 * u ^ 2), u ^ 12 * v ^ 20 * w ^ 8 * (10 * u * v + 4 * u * w + 6 * v * w + 2 * u ^ 2 + 7 * v ^ 2 + w ^ 2), 3 * u ^ 6 * v ^ 10 * w ^ 4 * (5v + 2w + 3u), 30 * u ^ 6 * v ^ 10 * w ^ 4, u ^ 18 * v ^ 30 * w ^ 12 * (10 * u * v + 4 * u * w + 6 * v * w + 2 * u ^ 2 + 7 * v ^ 2 + w ^ 2), 3 * u ^ 18 * v ^ 30 * w ^ 12 * (2 * w ^ 2 + 5 * v ^ 2 + 3 * u ^ 2), 3 * u ^ 12 * v ^ 20 * w ^ 8 * (5v + 2w + 3u), 3 * u ^ 18 * v ^ 30 * w ^ 12 * (5v + 2w + 3u), 30 * u ^ 30 * v ^ 50 * w ^ 20, 30 * u ^ 18 * v ^ 30 * w ^ 12, 30 * u ^ 12 * v ^ 20 * w ^ 8, 30 * u ^ 24 * v ^ 40 * w ^ 16]
            end
        f36(u, v, w, j) = begin
                return [36, 18u + 9v + 9w, 4 * u * v + 4 * u * w + v * w + 6 * u ^ 2, 10 * u * v + 10 * u * w + 4 * v * w + 8 * u ^ 2 + 2 * v ^ 2 + 2 * w ^ 2, 18 * u ^ 2 + 9 * v ^ 2 + 9 * w ^ 2, -4 * u * v * w + 6 * u ^ 3, 3 * u * v * w + u * v ^ 2 + u * w ^ 2 + 4 * u ^ 2 * v + 4 * u ^ 2 * w + 2 * u ^ 3, -j * u * v * w + u ^ 2 * v + u ^ 2 * w + u ^ 3, 5 * u * v ^ 2 + 5 * u * w ^ 2 + 2 * v * w ^ 2 + 5 * u ^ 2 * v + 5 * u ^ 2 * w + 2 * v ^ 2 * w + 8 * u ^ 3 + 2 * v ^ 3 + 2 * w ^ 3, -(u ^ 2) * v * w + u ^ 4, (((((((((((((((((((((-j * u ^ 4 * v ^ 7 * w ^ 8 - j * u ^ 4 * v ^ 8 * w ^ 7) + j * u ^ 6 * v ^ 6 * w ^ 7 + j * u ^ 6 * v ^ 7 * w ^ 6) - j * u ^ 7 * v ^ 4 * w ^ 8) + j * u ^ 7 * v ^ 6 * w ^ 6) - j * u ^ 7 * v ^ 8 * w ^ 4) - (2j + j ^ 2) * u ^ 8 * v ^ 4 * w ^ 7) + 2 * u ^ 8 * v ^ 5 * w ^ 6 + 2 * u ^ 8 * v ^ 6 * w ^ 5) - (2j + j ^ 2) * u ^ 8 * v ^ 7 * w ^ 4) - u ^ 9 * v ^ 2 * w ^ 8) - u ^ 9 * v ^ 3 * w ^ 7) + u ^ 9 * v ^ 4 * w ^ 6 + u ^ 9 * v ^ 5 * w ^ 5 + u ^ 9 * v ^ 6 * w ^ 4) - u ^ 9 * v ^ 7 * w ^ 3) - u ^ 9 * v ^ 8 * w ^ 2) - u ^ 10 * v ^ 2 * w ^ 7) - u ^ 10 * v ^ 3 * w ^ 6) - u ^ 10 * v ^ 6 * w ^ 3) - u ^ 10 * v ^ 7 * w ^ 2) - u ^ 11 * v ^ 8) - u ^ 11 * w ^ 8) - u ^ 12 * v ^ 7) - u ^ 12 * w ^ 7) + u ^ 13 * v ^ 2 * w ^ 4 + u ^ 13 * v ^ 3 * w ^ 3 + u ^ 13 * v ^ 4 * w ^ 2 + u ^ 15 * v ^ 4 + u ^ 15 * w ^ 4 + u ^ 19, u * v * w ^ 2 + u * v ^ 2 * w + u * v ^ 3 + u * w ^ 3 + u ^ 2 * v * w + 2 * u ^ 2 * v ^ 2 + 2 * u ^ 2 * w ^ 2 + 2 * u ^ 3 * v + 2 * u ^ 3 * w + 2 * u ^ 4, -j * u ^ 2 * v * w, 10 * u ^ 2 * v ^ 2 + 10 * u ^ 2 * w ^ 2 + 4 * v ^ 2 * w ^ 2 + 8 * u ^ 4 + 2 * v ^ 4 + 2 * w ^ 4, (((((((4 * u ^ 2 * v ^ 2 * w ^ 3 + 4 * u ^ 2 * v ^ 3 * w ^ 2 + 4 * u ^ 3 * v ^ 2 * w ^ 2) - 4 * u ^ 3 * v ^ 4) - 4 * u ^ 3 * w ^ 4) - v ^ 3 * w ^ 4) - 4 * u ^ 4 * v ^ 3) - 4 * u ^ 4 * w ^ 3) - v ^ 4 * w ^ 3) + 6 * u ^ 7, ((-u * v * w ^ 2 - u * v ^ 2 * w) - 2 * u ^ 2 * v * w) + 2 * u ^ 3 * v + 2 * u ^ 3 * w + 2 * u ^ 4, (((((((((-2 * u * v * w ^ 3 + 2 * u * v ^ 2 * w ^ 2) - 2 * u * v ^ 3 * w) - u * v ^ 4) - u * w ^ 4) + u ^ 2 * v * w ^ 2 + u ^ 2 * v ^ 2 * w) - u ^ 2 * v ^ 3) - u ^ 2 * w ^ 3) + v ^ 2 * w ^ 3) - 2 * u ^ 3 * v * w) + u ^ 3 * v ^ 2 + u ^ 3 * w ^ 2 + v ^ 3 * w ^ 2 + 2 * u ^ 5, j ^ 2 * u ^ 4 * v ^ 2 * w ^ 2, -(u ^ 4) * v ^ 2 * w ^ 2 + u ^ 8, 0, j ^ 2 * u ^ 8 * v ^ 9 * w ^ 9 + j ^ 2 * u ^ 9 * v ^ 8 * w ^ 9 + j ^ 2 * u ^ 9 * v ^ 9 * w ^ 8 + u ^ 13 * v ^ 4 * w ^ 9 + u ^ 13 * v ^ 6 * w ^ 7 + u ^ 13 * v ^ 7 * w ^ 6 + u ^ 13 * v ^ 9 * w ^ 4 + u ^ 14 * v ^ 4 * w ^ 8 + u ^ 14 * v ^ 6 * w ^ 6 + u ^ 14 * v ^ 8 * w ^ 4 + u ^ 17 * v ^ 9 + u ^ 17 * w ^ 9 + u ^ 18 * v ^ 8 + u ^ 18 * w ^ 8 + u ^ 26, ((-u * v * w ^ 3 - u * v ^ 3 * w) - 2 * u ^ 3 * v * w) + 2 * u ^ 3 * v ^ 2 + 2 * u ^ 3 * w ^ 2 + 2 * u ^ 5, j ^ 2 * u ^ 12 * v ^ 6 * w ^ 6 - j ^ 2 * u ^ 14 * v ^ 5 * w ^ 5, -(j ^ 2) * u ^ 5 * v ^ 5 * w ^ 5 + u ^ 10 * v ^ 5 + u ^ 10 * w ^ 5 + u ^ 15, j * u ^ 54 * v ^ 27 * w ^ 27 - j * u ^ 58 * v ^ 25 * w ^ 25, ((((((((((-2 * j * u ^ 4 * v ^ 7 * w ^ 7 + 3 * j * u ^ 6 * v ^ 6 * w ^ 6) - 2 * j * u ^ 7 * v ^ 4 * w ^ 7) - 2 * j * u ^ 7 * v ^ 7 * w ^ 4) + 3 * u ^ 8 * v ^ 4 * w ^ 6 + 3 * u ^ 8 * v ^ 5 * w ^ 5 + 3 * u ^ 8 * v ^ 6 * w ^ 4) - 2 * u ^ 9 * v ^ 2 * w ^ 7) - 2 * u ^ 9 * v ^ 3 * w ^ 6) - 2 * u ^ 9 * v ^ 6 * w ^ 3) - 2 * u ^ 9 * v ^ 7 * w ^ 2) - 2 * u ^ 11 * v ^ 7) - 2 * u ^ 11 * w ^ 7) + u ^ 12 * v ^ 2 * w ^ 4 + u ^ 12 * v ^ 3 * w ^ 3 + u ^ 12 * v ^ 4 * w ^ 2 + u ^ 14 * v ^ 4 + u ^ 14 * w ^ 4 + u ^ 18, (((-3 * j ^ 2 * u ^ 2 * v ^ 2 * w ^ 2 + 2 * u ^ 3 * v * w ^ 2 + 2 * u ^ 3 * v ^ 2 * w) - u ^ 4 * v ^ 2) - u ^ 4 * w ^ 2) + u ^ 6, -(u ^ 6) * v ^ 3 * w ^ 3, ((((((((((((((-u * v ^ 2 * w ^ 3 - u * v ^ 3 * w ^ 2) - u * v ^ 5) - u * w ^ 5) - u ^ 2 * v * w ^ 3) + 4 * u ^ 2 * v ^ 2 * w ^ 2) - u ^ 2 * v ^ 3 * w) + u ^ 2 * v ^ 4 + u ^ 2 * w ^ 4 + v ^ 2 * w ^ 4) - u ^ 3 * v * w ^ 2) - u ^ 3 * v ^ 2 * w) - 3 * u ^ 3 * v ^ 3) - 3 * u ^ 3 * w ^ 3) + 4 * u ^ 4 * v ^ 2 + 4 * u ^ 4 * w ^ 2 + v ^ 4 * w ^ 2) - 2 * u ^ 5 * v) - 2 * u ^ 5 * w) + 2 * u ^ 6, 0, (((12 * u ^ 2 * v ^ 2 * w ^ 2 - 8 * u ^ 3 * v ^ 3) - 8 * u ^ 3 * w ^ 3) - 2 * v ^ 3 * w ^ 3) + 6 * u ^ 6, 4 * j * u ^ 51 * v ^ 26 * w ^ 26 - 6 * j * u ^ 53 * v ^ 25 * w ^ 25, ((((((((((((((((((((-(j ^ 2) * u ^ 8 * v ^ 11 * w ^ 12 - j ^ 2 * u ^ 8 * v ^ 12 * w ^ 11) + j ^ 2 * u ^ 10 * v ^ 10 * w ^ 11 + j ^ 2 * u ^ 10 * v ^ 11 * w ^ 10) - j ^ 2 * u ^ 11 * v ^ 8 * w ^ 12) + j ^ 2 * u ^ 11 * v ^ 10 * w ^ 10) - j ^ 2 * u ^ 11 * v ^ 12 * w ^ 8) - j ^ 2 * u ^ 12 * v ^ 8 * w ^ 11) - j ^ 2 * u ^ 12 * v ^ 11 * w ^ 8) + u ^ 14 * v ^ 6 * w ^ 11 + u ^ 14 * v ^ 7 * w ^ 10 + u ^ 14 * v ^ 8 * w ^ 9 + u ^ 14 * v ^ 9 * w ^ 8 + u ^ 14 * v ^ 10 * w ^ 7 + u ^ 14 * v ^ 11 * w ^ 6) - u ^ 15 * v ^ 4 * w ^ 12) + u ^ 15 * v ^ 8 * w ^ 8) - u ^ 15 * v ^ 12 * w ^ 4) - u ^ 16 * v ^ 4 * w ^ 11) - u ^ 16 * v ^ 6 * w ^ 9) - u ^ 16 * v ^ 9 * w ^ 6) - u ^ 16 * v ^ 11 * w ^ 4) + u ^ 19 * v ^ 4 * w ^ 8 + u ^ 19 * v ^ 6 * w ^ 6 + u ^ 19 * v ^ 8 * w ^ 4) - u ^ 19 * v ^ 12) - u ^ 19 * w ^ 12) - u ^ 20 * v ^ 11) - u ^ 20 * w ^ 11) + u ^ 23 * v ^ 8 + u ^ 23 * w ^ 8 + u ^ 31, 0, j * u ^ 8 * v ^ 4 * w ^ 4, ((((((((-2 * u * v ^ 3 * w ^ 3 + 3 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v * w ^ 3) + 6 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 3 * w) - 2 * u ^ 3 * v ^ 4) - 2 * u ^ 3 * w ^ 4) - 4 * u ^ 4 * v ^ 3) - 4 * u ^ 4 * w ^ 3) + 2 * u ^ 6 * v + 2 * u ^ 6 * w + 2 * u ^ 7, j ^ 2 * u ^ 14 * v ^ 7 * w ^ 7 - j ^ 2 * u ^ 18 * v ^ 5 * w ^ 5, ((((j ^ 2 * u ^ 11 * v ^ 6 * w ^ 8 + j ^ 2 * u ^ 11 * v ^ 8 * w ^ 6) - 2 * j ^ 2 * u ^ 13 * v ^ 5 * w ^ 7) + 2 * j ^ 2 * u ^ 13 * v ^ 6 * w ^ 6) - 2 * j ^ 2 * u ^ 13 * v ^ 7 * w ^ 5) - 2 * j ^ 2 * u ^ 15 * v ^ 5 * w ^ 5, u ^ 34 * v ^ 17 * w ^ 17 - u ^ 38 * v ^ 15 * w ^ 15, j * u ^ 4 * v ^ 4 * w ^ 6 + 2 * j * u ^ 4 * v ^ 5 * w ^ 5 + j * u ^ 4 * v ^ 6 * w ^ 4 + 2 * j * u ^ 5 * v ^ 4 * w ^ 5 + 2 * j * u ^ 5 * v ^ 5 * w ^ 4 + u ^ 6 * v ^ 2 * w ^ 6 + (-j - 2 * j ^ 2) * u ^ 6 * v ^ 4 * w ^ 4 + u ^ 6 * v ^ 6 * w ^ 2 + 2 * u ^ 7 * v ^ 2 * w ^ 5 + 4 * u ^ 7 * v ^ 3 * w ^ 4 + 4 * u ^ 7 * v ^ 4 * w ^ 3 + 2 * u ^ 7 * v ^ 5 * w ^ 2 + u ^ 8 * v ^ 2 * w ^ 4 + 2 * u ^ 8 * v ^ 3 * w ^ 3 + u ^ 8 * v ^ 4 * w ^ 2 + 2 * u ^ 9 * v ^ 5 + 2 * u ^ 9 * w ^ 5 + u ^ 10 * v ^ 4 + u ^ 10 * w ^ 4 + u ^ 14, 0, -(j ^ 2) * u ^ 22 * v ^ 11 * w ^ 11, 4 * j ^ 2 * u ^ 11 * v ^ 6 * w ^ 6 - 6 * j ^ 2 * u ^ 13 * v ^ 5 * w ^ 5, j * u ^ 4 * v ^ 5 * w ^ 5 + j * u ^ 5 * v ^ 4 * w ^ 5 + j * u ^ 5 * v ^ 5 * w ^ 4 + u ^ 7 * v ^ 2 * w ^ 5 + u ^ 7 * v ^ 3 * w ^ 4 + u ^ 7 * v ^ 4 * w ^ 3 + u ^ 7 * v ^ 5 * w ^ 2 + u ^ 8 * v ^ 2 * w ^ 4 + u ^ 8 * v ^ 3 * w ^ 3 + u ^ 8 * v ^ 4 * w ^ 2 + u ^ 9 * v ^ 5 + u ^ 9 * w ^ 5 + u ^ 10 * v ^ 4 + u ^ 10 * w ^ 4 + u ^ 14, (((j * u ^ 51 * v ^ 26 * w ^ 27 + j * u ^ 51 * v ^ 27 * w ^ 26 + 2 * j * u ^ 52 * v ^ 26 * w ^ 26) - 2 * j * u ^ 53 * v ^ 25 * w ^ 26) - 2 * j * u ^ 53 * v ^ 26 * w ^ 25) - 2 * j * u ^ 54 * v ^ 25 * w ^ 25, j * u ^ 52 * v ^ 26 * w ^ 26 - j * u ^ 54 * v ^ 25 * w ^ 25, (((((((((3 * u ^ 2 * v ^ 2 * w ^ 4 - 2 * u ^ 2 * v ^ 3 * w ^ 3) + 3 * u ^ 2 * v ^ 4 * w ^ 2) - 2 * u ^ 3 * v ^ 2 * w ^ 3) - 2 * u ^ 3 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v ^ 5) - 2 * u ^ 3 * w ^ 5) + 6 * u ^ 4 * v ^ 2 * w ^ 2) - 4 * u ^ 5 * v ^ 3) - 4 * u ^ 5 * w ^ 3) + 2 * u ^ 6 * v ^ 2 + 2 * u ^ 6 * w ^ 2 + 2 * u ^ 8, (-9 * j * u ^ 50 * v ^ 25 * w ^ 26 - 9 * j * u ^ 50 * v ^ 26 * w ^ 25) - 18 * j * u ^ 51 * v ^ 25 * w ^ 25, (((j ^ 2 * u ^ 11 * v ^ 6 * w ^ 7 + j ^ 2 * u ^ 11 * v ^ 7 * w ^ 6 + 2 * j ^ 2 * u ^ 12 * v ^ 6 * w ^ 6) - 2 * j ^ 2 * u ^ 13 * v ^ 5 * w ^ 6) - 2 * j ^ 2 * u ^ 13 * v ^ 6 * w ^ 5) - 2 * j ^ 2 * u ^ 14 * v ^ 5 * w ^ 5, -(j ^ 2) * u ^ 42 * v ^ 21 * w ^ 21 + j ^ 2 * u ^ 44 * v ^ 20 * w ^ 20, 0, ((((j * u ^ 51 * v ^ 26 * w ^ 28 + j * u ^ 51 * v ^ 28 * w ^ 26) - 2 * j * u ^ 53 * v ^ 25 * w ^ 27) + 2 * j * u ^ 53 * v ^ 26 * w ^ 26) - 2 * j * u ^ 53 * v ^ 27 * w ^ 25) - 2 * j * u ^ 55 * v ^ 25 * w ^ 25, ((((-2 * j ^ 2 * u ^ 10 * v ^ 5 * w ^ 9 - 4 * j ^ 2 * u ^ 10 * v ^ 7 * w ^ 7) - 2 * j ^ 2 * u ^ 10 * v ^ 9 * w ^ 5) - 10 * j ^ 2 * u ^ 12 * v ^ 5 * w ^ 7) - 10 * j ^ 2 * u ^ 12 * v ^ 7 * w ^ 5) - 8 * j ^ 2 * u ^ 14 * v ^ 5 * w ^ 5, (-9 * j ^ 2 * u ^ 10 * v ^ 5 * w ^ 7 - 9 * j ^ 2 * u ^ 10 * v ^ 7 * w ^ 5) - 18 * j ^ 2 * u ^ 12 * v ^ 5 * w ^ 5, u ^ 32 * v ^ 16 * w ^ 16 - u ^ 34 * v ^ 15 * w ^ 15, (((((((-2 * j * u ^ 50 * v ^ 25 * w ^ 28 - 2 * j * u ^ 50 * v ^ 26 * w ^ 27) - 2 * j * u ^ 50 * v ^ 27 * w ^ 26) - 2 * j * u ^ 50 * v ^ 28 * w ^ 25) - 5 * j * u ^ 51 * v ^ 25 * w ^ 27) - 5 * j * u ^ 51 * v ^ 27 * w ^ 25) - 5 * j * u ^ 52 * v ^ 25 * w ^ 26) - 5 * j * u ^ 52 * v ^ 26 * w ^ 25) - 8 * j * u ^ 53 * v ^ 25 * w ^ 25, 3 * j * u ^ 4 * v ^ 4 * w ^ 5 + 3 * j * u ^ 4 * v ^ 5 * w ^ 4 + 3 * j * u ^ 5 * v ^ 4 * w ^ 4 + 2 * u ^ 6 * v ^ 2 * w ^ 5 + 3 * u ^ 6 * v ^ 3 * w ^ 4 + 3 * u ^ 6 * v ^ 4 * w ^ 3 + 2 * u ^ 6 * v ^ 5 * w ^ 2 + 3 * u ^ 7 * v ^ 2 * w ^ 4 + 4 * u ^ 7 * v ^ 3 * w ^ 3 + 3 * u ^ 7 * v ^ 4 * w ^ 2 + u ^ 8 * v ^ 5 + u ^ 8 * w ^ 5 + 2 * u ^ 9 * v ^ 4 + 2 * u ^ 9 * w ^ 4 + u ^ 13, 0, -(j ^ 2) * u ^ 44 * v ^ 22 * w ^ 22 + j ^ 2 * u ^ 48 * v ^ 20 * w ^ 20, 0, (((((((-2 * j ^ 2 * u ^ 10 * v ^ 5 * w ^ 8 - 2 * j ^ 2 * u ^ 10 * v ^ 6 * w ^ 7) - 2 * j ^ 2 * u ^ 10 * v ^ 7 * w ^ 6) - 2 * j ^ 2 * u ^ 10 * v ^ 8 * w ^ 5) - 5 * j ^ 2 * u ^ 11 * v ^ 5 * w ^ 7) - 5 * j ^ 2 * u ^ 11 * v ^ 7 * w ^ 5) - 5 * j ^ 2 * u ^ 12 * v ^ 5 * w ^ 6) - 5 * j ^ 2 * u ^ 12 * v ^ 6 * w ^ 5) - 8 * j ^ 2 * u ^ 13 * v ^ 5 * w ^ 5, 0, ((-j * u ^ 21 * v ^ 11 * w ^ 12 - j * u ^ 21 * v ^ 12 * w ^ 11) - 2 * j * u ^ 22 * v ^ 11 * w ^ 11) + 2 * j * u ^ 23 * v ^ 10 * w ^ 11 + 2 * j * u ^ 23 * v ^ 11 * w ^ 10 + 2 * j * u ^ 24 * v ^ 10 * w ^ 10, -j * u ^ 22 * v ^ 11 * w ^ 11 + j * u ^ 24 * v ^ 10 * w ^ 10, 9 * j * u ^ 4 * v ^ 4 * w ^ 4 + 6 * u ^ 6 * v ^ 2 * w ^ 4 + 8 * u ^ 6 * v ^ 3 * w ^ 3 + 6 * u ^ 6 * v ^ 4 * w ^ 2 + 3 * u ^ 8 * v ^ 4 + 3 * u ^ 8 * w ^ 4 + u ^ 12, (((((((2 * j ^ 2 * u ^ 11 * v ^ 8 * w ^ 8 - 3 * j ^ 2 * u ^ 12 * v ^ 7 * w ^ 8) - 3 * j ^ 2 * u ^ 12 * v ^ 8 * w ^ 7) + 2 * j ^ 2 * u ^ 13 * v ^ 5 * w ^ 9 + 2 * j ^ 2 * u ^ 13 * v ^ 6 * w ^ 8) - 6 * j ^ 2 * u ^ 13 * v ^ 7 * w ^ 7) + 2 * j ^ 2 * u ^ 13 * v ^ 8 * w ^ 6 + 2 * j ^ 2 * u ^ 13 * v ^ 9 * w ^ 5 + 4 * j ^ 2 * u ^ 14 * v ^ 5 * w ^ 8 + 4 * j ^ 2 * u ^ 14 * v ^ 8 * w ^ 5) - 2 * j ^ 2 * u ^ 16 * v ^ 5 * w ^ 6) - 2 * j ^ 2 * u ^ 16 * v ^ 6 * w ^ 5) - 2 * j ^ 2 * u ^ 17 * v ^ 5 * w ^ 5, u ^ 12 * v ^ 6 * w ^ 6, ((((((((((((((-j * u ^ 21 * v ^ 13 * w ^ 14 - j * u ^ 21 * v ^ 14 * w ^ 13) + j * u ^ 22 * v ^ 12 * w ^ 14 + 2 * j * u ^ 22 * v ^ 13 * w ^ 13 + j * u ^ 22 * v ^ 14 * w ^ 12) - j * u ^ 23 * v ^ 10 * w ^ 15) - j * u ^ 23 * v ^ 11 * w ^ 14) + 3 * j * u ^ 23 * v ^ 12 * w ^ 13 + 3 * j * u ^ 23 * v ^ 13 * w ^ 12) - j * u ^ 23 * v ^ 14 * w ^ 11) - j * u ^ 23 * v ^ 15 * w ^ 10) - 3 * j * u ^ 24 * v ^ 10 * w ^ 14) - j * u ^ 24 * v ^ 11 * w ^ 13) + 2 * j * u ^ 24 * v ^ 12 * w ^ 12) - j * u ^ 24 * v ^ 13 * w ^ 11) - 3 * j * u ^ 24 * v ^ 14 * w ^ 10) - 2 * j * u ^ 25 * v ^ 10 * w ^ 13) - 2 * j * u ^ 25 * v ^ 13 * w ^ 10) + 2 * j * u ^ 27 * v ^ 10 * w ^ 11 + 2 * j * u ^ 27 * v ^ 11 * w ^ 10 + 2 * j * u ^ 28 * v ^ 10 * w ^ 10, 9 * j ^ 2 * u ^ 8 * v ^ 8 * w ^ 8 + 6 * u ^ 12 * v ^ 4 * w ^ 8 + 8 * u ^ 12 * v ^ 6 * w ^ 6 + 6 * u ^ 12 * v ^ 8 * w ^ 4 + 3 * u ^ 16 * v ^ 8 + 3 * u ^ 16 * w ^ 8 + u ^ 24, (((((((-2 * u ^ 30 * v ^ 15 * w ^ 18 - 2 * u ^ 30 * v ^ 16 * w ^ 17) - 2 * u ^ 30 * v ^ 17 * w ^ 16) - 2 * u ^ 30 * v ^ 18 * w ^ 15) - 5 * u ^ 31 * v ^ 15 * w ^ 17) - 5 * u ^ 31 * v ^ 17 * w ^ 15) - 5 * u ^ 32 * v ^ 15 * w ^ 16) - 5 * u ^ 32 * v ^ 16 * w ^ 15) - 8 * u ^ 33 * v ^ 15 * w ^ 15, ((((((((-(j ^ 2) * u ^ 11 * v ^ 5 * w ^ 8 - j ^ 2 * u ^ 11 * v ^ 6 * w ^ 7) - j ^ 2 * u ^ 11 * v ^ 7 * w ^ 6) - j ^ 2 * u ^ 11 * v ^ 8 * w ^ 5) - 2 * j ^ 2 * u ^ 12 * v ^ 5 * w ^ 7) - j ^ 2 * u ^ 12 * v ^ 6 * w ^ 6) - 2 * j ^ 2 * u ^ 12 * v ^ 7 * w ^ 5) - 2 * j ^ 2 * u ^ 13 * v ^ 5 * w ^ 6) - 2 * j ^ 2 * u ^ 13 * v ^ 6 * w ^ 5) - 2 * j ^ 2 * u ^ 14 * v ^ 5 * w ^ 5, -j * u ^ 24 * v ^ 12 * w ^ 12 + j * u ^ 28 * v ^ 10 * w ^ 10, (((((((-3 * j ^ 2 * u ^ 12 * v ^ 7 * w ^ 9 + 2 * j ^ 2 * u ^ 12 * v ^ 8 * w ^ 8) - 3 * j ^ 2 * u ^ 12 * v ^ 9 * w ^ 7) + 2 * j ^ 2 * u ^ 13 * v ^ 5 * w ^ 10 + 2 * j ^ 2 * u ^ 13 * v ^ 7 * w ^ 8 + 2 * j ^ 2 * u ^ 13 * v ^ 8 * w ^ 7 + 2 * j ^ 2 * u ^ 13 * v ^ 10 * w ^ 5) - 6 * j ^ 2 * u ^ 14 * v ^ 7 * w ^ 7) + 4 * j ^ 2 * u ^ 15 * v ^ 5 * w ^ 8 + 4 * j ^ 2 * u ^ 15 * v ^ 8 * w ^ 5) - 2 * j ^ 2 * u ^ 16 * v ^ 5 * w ^ 7) - 2 * j ^ 2 * u ^ 16 * v ^ 7 * w ^ 5) - 2 * j ^ 2 * u ^ 18 * v ^ 5 * w ^ 5, (((u ^ 31 * v ^ 16 * w ^ 17 + u ^ 31 * v ^ 17 * w ^ 16 + 2 * u ^ 32 * v ^ 16 * w ^ 16) - 2 * u ^ 33 * v ^ 15 * w ^ 16) - 2 * u ^ 33 * v ^ 16 * w ^ 15) - 2 * u ^ 34 * v ^ 15 * w ^ 15, -4 * j * u ^ 21 * v ^ 11 * w ^ 11 + 6 * j * u ^ 23 * v ^ 10 * w ^ 10, (((-(j ^ 2) * u ^ 41 * v ^ 21 * w ^ 23 - j ^ 2 * u ^ 41 * v ^ 23 * w ^ 21) + 2 * j ^ 2 * u ^ 43 * v ^ 20 * w ^ 22) - 2 * j ^ 2 * u ^ 43 * v ^ 21 * w ^ 21) + 2 * j ^ 2 * u ^ 43 * v ^ 22 * w ^ 20 + 2 * j ^ 2 * u ^ 45 * v ^ 20 * w ^ 20, -4 * j ^ 2 * u ^ 41 * v ^ 21 * w ^ 21 + 6 * j ^ 2 * u ^ 43 * v ^ 20 * w ^ 20, ((((u ^ 31 * v ^ 16 * w ^ 18 + u ^ 31 * v ^ 18 * w ^ 16) - 2 * u ^ 33 * v ^ 15 * w ^ 17) + 2 * u ^ 33 * v ^ 16 * w ^ 16) - 2 * u ^ 33 * v ^ 17 * w ^ 15) - 2 * u ^ 35 * v ^ 15 * w ^ 15, (((3 * j * u ^ 12 * v ^ 7 * w ^ 7 - 2 * j ^ 2 * u ^ 13 * v ^ 6 * w ^ 7) - 2 * j ^ 2 * u ^ 13 * v ^ 7 * w ^ 6) + j ^ 2 * u ^ 14 * v ^ 5 * w ^ 7 + j ^ 2 * u ^ 14 * v ^ 7 * w ^ 5) - j ^ 2 * u ^ 16 * v ^ 5 * w ^ 5, ((((((((-2 * j * u ^ 21 * v ^ 13 * w ^ 13 + 3 * j * u ^ 22 * v ^ 12 * w ^ 13 + 3 * j * u ^ 22 * v ^ 13 * w ^ 12) - 2 * j * u ^ 23 * v ^ 10 * w ^ 14) - 2 * j * u ^ 23 * v ^ 11 * w ^ 13) + 6 * j * u ^ 23 * v ^ 12 * w ^ 12) - 2 * j * u ^ 23 * v ^ 13 * w ^ 11) - 2 * j * u ^ 23 * v ^ 14 * w ^ 10) - 4 * j * u ^ 24 * v ^ 10 * w ^ 13) - 4 * j * u ^ 24 * v ^ 13 * w ^ 10) + 2 * j * u ^ 26 * v ^ 10 * w ^ 11 + 2 * j * u ^ 26 * v ^ 11 * w ^ 10 + 2 * j * u ^ 27 * v ^ 10 * w ^ 10, ((2 * j ^ 2 * u ^ 10 * v ^ 8 * w ^ 8 - 12 * j ^ 2 * u ^ 12 * v ^ 7 * w ^ 7) + 8 * j ^ 2 * u ^ 13 * v ^ 5 * w ^ 8 + 8 * j ^ 2 * u ^ 13 * v ^ 8 * w ^ 5) - 6 * j ^ 2 * u ^ 16 * v ^ 5 * w ^ 5, ((((-(j ^ 2) * u ^ 11 * v ^ 5 * w ^ 7 - 3 * j ^ 2 * u ^ 11 * v ^ 6 * w ^ 6) - j ^ 2 * u ^ 11 * v ^ 7 * w ^ 5) - 4 * j ^ 2 * u ^ 12 * v ^ 5 * w ^ 6) - 4 * j ^ 2 * u ^ 12 * v ^ 6 * w ^ 5) - 2 * j ^ 2 * u ^ 13 * v ^ 5 * w ^ 5, j * u ^ 20 * v ^ 11 * w ^ 11 + 4 * j * u ^ 21 * v ^ 10 * w ^ 11 + 4 * j * u ^ 21 * v ^ 11 * w ^ 10 + 6 * j * u ^ 22 * v ^ 10 * w ^ 10, 0, 9 * j ^ 2 * u ^ 40 * v ^ 20 * w ^ 22 + 9 * j ^ 2 * u ^ 40 * v ^ 22 * w ^ 20 + 18 * j ^ 2 * u ^ 42 * v ^ 20 * w ^ 20, ((-(j ^ 2) * u ^ 10 * v ^ 6 * w ^ 6 - 4 * j ^ 2 * u ^ 11 * v ^ 5 * w ^ 6) - 4 * j ^ 2 * u ^ 11 * v ^ 6 * w ^ 5) - 6 * j ^ 2 * u ^ 12 * v ^ 5 * w ^ 5, (((-2 * j * u ^ 20 * v ^ 13 * w ^ 13 + 12 * j * u ^ 22 * v ^ 12 * w ^ 12) - 8 * j * u ^ 23 * v ^ 10 * w ^ 13) - 8 * j * u ^ 23 * v ^ 13 * w ^ 10) + 6 * j * u ^ 26 * v ^ 10 * w ^ 10, ((((-2 * j ^ 2 * u ^ 10 * v ^ 5 * w ^ 7 - 4 * j ^ 2 * u ^ 10 * v ^ 6 * w ^ 6) - 2 * j ^ 2 * u ^ 10 * v ^ 7 * w ^ 5) - 10 * j ^ 2 * u ^ 11 * v ^ 5 * w ^ 6) - 10 * j ^ 2 * u ^ 11 * v ^ 6 * w ^ 5) - 8 * j ^ 2 * u ^ 12 * v ^ 5 * w ^ 5, j * u ^ 21 * v ^ 10 * w ^ 12 + 3 * j * u ^ 21 * v ^ 11 * w ^ 11 + j * u ^ 21 * v ^ 12 * w ^ 10 + 4 * j * u ^ 22 * v ^ 10 * w ^ 11 + 4 * j * u ^ 22 * v ^ 11 * w ^ 10 + 2 * j * u ^ 23 * v ^ 10 * w ^ 10, 4 * u ^ 31 * v ^ 16 * w ^ 16 - 6 * u ^ 33 * v ^ 15 * w ^ 15, (-9 * j * u ^ 50 * v ^ 25 * w ^ 27 - 9 * j * u ^ 50 * v ^ 27 * w ^ 25) - 18 * j * u ^ 52 * v ^ 25 * w ^ 25, 2 * j * u ^ 20 * v ^ 10 * w ^ 12 + 4 * j * u ^ 20 * v ^ 11 * w ^ 11 + 2 * j * u ^ 20 * v ^ 12 * w ^ 10 + 10 * j * u ^ 21 * v ^ 10 * w ^ 11 + 10 * j * u ^ 21 * v ^ 11 * w ^ 10 + 8 * j * u ^ 22 * v ^ 10 * w ^ 10, (-9 * j ^ 2 * u ^ 10 * v ^ 5 * w ^ 6 - 9 * j ^ 2 * u ^ 10 * v ^ 6 * w ^ 5) - 18 * j ^ 2 * u ^ 11 * v ^ 5 * w ^ 5, -36 * j ^ 2 * u ^ 10 * v ^ 5 * w ^ 5, ((((-2 * u ^ 30 * v ^ 15 * w ^ 17 - 4 * u ^ 30 * v ^ 16 * w ^ 16) - 2 * u ^ 30 * v ^ 17 * w ^ 15) - 10 * u ^ 31 * v ^ 15 * w ^ 16) - 10 * u ^ 31 * v ^ 16 * w ^ 15) - 8 * u ^ 32 * v ^ 15 * w ^ 15, (-9 * u ^ 30 * v ^ 15 * w ^ 17 - 9 * u ^ 30 * v ^ 17 * w ^ 15) - 18 * u ^ 32 * v ^ 15 * w ^ 15, 9 * j * u ^ 20 * v ^ 10 * w ^ 11 + 9 * j * u ^ 20 * v ^ 11 * w ^ 10 + 18 * j * u ^ 21 * v ^ 10 * w ^ 10, (-9 * u ^ 30 * v ^ 15 * w ^ 16 - 9 * u ^ 30 * v ^ 16 * w ^ 15) - 18 * u ^ 31 * v ^ 15 * w ^ 15, -36 * j * u ^ 50 * v ^ 25 * w ^ 25, -36 * u ^ 30 * v ^ 15 * w ^ 15, 36 * j * u ^ 20 * v ^ 10 * w ^ 10, 36 * j ^ 2 * u ^ 40 * v ^ 20 * w ^ 20]
            end
        f40(u, v, w) = begin
                return [40, 10u + 12v + 18w, 2 * u * v + 4 * u * w + 6 * v * w + 4 * w ^ 2, 6 * u * v + 10 * u * w + 10 * v * w + 2 * u ^ 2 + 4 * v ^ 2 + 8 * w ^ 2, 10 * u ^ 2 + 12 * v ^ 2 + 18 * w ^ 2, -4 * u * v * w + 4 * w ^ 3, 4 * u * v * w + u * v ^ 2 + 3 * u * w ^ 2 + 3 * v * w ^ 2 + u ^ 2 * w + 2 * v ^ 2 * w + 2 * w ^ 3, u * v * w + u * w ^ 2 + v * w ^ 2, 3 * u * v ^ 2 + 5 * u * w ^ 2 + 5 * v * w ^ 2 + 3 * u ^ 2 * v + 5 * u ^ 2 * w + 5 * v ^ 2 * w + 2 * u ^ 3 + 4 * v ^ 3 + 8 * w ^ 3, -u * v * w ^ 2 - v ^ 2 * w ^ 2, ((((((((((((((((((((u ^ 2 * v ^ 4 * w ^ 13 - u ^ 2 * v ^ 7 * w ^ 10) - u ^ 2 * v ^ 8 * w ^ 9) + u ^ 3 * v ^ 3 * w ^ 13) - u ^ 3 * v ^ 6 * w ^ 10) - u ^ 3 * v ^ 7 * w ^ 9) + u ^ 4 * v ^ 6 * w ^ 9 + 2 * u ^ 4 * v ^ 7 * w ^ 8 + u ^ 4 * v ^ 8 * w ^ 7 + u ^ 4 * w ^ 15 + v ^ 4 * w ^ 15 + u ^ 5 * v ^ 5 * w ^ 9 + 2 * u ^ 5 * v ^ 6 * w ^ 8) - u ^ 6 * v ^ 3 * w ^ 10) + u ^ 6 * v ^ 5 * w ^ 8) - u ^ 6 * v ^ 6 * w ^ 7) - u ^ 6 * v ^ 7 * w ^ 6) - u ^ 7 * v ^ 3 * w ^ 9) + u ^ 7 * v ^ 4 * w ^ 8) - u ^ 7 * v ^ 6 * w ^ 6) + u ^ 7 * v ^ 8 * w ^ 4) - u ^ 7 * w ^ 12) - v ^ 7 * w ^ 12) + u ^ 8 * v ^ 4 * w ^ 7 + u ^ 8 * v ^ 7 * w ^ 4) - u ^ 8 * w ^ 11) - v ^ 8 * w ^ 11) - v ^ 9 * w ^ 10) - v ^ 10 * w ^ 9, u * v * w ^ 2 + u * v ^ 2 * w + u * v ^ 3 + 2 * u * w ^ 3 + 2 * v * w ^ 3 + 2 * u ^ 2 * v * w + u ^ 2 * w ^ 2 + v ^ 2 * w ^ 2 + u ^ 3 * w + 2 * v ^ 3 * w + 2 * w ^ 4, 0, 6 * u ^ 2 * v ^ 2 + 10 * u ^ 2 * w ^ 2 + 10 * v ^ 2 * w ^ 2 + 2 * u ^ 4 + 4 * v ^ 4 + 8 * w ^ 4, (((((((4 * u ^ 2 * v ^ 2 * w ^ 3 + 4 * u ^ 2 * v ^ 3 * w ^ 2 + 4 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 4) - 4 * u ^ 3 * w ^ 4) - 6 * v ^ 3 * w ^ 4) - 2 * u ^ 4 * v ^ 3) - 4 * u ^ 4 * w ^ 3) - 6 * v ^ 4 * w ^ 3) + 4 * w ^ 7, (((-2 * u * v * w ^ 2 - u * v ^ 2 * w) + u * w ^ 3 + v * w ^ 3) - u ^ 2 * v * w) + 2 * w ^ 4, (((((((((((-3 * u * v * w ^ 3 + u * v ^ 2 * w ^ 2) - 3 * u * v ^ 3 * w) - u * v ^ 4) - u * w ^ 4) - v * w ^ 4) + u ^ 2 * v * w ^ 2 + 2 * u ^ 2 * v ^ 2 * w + u ^ 2 * v ^ 3 + u ^ 2 * w ^ 3) - 2 * u ^ 3 * v * w) - u ^ 3 * w ^ 2) - v ^ 3 * w ^ 2) - u ^ 4 * w) - 2 * v ^ 4 * w) + 2 * w ^ 5, 0, -(u ^ 2) * v ^ 2 * w ^ 4 - v ^ 4 * w ^ 4, 0, (((((u ^ 4 * v ^ 8 * w ^ 14 + u ^ 4 * v ^ 9 * w ^ 13 + u ^ 6 * v ^ 6 * w ^ 14 + u ^ 6 * v ^ 7 * w ^ 13 + u ^ 7 * v ^ 6 * w ^ 13) - u ^ 8 * v ^ 9 * w ^ 9) + u ^ 8 * w ^ 18 + v ^ 8 * w ^ 18) - u ^ 9 * v ^ 8 * w ^ 9) - u ^ 9 * v ^ 9 * w ^ 8) + u ^ 9 * w ^ 17 + v ^ 9 * w ^ 17 + v ^ 13 * w ^ 13, (((-2 * u * v * w ^ 3 - u * v ^ 3 * w) + u ^ 2 * w ^ 3 + v ^ 2 * w ^ 3) - u ^ 3 * v * w) + 2 * w ^ 5, -(u ^ 5) * v ^ 8 * w ^ 11 - u ^ 6 * v ^ 7 * w ^ 11, u ^ 5 * v ^ 5 * w ^ 5 + u ^ 5 * w ^ 10 + v ^ 5 * w ^ 10, -(u ^ 25) * v ^ 34 * w ^ 49 - u ^ 27 * v ^ 32 * w ^ 49, (((((((((u ^ 2 * v ^ 4 * w ^ 12 - 2 * u ^ 2 * v ^ 7 * w ^ 9) + u ^ 3 * v ^ 3 * w ^ 12) - 2 * u ^ 3 * v ^ 6 * w ^ 9) + 3 * u ^ 4 * v ^ 6 * w ^ 8 + 2 * u ^ 4 * v ^ 7 * w ^ 7 + u ^ 4 * w ^ 14 + v ^ 4 * w ^ 14 + 3 * u ^ 5 * v ^ 5 * w ^ 8) - 2 * u ^ 6 * v ^ 3 * w ^ 9) - 3 * u ^ 6 * v ^ 6 * w ^ 6) + 2 * u ^ 7 * v ^ 4 * w ^ 7 + 2 * u ^ 7 * v ^ 7 * w ^ 4) - 2 * u ^ 7 * w ^ 11) - 2 * v ^ 7 * w ^ 11) - 2 * v ^ 9 * w ^ 9, (((2 * u * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 2 * w ^ 2) - u ^ 2 * w ^ 4) - v ^ 2 * w ^ 4) - 2 * v ^ 3 * w ^ 3, 0, ((((((((((((((((-u * v ^ 2 * w ^ 3 - u * v ^ 3 * w ^ 2) - u * v ^ 5) - 2 * u * w ^ 5) - 2 * v * w ^ 5) - 2 * u ^ 2 * v * w ^ 3) + 4 * u ^ 2 * v ^ 2 * w ^ 2) - 2 * u ^ 2 * v ^ 3 * w) + u ^ 2 * v ^ 4 + 3 * u ^ 2 * w ^ 4 + 3 * v ^ 2 * w ^ 4) - u ^ 3 * v * w ^ 2) - u ^ 3 * v ^ 2 * w) - u ^ 3 * v ^ 3) - 3 * u ^ 3 * w ^ 3) - 4 * v ^ 3 * w ^ 3) + u ^ 4 * v ^ 2 + u ^ 4 * w ^ 2 + v ^ 4 * w ^ 2) - u ^ 5 * w) - 2 * v ^ 5 * w) + 2 * w ^ 6, 0, (((12 * u ^ 2 * v ^ 2 * w ^ 2 - 4 * u ^ 3 * v ^ 3) - 8 * u ^ 3 * w ^ 3) - 12 * v ^ 3 * w ^ 3) + 4 * w ^ 6, 4 * u ^ 25 * v ^ 30 * w ^ 48 - 4 * u ^ 26 * v ^ 31 * w ^ 46, (((((((((((((((((((u ^ 4 * v ^ 8 * w ^ 19 - u ^ 4 * v ^ 11 * w ^ 16) - u ^ 4 * v ^ 12 * w ^ 15) + u ^ 6 * v ^ 6 * w ^ 19) - u ^ 6 * v ^ 9 * w ^ 16) + u ^ 6 * v ^ 11 * w ^ 14 + u ^ 7 * v ^ 10 * w ^ 14 + u ^ 8 * v ^ 8 * w ^ 15 + u ^ 8 * v ^ 9 * w ^ 14 + u ^ 8 * v ^ 11 * w ^ 12 + u ^ 8 * v ^ 12 * w ^ 11 + u ^ 8 * w ^ 23 + v ^ 8 * w ^ 23) - u ^ 9 * v ^ 6 * w ^ 16) + u ^ 9 * v ^ 8 * w ^ 14) - u ^ 10 * v ^ 6 * w ^ 15) - u ^ 10 * v ^ 10 * w ^ 11) - u ^ 10 * v ^ 11 * w ^ 10) + u ^ 11 * v ^ 8 * w ^ 12) - u ^ 11 * v ^ 10 * w ^ 10) + u ^ 11 * v ^ 12 * w ^ 8) - u ^ 11 * w ^ 20) - v ^ 11 * w ^ 20) + u ^ 12 * v ^ 8 * w ^ 11 + u ^ 12 * v ^ 11 * w ^ 8) - u ^ 12 * w ^ 19) - v ^ 12 * w ^ 19) - v ^ 15 * w ^ 16) - v ^ 16 * w ^ 15, 0, 0, (((((((((-4 * u * v ^ 3 * w ^ 3 + u * w ^ 6 + v * w ^ 6 + 6 * u ^ 2 * v ^ 2 * w ^ 3 + 3 * u ^ 2 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v * w ^ 3) + 3 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 3 * w) - 2 * u ^ 3 * v ^ 4) - 4 * u ^ 3 * w ^ 4) - 4 * v ^ 3 * w ^ 4) - 2 * u ^ 4 * w ^ 3) - 4 * v ^ 4 * w ^ 3) + 2 * w ^ 7, -(u ^ 5) * v ^ 10 * w ^ 13 - u ^ 7 * v ^ 8 * w ^ 13, ((((2 * u ^ 5 * v ^ 6 * w ^ 14 + u ^ 5 * v ^ 8 * w ^ 12) - 2 * u ^ 6 * v ^ 7 * w ^ 12) - u ^ 6 * v ^ 9 * w ^ 10) + u ^ 7 * v ^ 6 * w ^ 12) - u ^ 8 * v ^ 7 * w ^ 10, -(u ^ 15) * v ^ 22 * w ^ 31 - u ^ 17 * v ^ 20 * w ^ 31, ((((((((u ^ 2 * v ^ 4 * w ^ 8 + 2 * u ^ 2 * v ^ 5 * w ^ 7 + u ^ 2 * v ^ 6 * w ^ 6 + 2 * u ^ 3 * v ^ 3 * w ^ 8 + 4 * u ^ 3 * v ^ 4 * w ^ 7 + 2 * u ^ 4 * v ^ 3 * w ^ 7 + u ^ 4 * v ^ 4 * w ^ 6) - 2 * u ^ 4 * v ^ 5 * w ^ 5) - u ^ 4 * v ^ 6 * w ^ 4) + u ^ 4 * w ^ 10 + v ^ 4 * w ^ 10) - 2 * u ^ 5 * v ^ 4 * w ^ 5) - 2 * u ^ 5 * v ^ 5 * w ^ 4) + 2 * u ^ 5 * w ^ 9 + 2 * v ^ 5 * w ^ 9) - u ^ 6 * v ^ 4 * w ^ 4) + v ^ 6 * w ^ 8 + v ^ 8 * w ^ 6, 0, 0, 4 * u ^ 5 * v ^ 6 * w ^ 12 - 4 * u ^ 6 * v ^ 7 * w ^ 10, (((((u ^ 2 * v ^ 4 * w ^ 8 + u ^ 2 * v ^ 5 * w ^ 7 + u ^ 3 * v ^ 3 * w ^ 8 + u ^ 3 * v ^ 4 * w ^ 7 + u ^ 4 * v ^ 3 * w ^ 7) - u ^ 4 * v ^ 5 * w ^ 5) + u ^ 4 * w ^ 10 + v ^ 4 * w ^ 10) - u ^ 5 * v ^ 4 * w ^ 5) - u ^ 5 * v ^ 5 * w ^ 4) + u ^ 5 * w ^ 9 + v ^ 5 * w ^ 9 + v ^ 7 * w ^ 7, (((2 * u ^ 25 * v ^ 30 * w ^ 49 + u ^ 25 * v ^ 31 * w ^ 48 + u ^ 26 * v ^ 30 * w ^ 48) - 2 * u ^ 26 * v ^ 31 * w ^ 47) - u ^ 26 * v ^ 32 * w ^ 46) - u ^ 27 * v ^ 31 * w ^ 46, -(u ^ 25) * v ^ 32 * w ^ 47 - u ^ 26 * v ^ 31 * w ^ 47, ((((((((((6 * u ^ 2 * v ^ 2 * w ^ 4 - 4 * u ^ 2 * v ^ 3 * w ^ 3) + 3 * u ^ 2 * v ^ 4 * w ^ 2 + u ^ 2 * w ^ 6 + v ^ 2 * w ^ 6) - 2 * u ^ 3 * v ^ 2 * w ^ 3) - 2 * u ^ 3 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v ^ 5) - 4 * u ^ 3 * w ^ 5) - 4 * v ^ 3 * w ^ 5) + 3 * u ^ 4 * v ^ 2 * w ^ 2) - 2 * u ^ 5 * w ^ 3) - 4 * v ^ 5 * w ^ 3) + 2 * w ^ 8, 18 * u ^ 25 * v ^ 30 * w ^ 46 + 12 * u ^ 25 * v ^ 31 * w ^ 45 + 10 * u ^ 26 * v ^ 30 * w ^ 45, (((2 * u ^ 5 * v ^ 6 * w ^ 13 + u ^ 5 * v ^ 7 * w ^ 12 + u ^ 6 * v ^ 6 * w ^ 12) - 2 * u ^ 6 * v ^ 7 * w ^ 11) - u ^ 6 * v ^ 8 * w ^ 10) - u ^ 7 * v ^ 7 * w ^ 10, -(u ^ 20) * v ^ 26 * w ^ 38 - u ^ 21 * v ^ 25 * w ^ 38, 0, ((((2 * u ^ 25 * v ^ 30 * w ^ 50 + u ^ 25 * v ^ 32 * w ^ 48) - 2 * u ^ 26 * v ^ 31 * w ^ 48) - u ^ 26 * v ^ 33 * w ^ 46) + u ^ 27 * v ^ 30 * w ^ 48) - u ^ 28 * v ^ 31 * w ^ 46, 8 * u ^ 5 * v ^ 6 * w ^ 13 + 10 * u ^ 5 * v ^ 8 * w ^ 11 + 4 * u ^ 5 * v ^ 10 * w ^ 9 + 10 * u ^ 7 * v ^ 6 * w ^ 11 + 6 * u ^ 7 * v ^ 8 * w ^ 9 + 2 * u ^ 9 * v ^ 6 * w ^ 9, 18 * u ^ 5 * v ^ 6 * w ^ 11 + 12 * u ^ 5 * v ^ 8 * w ^ 9 + 10 * u ^ 7 * v ^ 6 * w ^ 9, -(u ^ 15) * v ^ 20 * w ^ 29 - u ^ 16 * v ^ 19 * w ^ 29, 8 * u ^ 25 * v ^ 30 * w ^ 48 + 5 * u ^ 25 * v ^ 31 * w ^ 47 + 5 * u ^ 25 * v ^ 32 * w ^ 46 + 4 * u ^ 25 * v ^ 33 * w ^ 45 + 5 * u ^ 26 * v ^ 30 * w ^ 47 + 3 * u ^ 26 * v ^ 32 * w ^ 45 + 5 * u ^ 27 * v ^ 30 * w ^ 46 + 3 * u ^ 27 * v ^ 31 * w ^ 45 + 2 * u ^ 28 * v ^ 30 * w ^ 45, (((((3 * u ^ 2 * v ^ 4 * w ^ 7 + 2 * u ^ 2 * v ^ 5 * w ^ 6 + 4 * u ^ 3 * v ^ 3 * w ^ 7 + 3 * u ^ 3 * v ^ 4 * w ^ 6 + 2 * u ^ 4 * v ^ 3 * w ^ 6) - 3 * u ^ 4 * v ^ 4 * w ^ 5) - 3 * u ^ 4 * v ^ 5 * w ^ 4) + 2 * u ^ 4 * w ^ 9 + 2 * v ^ 4 * w ^ 9) - 3 * u ^ 5 * v ^ 4 * w ^ 4) + u ^ 5 * w ^ 8 + v ^ 5 * w ^ 8 + v ^ 6 * w ^ 7 + v ^ 7 * w ^ 6, 0, -(u ^ 20) * v ^ 28 * w ^ 40 - u ^ 22 * v ^ 26 * w ^ 40, 0, 8 * u ^ 5 * v ^ 6 * w ^ 12 + 5 * u ^ 5 * v ^ 7 * w ^ 11 + 5 * u ^ 5 * v ^ 8 * w ^ 10 + 4 * u ^ 5 * v ^ 9 * w ^ 9 + 5 * u ^ 6 * v ^ 6 * w ^ 11 + 3 * u ^ 6 * v ^ 8 * w ^ 9 + 5 * u ^ 7 * v ^ 6 * w ^ 10 + 3 * u ^ 7 * v ^ 7 * w ^ 9 + 2 * u ^ 8 * v ^ 6 * w ^ 9, 0, (((2 * u ^ 10 * v ^ 12 * w ^ 22 + u ^ 10 * v ^ 13 * w ^ 21 + u ^ 11 * v ^ 12 * w ^ 21) - 2 * u ^ 11 * v ^ 13 * w ^ 20) - u ^ 11 * v ^ 14 * w ^ 19) - u ^ 12 * v ^ 13 * w ^ 19, -(u ^ 10) * v ^ 14 * w ^ 20 - u ^ 11 * v ^ 13 * w ^ 20, ((6 * u ^ 2 * v ^ 4 * w ^ 6 + 8 * u ^ 3 * v ^ 3 * w ^ 6) - 9 * u ^ 4 * v ^ 4 * w ^ 4) + 3 * u ^ 4 * w ^ 8 + 3 * v ^ 4 * w ^ 8 + 2 * v ^ 6 * w ^ 6, (((((((((((2 * u ^ 5 * v ^ 6 * w ^ 16 + u ^ 5 * v ^ 7 * w ^ 15) - 4 * u ^ 5 * v ^ 9 * w ^ 13) - 4 * u ^ 5 * v ^ 10 * w ^ 12) + u ^ 6 * v ^ 6 * w ^ 15) - 4 * u ^ 6 * v ^ 9 * w ^ 12) + 6 * u ^ 7 * v ^ 8 * w ^ 12 + 3 * u ^ 7 * v ^ 9 * w ^ 11) - 4 * u ^ 8 * v ^ 6 * w ^ 13) - 2 * u ^ 8 * v ^ 7 * w ^ 12) + 3 * u ^ 8 * v ^ 8 * w ^ 11) - 2 * u ^ 8 * v ^ 9 * w ^ 10) - 2 * u ^ 8 * v ^ 10 * w ^ 9) - 2 * u ^ 9 * v ^ 6 * w ^ 12, 0, ((((((((((((((((((2 * u ^ 10 * v ^ 12 * w ^ 26 + u ^ 10 * v ^ 13 * w ^ 25) - 2 * u ^ 10 * v ^ 15 * w ^ 23) - 4 * u ^ 10 * v ^ 16 * w ^ 22) - 2 * u ^ 10 * v ^ 17 * w ^ 21) + u ^ 11 * v ^ 12 * w ^ 25) - 2 * u ^ 11 * v ^ 15 * w ^ 22) - 2 * u ^ 11 * v ^ 16 * w ^ 21) + 2 * u ^ 12 * v ^ 14 * w ^ 22 + 3 * u ^ 12 * v ^ 15 * w ^ 21 + u ^ 12 * v ^ 16 * w ^ 20) - 2 * u ^ 13 * v ^ 12 * w ^ 23) - u ^ 13 * v ^ 13 * w ^ 22) + 3 * u ^ 13 * v ^ 14 * w ^ 21 + 2 * u ^ 13 * v ^ 15 * w ^ 20) - u ^ 13 * v ^ 16 * w ^ 19) - u ^ 13 * v ^ 17 * w ^ 18) - 3 * u ^ 14 * v ^ 12 * w ^ 22) - u ^ 14 * v ^ 13 * w ^ 21) + u ^ 14 * v ^ 14 * w ^ 20) - u ^ 14 * v ^ 15 * w ^ 19) - u ^ 14 * v ^ 16 * w ^ 18) - u ^ 15 * v ^ 12 * w ^ 21, ((6 * u ^ 4 * v ^ 8 * w ^ 12 + 8 * u ^ 6 * v ^ 6 * w ^ 12) - 9 * u ^ 8 * v ^ 8 * w ^ 8) + 3 * u ^ 8 * w ^ 16 + 3 * v ^ 8 * w ^ 16 + 2 * v ^ 12 * w ^ 12, 8 * u ^ 15 * v ^ 18 * w ^ 30 + 5 * u ^ 15 * v ^ 19 * w ^ 29 + 5 * u ^ 15 * v ^ 20 * w ^ 28 + 4 * u ^ 15 * v ^ 21 * w ^ 27 + 5 * u ^ 16 * v ^ 18 * w ^ 29 + 3 * u ^ 16 * v ^ 20 * w ^ 27 + 5 * u ^ 17 * v ^ 18 * w ^ 28 + 3 * u ^ 17 * v ^ 19 * w ^ 27 + 2 * u ^ 18 * v ^ 18 * w ^ 27, 2 * u ^ 5 * v ^ 6 * w ^ 13 + 2 * u ^ 5 * v ^ 7 * w ^ 12 + u ^ 5 * v ^ 8 * w ^ 11 + 2 * u ^ 5 * v ^ 9 * w ^ 10 + 2 * u ^ 6 * v ^ 6 * w ^ 12 + u ^ 6 * v ^ 7 * w ^ 11 + u ^ 6 * v ^ 8 * w ^ 10 + u ^ 6 * v ^ 9 * w ^ 9 + u ^ 7 * v ^ 6 * w ^ 11 + 2 * u ^ 7 * v ^ 7 * w ^ 10 + u ^ 8 * v ^ 6 * w ^ 10, -(u ^ 10) * v ^ 16 * w ^ 22 - u ^ 12 * v ^ 14 * w ^ 22, (((((((((((2 * u ^ 5 * v ^ 6 * w ^ 17 + u ^ 5 * v ^ 8 * w ^ 15) - 4 * u ^ 5 * v ^ 9 * w ^ 14) - 4 * u ^ 5 * v ^ 11 * w ^ 12) + u ^ 7 * v ^ 6 * w ^ 15 + 6 * u ^ 7 * v ^ 8 * w ^ 13) - 4 * u ^ 7 * v ^ 9 * w ^ 12) + 3 * u ^ 7 * v ^ 10 * w ^ 11) - 4 * u ^ 8 * v ^ 6 * w ^ 14) - 2 * u ^ 8 * v ^ 8 * w ^ 12) - 2 * u ^ 8 * v ^ 9 * w ^ 11) - 2 * u ^ 8 * v ^ 11 * w ^ 9) + 3 * u ^ 9 * v ^ 8 * w ^ 11) - 2 * u ^ 10 * v ^ 6 * w ^ 12, (((2 * u ^ 15 * v ^ 18 * w ^ 31 + u ^ 15 * v ^ 19 * w ^ 30 + u ^ 16 * v ^ 18 * w ^ 30) - 2 * u ^ 16 * v ^ 19 * w ^ 29) - u ^ 16 * v ^ 20 * w ^ 28) - u ^ 17 * v ^ 19 * w ^ 28, 4 * u ^ 10 * v ^ 12 * w ^ 21 - 4 * u ^ 11 * v ^ 13 * w ^ 19, ((((2 * u ^ 20 * v ^ 24 * w ^ 41 + u ^ 20 * v ^ 26 * w ^ 39) - 2 * u ^ 21 * v ^ 25 * w ^ 39) - u ^ 21 * v ^ 27 * w ^ 37) + u ^ 22 * v ^ 24 * w ^ 39) - u ^ 23 * v ^ 25 * w ^ 37, 4 * u ^ 20 * v ^ 24 * w ^ 39 - 4 * u ^ 21 * v ^ 25 * w ^ 37, ((((2 * u ^ 15 * v ^ 18 * w ^ 32 + u ^ 15 * v ^ 20 * w ^ 30) - 2 * u ^ 16 * v ^ 19 * w ^ 30) - u ^ 16 * v ^ 21 * w ^ 28) + u ^ 17 * v ^ 18 * w ^ 30) - u ^ 18 * v ^ 19 * w ^ 28, (((-(u ^ 5) * v ^ 8 * w ^ 13 - 2 * u ^ 5 * v ^ 9 * w ^ 12) + 2 * u ^ 6 * v ^ 8 * w ^ 12) - u ^ 7 * v ^ 6 * w ^ 13) + 3 * u ^ 7 * v ^ 8 * w ^ 11, (((((((((((2 * u ^ 10 * v ^ 12 * w ^ 25 + u ^ 10 * v ^ 13 * w ^ 24) - 4 * u ^ 10 * v ^ 15 * w ^ 22) - 4 * u ^ 10 * v ^ 16 * w ^ 21) + u ^ 11 * v ^ 12 * w ^ 24) - 4 * u ^ 11 * v ^ 15 * w ^ 21) + 6 * u ^ 12 * v ^ 14 * w ^ 21 + 3 * u ^ 12 * v ^ 15 * w ^ 20) - 4 * u ^ 13 * v ^ 12 * w ^ 22) - 2 * u ^ 13 * v ^ 13 * w ^ 21) + 3 * u ^ 13 * v ^ 14 * w ^ 20) - 2 * u ^ 13 * v ^ 15 * w ^ 19) - 2 * u ^ 13 * v ^ 16 * w ^ 18) - 2 * u ^ 14 * v ^ 12 * w ^ 21, (((4 * u ^ 5 * v ^ 6 * w ^ 15 - 12 * u ^ 5 * v ^ 9 * w ^ 12) + 12 * u ^ 7 * v ^ 8 * w ^ 11) - 8 * u ^ 8 * v ^ 6 * w ^ 12) - 4 * u ^ 8 * v ^ 9 * w ^ 9, 2 * u ^ 5 * v ^ 6 * w ^ 12 + 3 * u ^ 5 * v ^ 7 * w ^ 11 + 2 * u ^ 5 * v ^ 8 * w ^ 10 + 3 * u ^ 6 * v ^ 6 * w ^ 11 + 4 * u ^ 6 * v ^ 7 * w ^ 10 + u ^ 6 * v ^ 8 * w ^ 9 + u ^ 7 * v ^ 6 * w ^ 10, 4 * u ^ 10 * v ^ 12 * w ^ 20 + 6 * u ^ 10 * v ^ 13 * w ^ 19 + 4 * u ^ 11 * v ^ 12 * w ^ 19 + 2 * u ^ 11 * v ^ 13 * w ^ 18, 0, 18 * u ^ 20 * v ^ 24 * w ^ 38 + 12 * u ^ 20 * v ^ 26 * w ^ 36 + 10 * u ^ 22 * v ^ 24 * w ^ 36, 4 * u ^ 5 * v ^ 6 * w ^ 11 + 6 * u ^ 5 * v ^ 7 * w ^ 10 + 4 * u ^ 6 * v ^ 6 * w ^ 10 + 2 * u ^ 6 * v ^ 7 * w ^ 9, (((4 * u ^ 10 * v ^ 12 * w ^ 24 - 12 * u ^ 10 * v ^ 15 * w ^ 21) + 12 * u ^ 12 * v ^ 14 * w ^ 20) - 8 * u ^ 13 * v ^ 12 * w ^ 21) - 4 * u ^ 13 * v ^ 15 * w ^ 18, 8 * u ^ 5 * v ^ 6 * w ^ 11 + 10 * u ^ 5 * v ^ 7 * w ^ 10 + 4 * u ^ 5 * v ^ 8 * w ^ 9 + 10 * u ^ 6 * v ^ 6 * w ^ 10 + 6 * u ^ 6 * v ^ 7 * w ^ 9 + 2 * u ^ 7 * v ^ 6 * w ^ 9, 2 * u ^ 10 * v ^ 12 * w ^ 21 + 3 * u ^ 10 * v ^ 13 * w ^ 20 + 2 * u ^ 10 * v ^ 14 * w ^ 19 + 3 * u ^ 11 * v ^ 12 * w ^ 20 + 4 * u ^ 11 * v ^ 13 * w ^ 19 + u ^ 11 * v ^ 14 * w ^ 18 + u ^ 12 * v ^ 12 * w ^ 19, 4 * u ^ 15 * v ^ 18 * w ^ 30 - 4 * u ^ 16 * v ^ 19 * w ^ 28, 18 * u ^ 25 * v ^ 30 * w ^ 47 + 12 * u ^ 25 * v ^ 32 * w ^ 45 + 10 * u ^ 27 * v ^ 30 * w ^ 45, 8 * u ^ 10 * v ^ 12 * w ^ 20 + 10 * u ^ 10 * v ^ 13 * w ^ 19 + 4 * u ^ 10 * v ^ 14 * w ^ 18 + 10 * u ^ 11 * v ^ 12 * w ^ 19 + 6 * u ^ 11 * v ^ 13 * w ^ 18 + 2 * u ^ 12 * v ^ 12 * w ^ 18, 18 * u ^ 5 * v ^ 6 * w ^ 10 + 12 * u ^ 5 * v ^ 7 * w ^ 9 + 10 * u ^ 6 * v ^ 6 * w ^ 9, 40 * u ^ 5 * v ^ 6 * w ^ 9, 8 * u ^ 15 * v ^ 18 * w ^ 29 + 10 * u ^ 15 * v ^ 19 * w ^ 28 + 4 * u ^ 15 * v ^ 20 * w ^ 27 + 10 * u ^ 16 * v ^ 18 * w ^ 28 + 6 * u ^ 16 * v ^ 19 * w ^ 27 + 2 * u ^ 17 * v ^ 18 * w ^ 27, 18 * u ^ 15 * v ^ 18 * w ^ 29 + 12 * u ^ 15 * v ^ 20 * w ^ 27 + 10 * u ^ 17 * v ^ 18 * w ^ 27, 18 * u ^ 10 * v ^ 12 * w ^ 19 + 12 * u ^ 10 * v ^ 13 * w ^ 18 + 10 * u ^ 11 * v ^ 12 * w ^ 18, 18 * u ^ 15 * v ^ 18 * w ^ 28 + 12 * u ^ 15 * v ^ 19 * w ^ 27 + 10 * u ^ 16 * v ^ 18 * w ^ 27, 40 * u ^ 25 * v ^ 30 * w ^ 45, 40 * u ^ 15 * v ^ 18 * w ^ 27, 40 * u ^ 10 * v ^ 12 * w ^ 18, 40 * u ^ 20 * v ^ 24 * w ^ 36]
            end
        f45(u, v, w, j) = begin
                return [45, 18u + 18v + 9w, 8 * u * v + 2 * u * w + 2 * v * w + 3 * u ^ 2 + 3 * v ^ 2, 14 * u * v + 8 * u * w + 8 * v * w + 7 * u ^ 2 + 7 * v ^ 2 + w ^ 2, 18 * u ^ 2 + 18 * v ^ 2 + 9 * w ^ 2, -5 * u * v * w + 3 * u ^ 3 + 3 * v ^ 3, 4 * u * v * w + 4 * u * v ^ 2 + 4 * u ^ 2 * v + 2 * u ^ 2 * w + 2 * v ^ 2 * w + u ^ 3 + v ^ 3, -(j ^ 2) * u * v * w + u * v ^ 2 + u ^ 2 * v, 7 * u * v ^ 2 + 4 * u * w ^ 2 + 4 * v * w ^ 2 + 7 * u ^ 2 * v + 4 * u ^ 2 * w + 4 * v ^ 2 * w + 7 * u ^ 3 + 7 * v ^ 3 + w ^ 3, (-u * v ^ 2 * w - u ^ 2 * v * w) - u ^ 2 * v ^ 2, ((((((((((((((((((((((((((-(u ^ 3) * v ^ 9 * w ^ 7 - u ^ 3 * v ^ 10 * w ^ 6) + u ^ 3 * v ^ 13 * w ^ 3) - j ^ 2 * u ^ 4 * v ^ 7 * w ^ 8) - j ^ 2 * u ^ 4 * v ^ 8 * w ^ 7) + u ^ 4 * v ^ 13 * w ^ 2 + u ^ 4 * v ^ 15 + u ^ 5 * v ^ 8 * w ^ 6 + u ^ 5 * v ^ 9 * w ^ 5 + j ^ 2 * u ^ 6 * v ^ 6 * w ^ 7 + j ^ 2 * u ^ 6 * v ^ 7 * w ^ 6 + 2 * u ^ 6 * v ^ 8 * w ^ 5 + u ^ 6 * v ^ 9 * w ^ 4) - u ^ 6 * v ^ 10 * w ^ 3) - j ^ 2 * u ^ 7 * v ^ 4 * w ^ 8) + j ^ 2 * u ^ 7 * v ^ 6 * w ^ 6 + (-j - 2 * j ^ 2) * u ^ 7 * v ^ 8 * w ^ 4) - u ^ 7 * v ^ 9 * w ^ 3) - u ^ 7 * v ^ 10 * w ^ 2) - u ^ 7 * v ^ 12) - j ^ 2 * u ^ 8 * v ^ 4 * w ^ 7) + u ^ 8 * v ^ 5 * w ^ 6 + 2 * u ^ 8 * v ^ 6 * w ^ 5 + (-j - 2 * j ^ 2) * u ^ 8 * v ^ 7 * w ^ 4) - u ^ 8 * v ^ 9 * w ^ 2) - u ^ 8 * v ^ 11) - u ^ 9 * v ^ 3 * w ^ 7) + u ^ 9 * v ^ 5 * w ^ 5 + u ^ 9 * v ^ 6 * w ^ 4) - u ^ 9 * v ^ 7 * w ^ 3) - u ^ 9 * v ^ 8 * w ^ 2) - u ^ 9 * v ^ 10) - u ^ 10 * v ^ 3 * w ^ 6) - u ^ 10 * v ^ 6 * w ^ 3) - u ^ 10 * v ^ 7 * w ^ 2) - u ^ 10 * v ^ 9) - u ^ 11 * v ^ 8) - u ^ 12 * v ^ 7) + u ^ 13 * v ^ 3 * w ^ 3 + u ^ 13 * v ^ 4 * w ^ 2 + u ^ 15 * v ^ 4, 2 * u * v * w ^ 2 + u * v ^ 2 * w + 3 * u * v ^ 3 + u ^ 2 * v * w + 2 * u ^ 2 * v ^ 2 + u ^ 2 * w ^ 2 + v ^ 2 * w ^ 2 + 3 * u ^ 3 * v + u ^ 3 * w + v ^ 3 * w + u ^ 4 + v ^ 4, 0, 14 * u ^ 2 * v ^ 2 + 8 * u ^ 2 * w ^ 2 + 8 * v ^ 2 * w ^ 2 + 7 * u ^ 4 + 7 * v ^ 4 + w ^ 4, (((((((5 * u ^ 2 * v ^ 2 * w ^ 3 + 5 * u ^ 2 * v ^ 3 * w ^ 2 + 5 * u ^ 3 * v ^ 2 * w ^ 2) - 8 * u ^ 3 * v ^ 4) - 2 * u ^ 3 * w ^ 4) - 2 * v ^ 3 * w ^ 4) - 8 * u ^ 4 * v ^ 3) - 2 * u ^ 4 * w ^ 3) - 2 * v ^ 4 * w ^ 3) + 3 * u ^ 7 + 3 * v ^ 7, (((-u * v * w ^ 2 - 2 * u * v ^ 2 * w) + u * v ^ 3) - 2 * u ^ 2 * v * w) + u ^ 3 * v + u ^ 3 * w + v ^ 3 * w + u ^ 4 + v ^ 4, (((((((((-2 * u * v * w ^ 3 + 2 * u * v ^ 2 * w ^ 2) - 3 * u * v ^ 3 * w) - 2 * u * v ^ 4) + 2 * u ^ 2 * v * w ^ 2 + u ^ 2 * v ^ 2 * w) - u ^ 2 * v ^ 3) - 3 * u ^ 3 * v * w) - u ^ 3 * v ^ 2) + 2 * u ^ 3 * w ^ 2 + 2 * v ^ 3 * w ^ 2) - 2 * u ^ 4 * v) + u ^ 5 + v ^ 5, 0, (-(u ^ 2) * v ^ 4 * w ^ 2 - u ^ 4 * v ^ 2 * w ^ 2) - u ^ 4 * v ^ 4, j ^ 2 * u ^ 2 * v ^ 2 * w, u ^ 6 * v ^ 13 * w ^ 7 + u ^ 6 * v ^ 14 * w ^ 6 + u ^ 7 * v ^ 13 * w ^ 6 + j * u ^ 8 * v ^ 9 * w ^ 9 + u ^ 8 * v ^ 14 * w ^ 4 + u ^ 8 * v ^ 18 + j * u ^ 9 * v ^ 8 * w ^ 9 + j * u ^ 9 * v ^ 9 * w ^ 8 + u ^ 9 * v ^ 13 * w ^ 4 + u ^ 9 * v ^ 17 + u ^ 13 * v ^ 6 * w ^ 7 + u ^ 13 * v ^ 7 * w ^ 6 + u ^ 13 * v ^ 9 * w ^ 4 + u ^ 13 * v ^ 13 + u ^ 14 * v ^ 6 * w ^ 6 + u ^ 14 * v ^ 8 * w ^ 4 + u ^ 17 * v ^ 9 + u ^ 18 * v ^ 8, (((-u * v * w ^ 3 - 2 * u * v ^ 3 * w) + u ^ 2 * v ^ 3) - 2 * u ^ 3 * v * w) + u ^ 3 * v ^ 2 + u ^ 3 * w ^ 2 + v ^ 3 * w ^ 2 + u ^ 5 + v ^ 5, (-(j ^ 2) * u ^ 9 * v ^ 10 * w ^ 5 - j ^ 2 * u ^ 10 * v ^ 9 * w ^ 5) - j ^ 2 * u ^ 10 * v ^ 10 * w ^ 4, -j * u ^ 5 * v ^ 5 * w ^ 5 + u ^ 5 * v ^ 10 + u ^ 10 * v ^ 5, (-j * u ^ 42 * v ^ 44 * w ^ 22 - j * u ^ 44 * v ^ 42 * w ^ 22) - j * u ^ 44 * v ^ 44 * w ^ 20, ((((((((((((((-2 * u ^ 3 * v ^ 9 * w ^ 6 + u ^ 3 * v ^ 12 * w ^ 3) - 2 * j ^ 2 * u ^ 4 * v ^ 7 * w ^ 7) + u ^ 4 * v ^ 12 * w ^ 2 + u ^ 4 * v ^ 14 + 3 * u ^ 5 * v ^ 8 * w ^ 5 + 3 * j ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 + 3 * u ^ 6 * v ^ 8 * w ^ 4) - 2 * u ^ 6 * v ^ 9 * w ^ 3) - 2 * j ^ 2 * u ^ 7 * v ^ 4 * w ^ 7) - 2 * j ^ 2 * u ^ 7 * v ^ 7 * w ^ 4) - 2 * u ^ 7 * v ^ 9 * w ^ 2) - 2 * u ^ 7 * v ^ 11) + 3 * u ^ 8 * v ^ 5 * w ^ 5 + 3 * u ^ 8 * v ^ 6 * w ^ 4) - 2 * u ^ 9 * v ^ 3 * w ^ 6) - 2 * u ^ 9 * v ^ 6 * w ^ 3) - 2 * u ^ 9 * v ^ 7 * w ^ 2) - 2 * u ^ 9 * v ^ 9) - 2 * u ^ 11 * v ^ 7) + u ^ 12 * v ^ 3 * w ^ 3 + u ^ 12 * v ^ 4 * w ^ 2 + u ^ 14 * v ^ 4, ((((-3 * j * u ^ 2 * v ^ 2 * w ^ 2 + 2 * u ^ 2 * v ^ 3 * w) - u ^ 2 * v ^ 4) + 2 * u ^ 3 * v ^ 2 * w) - 2 * u ^ 3 * v ^ 3) - u ^ 4 * v ^ 2, 0, (((((((((((((((-u * v ^ 2 * w ^ 3 - 2 * u * v ^ 3 * w ^ 2) - 3 * u * v ^ 5) - u ^ 2 * v * w ^ 3) + 5 * u ^ 2 * v ^ 2 * w ^ 2) - u ^ 2 * v ^ 3 * w) + 3 * u ^ 2 * v ^ 4 + u ^ 2 * w ^ 4 + v ^ 2 * w ^ 4) - 2 * u ^ 3 * v * w ^ 2) - u ^ 3 * v ^ 2 * w) - 6 * u ^ 3 * v ^ 3) - u ^ 3 * w ^ 3) - v ^ 3 * w ^ 3) + 3 * u ^ 4 * v ^ 2 + 3 * u ^ 4 * w ^ 2 + 3 * v ^ 4 * w ^ 2) - 3 * u ^ 5 * v) - u ^ 5 * w) - v ^ 5 * w) + u ^ 6 + v ^ 6, (-j * u ^ 4 * v ^ 4 * w ^ 4 - j * u ^ 4 * v ^ 6 * w ^ 2) - j * u ^ 6 * v ^ 4 * w ^ 2, (((15 * u ^ 2 * v ^ 2 * w ^ 2 - 16 * u ^ 3 * v ^ 3) - 4 * u ^ 3 * w ^ 3) - 4 * v ^ 3 * w ^ 3) + 3 * u ^ 6 + 3 * v ^ 6, (3 * j * u ^ 40 * v ^ 43 * w ^ 20 - 5 * j * u ^ 41 * v ^ 41 * w ^ 21) + 3 * j * u ^ 43 * v ^ 40 * w ^ 20, (((((((((((((((((((((((((((((-(u ^ 6) * v ^ 15 * w ^ 10 - u ^ 6 * v ^ 16 * w ^ 9) + u ^ 6 * v ^ 19 * w ^ 6) - j * u ^ 8 * v ^ 11 * w ^ 12) - j * u ^ 8 * v ^ 12 * w ^ 11) + u ^ 8 * v ^ 14 * w ^ 9 + u ^ 8 * v ^ 15 * w ^ 8 + u ^ 8 * v ^ 19 * w ^ 4 + u ^ 8 * v ^ 23 + u ^ 9 * v ^ 14 * w ^ 8) - u ^ 9 * v ^ 16 * w ^ 6) + j * u ^ 10 * v ^ 10 * w ^ 11 + j * u ^ 10 * v ^ 11 * w ^ 10 + u ^ 10 * v ^ 14 * w ^ 7) - j * u ^ 11 * v ^ 8 * w ^ 12) + j * u ^ 11 * v ^ 10 * w ^ 10) - j * u ^ 11 * v ^ 12 * w ^ 8) + u ^ 11 * v ^ 14 * w ^ 6) - u ^ 11 * v ^ 16 * w ^ 4) - u ^ 11 * v ^ 20) - j * u ^ 12 * v ^ 8 * w ^ 11) - j * u ^ 12 * v ^ 11 * w ^ 8) - u ^ 12 * v ^ 15 * w ^ 4) - u ^ 12 * v ^ 19) + u ^ 14 * v ^ 8 * w ^ 9 + u ^ 14 * v ^ 9 * w ^ 8 + u ^ 14 * v ^ 10 * w ^ 7 + u ^ 14 * v ^ 11 * w ^ 6) - u ^ 15 * v ^ 6 * w ^ 10) + u ^ 15 * v ^ 8 * w ^ 8) - u ^ 15 * v ^ 12 * w ^ 4) - u ^ 15 * v ^ 16) - u ^ 16 * v ^ 6 * w ^ 9) - u ^ 16 * v ^ 9 * w ^ 6) - u ^ 16 * v ^ 11 * w ^ 4) - u ^ 16 * v ^ 15) + u ^ 19 * v ^ 6 * w ^ 6 + u ^ 19 * v ^ 8 * w ^ 4) - u ^ 19 * v ^ 12) - u ^ 20 * v ^ 11) + u ^ 23 * v ^ 8, j * u ^ 10 * v ^ 10 * w ^ 5, 0, ((((((((-2 * u * v ^ 3 * w ^ 3 + u * v ^ 6 + 3 * u ^ 2 * v ^ 2 * w ^ 3 + 6 * u ^ 2 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v * w ^ 3) + 6 * u ^ 3 * v ^ 2 * w ^ 2) - 4 * u ^ 3 * v ^ 3 * w) - 6 * u ^ 3 * v ^ 4) - 6 * u ^ 4 * v ^ 3) - 2 * u ^ 4 * w ^ 3) - 2 * v ^ 4 * w ^ 3) + u ^ 6 * v + u ^ 6 * w + v ^ 6 * w + u ^ 7 + v ^ 7, (-(j ^ 2) * u ^ 10 * v ^ 12 * w ^ 6 - j ^ 2 * u ^ 12 * v ^ 10 * w ^ 6) - j ^ 2 * u ^ 12 * v ^ 12 * w ^ 4, (((((j ^ 2 * u ^ 8 * v ^ 11 * w ^ 6 + j ^ 2 * u ^ 8 * v ^ 13 * w ^ 4) - j ^ 2 * u ^ 9 * v ^ 9 * w ^ 7) - 2 * j ^ 2 * u ^ 9 * v ^ 11 * w ^ 5) + j ^ 2 * u ^ 10 * v ^ 11 * w ^ 4 + j ^ 2 * u ^ 11 * v ^ 8 * w ^ 6) - 2 * j ^ 2 * u ^ 11 * v ^ 9 * w ^ 5) + j ^ 2 * u ^ 11 * v ^ 10 * w ^ 4 + j ^ 2 * u ^ 13 * v ^ 8 * w ^ 4, (-(u ^ 26) * v ^ 28 * w ^ 14 - u ^ 28 * v ^ 26 * w ^ 14) - u ^ 28 * v ^ 28 * w ^ 12, 2 * u ^ 3 * v ^ 7 * w ^ 4 + 2 * u ^ 3 * v ^ 8 * w ^ 3 + j ^ 2 * u ^ 4 * v ^ 4 * w ^ 6 + 2 * j ^ 2 * u ^ 4 * v ^ 5 * w ^ 5 + (-2j - j ^ 2) * u ^ 4 * v ^ 6 * w ^ 4 + 4 * u ^ 4 * v ^ 7 * w ^ 3 + u ^ 4 * v ^ 8 * w ^ 2 + u ^ 4 * v ^ 10 + 2 * j ^ 2 * u ^ 5 * v ^ 4 * w ^ 5 + 2 * j ^ 2 * u ^ 5 * v ^ 5 * w ^ 4 + 2 * u ^ 5 * v ^ 7 * w ^ 2 + 2 * u ^ 5 * v ^ 9 + (-2j - j ^ 2) * u ^ 6 * v ^ 4 * w ^ 4 + 2 * u ^ 6 * v ^ 6 * w ^ 2 + u ^ 6 * v ^ 8 + 2 * u ^ 7 * v ^ 3 * w ^ 4 + 4 * u ^ 7 * v ^ 4 * w ^ 3 + 2 * u ^ 7 * v ^ 5 * w ^ 2 + 2 * u ^ 8 * v ^ 3 * w ^ 3 + u ^ 8 * v ^ 4 * w ^ 2 + u ^ 8 * v ^ 6 + 2 * u ^ 9 * v ^ 5 + u ^ 10 * v ^ 4, u ^ 4 * v ^ 4 * w ^ 2 * d * (u + v + w), 0, (3 * j ^ 2 * u ^ 8 * v ^ 11 * w ^ 4 - 5 * j ^ 2 * u ^ 9 * v ^ 9 * w ^ 5) + 3 * j ^ 2 * u ^ 11 * v ^ 8 * w ^ 4, u ^ 3 * v ^ 7 * w ^ 4 + u ^ 3 * v ^ 8 * w ^ 3 + j ^ 2 * u ^ 4 * v ^ 5 * w ^ 5 + u ^ 4 * v ^ 7 * w ^ 3 + u ^ 4 * v ^ 8 * w ^ 2 + u ^ 4 * v ^ 10 + j ^ 2 * u ^ 5 * v ^ 4 * w ^ 5 + j ^ 2 * u ^ 5 * v ^ 5 * w ^ 4 + u ^ 5 * v ^ 7 * w ^ 2 + u ^ 5 * v ^ 9 + u ^ 7 * v ^ 3 * w ^ 4 + u ^ 7 * v ^ 4 * w ^ 3 + u ^ 7 * v ^ 5 * w ^ 2 + u ^ 7 * v ^ 7 + u ^ 8 * v ^ 3 * w ^ 3 + u ^ 8 * v ^ 4 * w ^ 2 + u ^ 9 * v ^ 5 + u ^ 10 * v ^ 4, (((((j * u ^ 40 * v ^ 43 * w ^ 21 + j * u ^ 40 * v ^ 44 * w ^ 20) - j * u ^ 41 * v ^ 41 * w ^ 22) - 2 * j * u ^ 41 * v ^ 42 * w ^ 21) + j * u ^ 41 * v ^ 43 * w ^ 20) - 2 * j * u ^ 42 * v ^ 41 * w ^ 21) + j * u ^ 43 * v ^ 40 * w ^ 21 + j * u ^ 43 * v ^ 41 * w ^ 20 + j * u ^ 44 * v ^ 40 * w ^ 20, (-j * u ^ 41 * v ^ 42 * w ^ 21 - j * u ^ 42 * v ^ 41 * w ^ 21) - j * u ^ 42 * v ^ 42 * w ^ 20, (((((((((3 * u ^ 2 * v ^ 2 * w ^ 4 - 2 * u ^ 2 * v ^ 3 * w ^ 3) + 6 * u ^ 2 * v ^ 4 * w ^ 2 + u ^ 2 * v ^ 6) - 2 * u ^ 3 * v ^ 2 * w ^ 3) - 4 * u ^ 3 * v ^ 3 * w ^ 2) - 6 * u ^ 3 * v ^ 5) + 6 * u ^ 4 * v ^ 2 * w ^ 2) - 6 * u ^ 5 * v ^ 3) - 2 * u ^ 5 * w ^ 3) - 2 * v ^ 5 * w ^ 3) + u ^ 6 * v ^ 2 + u ^ 6 * w ^ 2 + v ^ 6 * w ^ 2 + u ^ 8 + v ^ 8, 9 * j * u ^ 40 * v ^ 40 * w ^ 21 + 18 * j * u ^ 40 * v ^ 41 * w ^ 20 + 18 * j * u ^ 41 * v ^ 40 * w ^ 20, (((((j ^ 2 * u ^ 8 * v ^ 11 * w ^ 5 + j ^ 2 * u ^ 8 * v ^ 12 * w ^ 4) - j ^ 2 * u ^ 9 * v ^ 9 * w ^ 6) - 2 * j ^ 2 * u ^ 9 * v ^ 10 * w ^ 5) + j ^ 2 * u ^ 9 * v ^ 11 * w ^ 4) - 2 * j ^ 2 * u ^ 10 * v ^ 9 * w ^ 5) + j ^ 2 * u ^ 11 * v ^ 8 * w ^ 5 + j ^ 2 * u ^ 11 * v ^ 9 * w ^ 4 + j ^ 2 * u ^ 12 * v ^ 8 * w ^ 4, (-(j ^ 2) * u ^ 33 * v ^ 34 * w ^ 17 - j ^ 2 * u ^ 34 * v ^ 33 * w ^ 17) - j ^ 2 * u ^ 34 * v ^ 34 * w ^ 16, u ^ 6 * v ^ 6 * w ^ 3, (((((j * u ^ 40 * v ^ 43 * w ^ 22 + j * u ^ 40 * v ^ 45 * w ^ 20) - j * u ^ 41 * v ^ 41 * w ^ 23) - 2 * j * u ^ 41 * v ^ 43 * w ^ 21) + j * u ^ 42 * v ^ 43 * w ^ 20 + j * u ^ 43 * v ^ 40 * w ^ 22) - 2 * j * u ^ 43 * v ^ 41 * w ^ 21) + j * u ^ 43 * v ^ 42 * w ^ 20 + j * u ^ 45 * v ^ 40 * w ^ 20, j ^ 2 * u ^ 8 * v ^ 8 * w ^ 8 + 8 * j ^ 2 * u ^ 8 * v ^ 10 * w ^ 6 + 7 * j ^ 2 * u ^ 8 * v ^ 12 * w ^ 4 + 8 * j ^ 2 * u ^ 10 * v ^ 8 * w ^ 6 + 14 * j ^ 2 * u ^ 10 * v ^ 10 * w ^ 4 + 7 * j ^ 2 * u ^ 12 * v ^ 8 * w ^ 4, 9 * j ^ 2 * u ^ 8 * v ^ 8 * w ^ 6 + 18 * j ^ 2 * u ^ 8 * v ^ 10 * w ^ 4 + 18 * j ^ 2 * u ^ 10 * v ^ 8 * w ^ 4, (-(u ^ 25) * v ^ 26 * w ^ 13 - u ^ 26 * v ^ 25 * w ^ 13) - u ^ 26 * v ^ 26 * w ^ 12, j * u ^ 40 * v ^ 40 * w ^ 23 + 4 * j * u ^ 40 * v ^ 41 * w ^ 22 + 4 * j * u ^ 40 * v ^ 42 * w ^ 21 + 7 * j * u ^ 40 * v ^ 43 * w ^ 20 + 4 * j * u ^ 41 * v ^ 40 * w ^ 22 + 7 * j * u ^ 41 * v ^ 42 * w ^ 20 + 4 * j * u ^ 42 * v ^ 40 * w ^ 21 + 7 * j * u ^ 42 * v ^ 41 * w ^ 20 + 7 * j * u ^ 43 * v ^ 40 * w ^ 20, 2 * u ^ 3 * v ^ 6 * w ^ 4 + 4 * u ^ 3 * v ^ 7 * w ^ 3 + 3 * j ^ 2 * u ^ 4 * v ^ 4 * w ^ 5 + 3 * j ^ 2 * u ^ 4 * v ^ 5 * w ^ 4 + 3 * u ^ 4 * v ^ 6 * w ^ 3 + 3 * u ^ 4 * v ^ 7 * w ^ 2 + 2 * u ^ 4 * v ^ 9 + 3 * j ^ 2 * u ^ 5 * v ^ 4 * w ^ 4 + 2 * u ^ 5 * v ^ 6 * w ^ 2 + u ^ 5 * v ^ 8 + 2 * u ^ 6 * v ^ 3 * w ^ 4 + 3 * u ^ 6 * v ^ 4 * w ^ 3 + 2 * u ^ 6 * v ^ 5 * w ^ 2 + u ^ 6 * v ^ 7 + 4 * u ^ 7 * v ^ 3 * w ^ 3 + 3 * u ^ 7 * v ^ 4 * w ^ 2 + u ^ 7 * v ^ 6 + u ^ 8 * v ^ 5 + 2 * u ^ 9 * v ^ 4, j ^ 2 * d * u ^ 12 * v ^ 12 * w ^ 6 * (u + v + w), (-(j ^ 2) * u ^ 34 * v ^ 36 * w ^ 18 - j ^ 2 * u ^ 36 * v ^ 34 * w ^ 18) - j ^ 2 * u ^ 36 * v ^ 36 * w ^ 16, -3 * j * u ^ 4 * v ^ 4 * w ^ 2, j ^ 2 * u ^ 8 * v ^ 8 * w ^ 7 + 4 * j ^ 2 * u ^ 8 * v ^ 9 * w ^ 6 + 4 * j ^ 2 * u ^ 8 * v ^ 10 * w ^ 5 + 7 * j ^ 2 * u ^ 8 * v ^ 11 * w ^ 4 + 4 * j ^ 2 * u ^ 9 * v ^ 8 * w ^ 6 + 7 * j ^ 2 * u ^ 9 * v ^ 10 * w ^ 4 + 4 * j ^ 2 * u ^ 10 * v ^ 8 * w ^ 5 + 7 * j ^ 2 * u ^ 10 * v ^ 9 * w ^ 4 + 7 * j ^ 2 * u ^ 11 * v ^ 8 * w ^ 4, -3 * j ^ 2 * u ^ 20 * v ^ 20 * w ^ 10, (((((j * u ^ 16 * v ^ 19 * w ^ 9 + j * u ^ 16 * v ^ 20 * w ^ 8) - j * u ^ 17 * v ^ 17 * w ^ 10) - 2 * j * u ^ 17 * v ^ 18 * w ^ 9) + j * u ^ 17 * v ^ 19 * w ^ 8) - 2 * j * u ^ 18 * v ^ 17 * w ^ 9) + j * u ^ 19 * v ^ 16 * w ^ 9 + j * u ^ 19 * v ^ 17 * w ^ 8 + j * u ^ 20 * v ^ 16 * w ^ 8, (-j * u ^ 17 * v ^ 18 * w ^ 9 - j * u ^ 18 * v ^ 17 * w ^ 9) - j * u ^ 18 * v ^ 18 * w ^ 8, 8 * u ^ 3 * v ^ 6 * w ^ 3 + 9 * j ^ 2 * u ^ 4 * v ^ 4 * w ^ 4 + 6 * u ^ 4 * v ^ 6 * w ^ 2 + 3 * u ^ 4 * v ^ 8 + 8 * u ^ 6 * v ^ 3 * w ^ 3 + 6 * u ^ 6 * v ^ 4 * w ^ 2 + 2 * u ^ 6 * v ^ 6 + 3 * u ^ 8 * v ^ 4, (((((((((-2 * j ^ 2 * u ^ 8 * v ^ 12 * w ^ 7 + j ^ 2 * u ^ 8 * v ^ 14 * w ^ 5 + j ^ 2 * u ^ 8 * v ^ 15 * w ^ 4) - 2 * j ^ 2 * u ^ 9 * v ^ 11 * w ^ 7) + j ^ 2 * u ^ 9 * v ^ 14 * w ^ 4 + 3 * j ^ 2 * u ^ 10 * v ^ 10 * w ^ 7 + 6 * j ^ 2 * u ^ 10 * v ^ 11 * w ^ 6) - 2 * j ^ 2 * u ^ 11 * v ^ 9 * w ^ 7) + 6 * j ^ 2 * u ^ 11 * v ^ 10 * w ^ 6) - 4 * j ^ 2 * u ^ 11 * v ^ 11 * w ^ 5) - 6 * j ^ 2 * u ^ 11 * v ^ 12 * w ^ 4) - 2 * j ^ 2 * u ^ 12 * v ^ 8 * w ^ 7) - 6 * j ^ 2 * u ^ 12 * v ^ 11 * w ^ 4) + j ^ 2 * u ^ 14 * v ^ 8 * w ^ 5 + j ^ 2 * u ^ 14 * v ^ 9 * w ^ 4 + j ^ 2 * u ^ 15 * v ^ 8 * w ^ 4, 0, ((((((((((((((((-j * u ^ 16 * v ^ 20 * w ^ 12 - j * u ^ 16 * v ^ 21 * w ^ 11) + j * u ^ 16 * v ^ 23 * w ^ 9 + j * u ^ 16 * v ^ 24 * w ^ 8) - j * u ^ 17 * v ^ 19 * w ^ 12) - j * u ^ 17 * v ^ 20 * w ^ 11) + j * u ^ 17 * v ^ 23 * w ^ 8 + j * u ^ 18 * v ^ 18 * w ^ 12 + 3 * j * u ^ 18 * v ^ 19 * w ^ 11 + 2 * j * u ^ 18 * v ^ 20 * w ^ 10) - j * u ^ 19 * v ^ 17 * w ^ 12) + 3 * j * u ^ 19 * v ^ 18 * w ^ 11 + 4 * j * u ^ 19 * v ^ 19 * w ^ 10) - 2 * j * u ^ 19 * v ^ 20 * w ^ 9) - 3 * j * u ^ 19 * v ^ 21 * w ^ 8) - j * u ^ 20 * v ^ 16 * w ^ 12) - j * u ^ 20 * v ^ 17 * w ^ 11) + 2 * j * u ^ 20 * v ^ 18 * w ^ 10) - 2 * j * u ^ 20 * v ^ 19 * w ^ 9) - 6 * j * u ^ 20 * v ^ 20 * w ^ 8) - j * u ^ 21 * v ^ 16 * w ^ 11) - 3 * j * u ^ 21 * v ^ 19 * w ^ 8) + j * u ^ 23 * v ^ 16 * w ^ 9 + j * u ^ 23 * v ^ 17 * w ^ 8 + j * u ^ 24 * v ^ 16 * w ^ 8, 8 * u ^ 6 * v ^ 12 * w ^ 6 + 9 * j * u ^ 8 * v ^ 8 * w ^ 8 + 6 * u ^ 8 * v ^ 12 * w ^ 4 + 3 * u ^ 8 * v ^ 16 + 8 * u ^ 12 * v ^ 6 * w ^ 6 + 6 * u ^ 12 * v ^ 8 * w ^ 4 + 2 * u ^ 12 * v ^ 12 + 3 * u ^ 16 * v ^ 8, u ^ 24 * v ^ 24 * w ^ 15 + 4 * u ^ 24 * v ^ 25 * w ^ 14 + 4 * u ^ 24 * v ^ 26 * w ^ 13 + 7 * u ^ 24 * v ^ 27 * w ^ 12 + 4 * u ^ 25 * v ^ 24 * w ^ 14 + 7 * u ^ 25 * v ^ 26 * w ^ 12 + 4 * u ^ 26 * v ^ 24 * w ^ 13 + 7 * u ^ 26 * v ^ 25 * w ^ 12 + 7 * u ^ 27 * v ^ 24 * w ^ 12, j ^ 2 * u ^ 8 * v ^ 10 * w ^ 6 + j ^ 2 * u ^ 8 * v ^ 11 * w ^ 5 + j ^ 2 * u ^ 8 * v ^ 12 * w ^ 4 + 2 * j ^ 2 * u ^ 9 * v ^ 9 * w ^ 6 + j ^ 2 * u ^ 9 * v ^ 10 * w ^ 5 + 3 * j ^ 2 * u ^ 9 * v ^ 11 * w ^ 4 + j ^ 2 * u ^ 10 * v ^ 8 * w ^ 6 + j ^ 2 * u ^ 10 * v ^ 9 * w ^ 5 + 2 * j ^ 2 * u ^ 10 * v ^ 10 * w ^ 4 + j ^ 2 * u ^ 11 * v ^ 8 * w ^ 5 + 3 * j ^ 2 * u ^ 11 * v ^ 9 * w ^ 4 + j ^ 2 * u ^ 12 * v ^ 8 * w ^ 4, (-j * u ^ 18 * v ^ 20 * w ^ 10 - j * u ^ 20 * v ^ 18 * w ^ 10) - j * u ^ 20 * v ^ 20 * w ^ 8, (((((((((-2 * j ^ 2 * u ^ 8 * v ^ 13 * w ^ 7 + j ^ 2 * u ^ 8 * v ^ 14 * w ^ 6 + j ^ 2 * u ^ 8 * v ^ 16 * w ^ 4 + 3 * j ^ 2 * u ^ 10 * v ^ 10 * w ^ 8) - 2 * j ^ 2 * u ^ 10 * v ^ 11 * w ^ 7) + 6 * j ^ 2 * u ^ 10 * v ^ 12 * w ^ 6 + j ^ 2 * u ^ 10 * v ^ 14 * w ^ 4) - 2 * j ^ 2 * u ^ 11 * v ^ 10 * w ^ 7) - 4 * j ^ 2 * u ^ 11 * v ^ 11 * w ^ 6) - 6 * j ^ 2 * u ^ 11 * v ^ 13 * w ^ 4) + 6 * j ^ 2 * u ^ 12 * v ^ 10 * w ^ 6) - 2 * j ^ 2 * u ^ 13 * v ^ 8 * w ^ 7) - 6 * j ^ 2 * u ^ 13 * v ^ 11 * w ^ 4) + j ^ 2 * u ^ 14 * v ^ 8 * w ^ 6 + j ^ 2 * u ^ 14 * v ^ 10 * w ^ 4 + j ^ 2 * u ^ 16 * v ^ 8 * w ^ 4, (((((u ^ 24 * v ^ 27 * w ^ 13 + u ^ 24 * v ^ 28 * w ^ 12) - u ^ 25 * v ^ 25 * w ^ 14) - 2 * u ^ 25 * v ^ 26 * w ^ 13) + u ^ 25 * v ^ 27 * w ^ 12) - 2 * u ^ 26 * v ^ 25 * w ^ 13) + u ^ 27 * v ^ 24 * w ^ 13 + u ^ 27 * v ^ 25 * w ^ 12 + u ^ 28 * v ^ 24 * w ^ 12, (3 * j * u ^ 16 * v ^ 19 * w ^ 8 - 5 * j * u ^ 17 * v ^ 17 * w ^ 9) + 3 * j * u ^ 19 * v ^ 16 * w ^ 8, (((((j ^ 2 * u ^ 32 * v ^ 35 * w ^ 18 + j ^ 2 * u ^ 32 * v ^ 37 * w ^ 16) - j ^ 2 * u ^ 33 * v ^ 33 * w ^ 19) - 2 * j ^ 2 * u ^ 33 * v ^ 35 * w ^ 17) + j ^ 2 * u ^ 34 * v ^ 35 * w ^ 16 + j ^ 2 * u ^ 35 * v ^ 32 * w ^ 18) - 2 * j ^ 2 * u ^ 35 * v ^ 33 * w ^ 17) + j ^ 2 * u ^ 35 * v ^ 34 * w ^ 16 + j ^ 2 * u ^ 37 * v ^ 32 * w ^ 16, (3 * j ^ 2 * u ^ 32 * v ^ 35 * w ^ 16 - 5 * j ^ 2 * u ^ 33 * v ^ 33 * w ^ 17) + 3 * j ^ 2 * u ^ 35 * v ^ 32 * w ^ 16, (((((u ^ 24 * v ^ 27 * w ^ 14 + u ^ 24 * v ^ 29 * w ^ 12) - u ^ 25 * v ^ 25 * w ^ 15) - 2 * u ^ 25 * v ^ 27 * w ^ 13) + u ^ 26 * v ^ 27 * w ^ 12 + u ^ 27 * v ^ 24 * w ^ 14) - 2 * u ^ 27 * v ^ 25 * w ^ 13) + u ^ 27 * v ^ 26 * w ^ 12 + u ^ 29 * v ^ 24 * w ^ 12, ((((-3 * u ^ 10 * v ^ 10 * w ^ 6 + 2 * j ^ 2 * u ^ 10 * v ^ 11 * w ^ 5) - j ^ 2 * u ^ 10 * v ^ 12 * w ^ 4) + 2 * j ^ 2 * u ^ 11 * v ^ 10 * w ^ 5) - 2 * j ^ 2 * u ^ 11 * v ^ 11 * w ^ 4) - j ^ 2 * u ^ 12 * v ^ 10 * w ^ 4, (((((((((-2 * j * u ^ 16 * v ^ 20 * w ^ 11 + j * u ^ 16 * v ^ 22 * w ^ 9 + j * u ^ 16 * v ^ 23 * w ^ 8) - 2 * j * u ^ 17 * v ^ 19 * w ^ 11) + j * u ^ 17 * v ^ 22 * w ^ 8 + 3 * j * u ^ 18 * v ^ 18 * w ^ 11 + 6 * j * u ^ 18 * v ^ 19 * w ^ 10) - 2 * j * u ^ 19 * v ^ 17 * w ^ 11) + 6 * j * u ^ 19 * v ^ 18 * w ^ 10) - 4 * j * u ^ 19 * v ^ 19 * w ^ 9) - 6 * j * u ^ 19 * v ^ 20 * w ^ 8) - 2 * j * u ^ 20 * v ^ 16 * w ^ 11) - 6 * j * u ^ 20 * v ^ 19 * w ^ 8) + j * u ^ 22 * v ^ 16 * w ^ 9 + j * u ^ 22 * v ^ 17 * w ^ 8 + j * u ^ 23 * v ^ 16 * w ^ 8, (((-4 * j ^ 2 * u ^ 8 * v ^ 11 * w ^ 7 + 3 * j ^ 2 * u ^ 8 * v ^ 14 * w ^ 4 + 15 * j ^ 2 * u ^ 10 * v ^ 10 * w ^ 6) - 4 * j ^ 2 * u ^ 11 * v ^ 8 * w ^ 7) - 16 * j ^ 2 * u ^ 11 * v ^ 11 * w ^ 4) + 3 * j ^ 2 * u ^ 14 * v ^ 8 * w ^ 4, 2 * j ^ 2 * u ^ 8 * v ^ 10 * w ^ 5 + j ^ 2 * u ^ 8 * v ^ 11 * w ^ 4 + 4 * j ^ 2 * u ^ 9 * v ^ 9 * w ^ 5 + 4 * j ^ 2 * u ^ 9 * v ^ 10 * w ^ 4 + 2 * j ^ 2 * u ^ 10 * v ^ 8 * w ^ 5 + 4 * j ^ 2 * u ^ 10 * v ^ 9 * w ^ 4 + j ^ 2 * u ^ 11 * v ^ 8 * w ^ 4, 2 * j * u ^ 16 * v ^ 17 * w ^ 9 + 3 * j * u ^ 16 * v ^ 18 * w ^ 8 + 2 * j * u ^ 17 * v ^ 16 * w ^ 9 + 8 * j * u ^ 17 * v ^ 17 * w ^ 8 + 3 * j * u ^ 18 * v ^ 16 * w ^ 8, -3 * u ^ 12 * v ^ 12 * w ^ 6, 9 * j ^ 2 * u ^ 32 * v ^ 32 * w ^ 18 + 18 * j ^ 2 * u ^ 32 * v ^ 34 * w ^ 16 + 18 * j ^ 2 * u ^ 34 * v ^ 32 * w ^ 16, 2 * j ^ 2 * u ^ 8 * v ^ 9 * w ^ 5 + 3 * j ^ 2 * u ^ 8 * v ^ 10 * w ^ 4 + 2 * j ^ 2 * u ^ 9 * v ^ 8 * w ^ 5 + 8 * j ^ 2 * u ^ 9 * v ^ 9 * w ^ 4 + 3 * j ^ 2 * u ^ 10 * v ^ 8 * w ^ 4, (((-4 * j * u ^ 16 * v ^ 19 * w ^ 11 + 3 * j * u ^ 16 * v ^ 22 * w ^ 8 + 15 * j * u ^ 18 * v ^ 18 * w ^ 10) - 4 * j * u ^ 19 * v ^ 16 * w ^ 11) - 16 * j * u ^ 19 * v ^ 19 * w ^ 8) + 3 * j * u ^ 22 * v ^ 16 * w ^ 8, j ^ 2 * u ^ 8 * v ^ 8 * w ^ 6 + 8 * j ^ 2 * u ^ 8 * v ^ 9 * w ^ 5 + 7 * j ^ 2 * u ^ 8 * v ^ 10 * w ^ 4 + 8 * j ^ 2 * u ^ 9 * v ^ 8 * w ^ 5 + 14 * j ^ 2 * u ^ 9 * v ^ 9 * w ^ 4 + 7 * j ^ 2 * u ^ 10 * v ^ 8 * w ^ 4, 2 * j * u ^ 16 * v ^ 18 * w ^ 9 + j * u ^ 16 * v ^ 19 * w ^ 8 + 4 * j * u ^ 17 * v ^ 17 * w ^ 9 + 4 * j * u ^ 17 * v ^ 18 * w ^ 8 + 2 * j * u ^ 18 * v ^ 16 * w ^ 9 + 4 * j * u ^ 18 * v ^ 17 * w ^ 8 + j * u ^ 19 * v ^ 16 * w ^ 8, (3 * u ^ 24 * v ^ 27 * w ^ 12 - 5 * u ^ 25 * v ^ 25 * w ^ 13) + 3 * u ^ 27 * v ^ 24 * w ^ 12, 9 * j * u ^ 40 * v ^ 40 * w ^ 22 + 18 * j * u ^ 40 * v ^ 42 * w ^ 20 + 18 * j * u ^ 42 * v ^ 40 * w ^ 20, j * u ^ 16 * v ^ 16 * w ^ 10 + 8 * j * u ^ 16 * v ^ 17 * w ^ 9 + 7 * j * u ^ 16 * v ^ 18 * w ^ 8 + 8 * j * u ^ 17 * v ^ 16 * w ^ 9 + 14 * j * u ^ 17 * v ^ 17 * w ^ 8 + 7 * j * u ^ 18 * v ^ 16 * w ^ 8, 9 * j ^ 2 * u ^ 8 * v ^ 8 * w ^ 5 + 18 * j ^ 2 * u ^ 8 * v ^ 9 * w ^ 4 + 18 * j ^ 2 * u ^ 9 * v ^ 8 * w ^ 4, 45 * j ^ 2 * u ^ 8 * v ^ 8 * w ^ 4, u ^ 24 * v ^ 24 * w ^ 14 + 8 * u ^ 24 * v ^ 25 * w ^ 13 + 7 * u ^ 24 * v ^ 26 * w ^ 12 + 8 * u ^ 25 * v ^ 24 * w ^ 13 + 14 * u ^ 25 * v ^ 25 * w ^ 12 + 7 * u ^ 26 * v ^ 24 * w ^ 12, 9 * u ^ 24 * v ^ 24 * w ^ 14 + 18 * u ^ 24 * v ^ 26 * w ^ 12 + 18 * u ^ 26 * v ^ 24 * w ^ 12, 9 * j * u ^ 16 * v ^ 16 * w ^ 9 + 18 * j * u ^ 16 * v ^ 17 * w ^ 8 + 18 * j * u ^ 17 * v ^ 16 * w ^ 8, 9 * u ^ 24 * v ^ 24 * w ^ 13 + 18 * u ^ 24 * v ^ 25 * w ^ 12 + 18 * u ^ 25 * v ^ 24 * w ^ 12, 45 * j * u ^ 40 * v ^ 40 * w ^ 20, 45 * u ^ 24 * v ^ 24 * w ^ 12, 45 * j * u ^ 16 * v ^ 16 * w ^ 8, 45 * j ^ 2 * u ^ 32 * v ^ 32 * w ^ 16]
            end
        f60a(u, v, w) = begin
                return [60, 18u + 21v + 21w, 4 * u * v + 4 * u * w + 7 * v * w + 2 * u ^ 2 + 2 * v ^ 2 + 2 * w ^ 2, 14 * u * v + 14 * u * w + 12 * v * w + 4 * u ^ 2 + 8 * v ^ 2 + 8 * w ^ 2, 18 * u ^ 2 + 21 * v ^ 2 + 21 * w ^ 2, -8 * u * v * w + 2 * u ^ 3 + 2 * v ^ 3 + 2 * w ^ 3, 5 * u * v * w + 3 * u * v ^ 2 + 3 * u * w ^ 2 + 2 * v * w ^ 2 + 2 * u ^ 2 * v + 2 * u ^ 2 * w + 2 * v ^ 2 * w + v ^ 3 + w ^ 3, u * v * w, 7 * u * v ^ 2 + 7 * u * w ^ 2 + 6 * v * w ^ 2 + 7 * u ^ 2 * v + 7 * u ^ 2 * w + 6 * v ^ 2 * w + 4 * u ^ 3 + 8 * v ^ 3 + 8 * w ^ 3, (-u * v * w ^ 2 - u * v ^ 2 * w) - v ^ 2 * w ^ 2, (((((((((((((((((((((((((((((u ^ 2 * v ^ 4 * w ^ 13 - u ^ 2 * v ^ 7 * w ^ 10) - u ^ 2 * v ^ 8 * w ^ 9) - u ^ 2 * v ^ 9 * w ^ 8) - u ^ 2 * v ^ 10 * w ^ 7) + u ^ 2 * v ^ 13 * w ^ 4 + u ^ 3 * v ^ 3 * w ^ 13) - u ^ 3 * v ^ 6 * w ^ 10) - u ^ 3 * v ^ 7 * w ^ 9) - u ^ 3 * v ^ 9 * w ^ 7) - u ^ 3 * v ^ 10 * w ^ 6) + u ^ 3 * v ^ 13 * w ^ 3 + u ^ 4 * v ^ 6 * w ^ 9 + 2 * u ^ 4 * v ^ 7 * w ^ 8 + 2 * u ^ 4 * v ^ 8 * w ^ 7 + u ^ 4 * v ^ 9 * w ^ 6 + u ^ 5 * v ^ 5 * w ^ 9 + 2 * u ^ 5 * v ^ 6 * w ^ 8 + 2 * u ^ 5 * v ^ 8 * w ^ 6 + u ^ 5 * v ^ 9 * w ^ 5) - u ^ 6 * v ^ 3 * w ^ 10) + u ^ 6 * v ^ 5 * w ^ 8) - u ^ 6 * v ^ 6 * w ^ 7) - u ^ 6 * v ^ 7 * w ^ 6) + u ^ 6 * v ^ 8 * w ^ 5) - u ^ 6 * v ^ 10 * w ^ 3) - u ^ 7 * v ^ 3 * w ^ 9) + u ^ 7 * v ^ 4 * w ^ 8) - u ^ 7 * v ^ 6 * w ^ 6) + u ^ 7 * v ^ 8 * w ^ 4) - u ^ 7 * v ^ 9 * w ^ 3) + 2 * u ^ 8 * v ^ 4 * w ^ 7 + u ^ 8 * v ^ 5 * w ^ 6 + u ^ 8 * v ^ 6 * w ^ 5 + 2 * u ^ 8 * v ^ 7 * w ^ 4) - u ^ 9 * v ^ 2 * w ^ 8) + u ^ 9 * v ^ 4 * w ^ 6 + u ^ 9 * v ^ 6 * w ^ 4) - u ^ 9 * v ^ 8 * w ^ 2) - v ^ 9 * w ^ 10) - u ^ 10 * v ^ 2 * w ^ 7) - u ^ 10 * v ^ 7 * w ^ 2) - v ^ 10 * w ^ 9) + u ^ 13 * v ^ 2 * w ^ 4 + u ^ 13 * v ^ 4 * w ^ 2, u * v * w ^ 2 + u * v ^ 2 * w + 2 * u * v ^ 3 + 2 * u * w ^ 3 + 2 * v * w ^ 3 + 3 * u ^ 2 * v * w + 2 * u ^ 2 * v ^ 2 + 2 * u ^ 2 * w ^ 2 + u ^ 3 * v + u ^ 3 * w + 2 * v ^ 3 * w + v ^ 4 + w ^ 4, 0, 14 * u ^ 2 * v ^ 2 + 14 * u ^ 2 * w ^ 2 + 12 * v ^ 2 * w ^ 2 + 4 * u ^ 4 + 8 * v ^ 4 + 8 * w ^ 4, (((((((8 * u ^ 2 * v ^ 2 * w ^ 3 + 8 * u ^ 2 * v ^ 3 * w ^ 2 + 8 * u ^ 3 * v ^ 2 * w ^ 2) - 4 * u ^ 3 * v ^ 4) - 4 * u ^ 3 * w ^ 4) - 7 * v ^ 3 * w ^ 4) - 4 * u ^ 4 * v ^ 3) - 4 * u ^ 4 * w ^ 3) - 7 * v ^ 4 * w ^ 3) + 2 * u ^ 7 + 2 * v ^ 7 + 2 * w ^ 7, (((-3 * u * v * w ^ 2 - 3 * u * v ^ 2 * w) + u * v ^ 3 + u * w ^ 3) - 2 * u ^ 2 * v * w) + u ^ 3 * v + u ^ 3 * w + v ^ 4 + w ^ 4, (((((((((-4 * u * v * w ^ 3 + 2 * u * v ^ 2 * w ^ 2) - 4 * u * v ^ 3 * w) - u * v ^ 4) - u * w ^ 4) - 2 * v * w ^ 4) + 3 * u ^ 2 * v * w ^ 2 + 3 * u ^ 2 * v ^ 2 * w + 2 * u ^ 2 * v ^ 3 + 2 * u ^ 2 * w ^ 3 + v ^ 2 * w ^ 3) - 2 * u ^ 3 * v * w) + v ^ 3 * w ^ 2) - 2 * v ^ 4 * w) + v ^ 5 + w ^ 5, 0, (-(u ^ 2) * v ^ 2 * w ^ 4 - u ^ 2 * v ^ 4 * w ^ 2) - v ^ 4 * w ^ 4, 0, ((((u ^ 4 * v ^ 8 * w ^ 14 + u ^ 4 * v ^ 9 * w ^ 13 + u ^ 4 * v ^ 13 * w ^ 9 + u ^ 4 * v ^ 14 * w ^ 8 + u ^ 6 * v ^ 6 * w ^ 14 + u ^ 6 * v ^ 7 * w ^ 13 + u ^ 6 * v ^ 13 * w ^ 7 + u ^ 6 * v ^ 14 * w ^ 6 + u ^ 7 * v ^ 6 * w ^ 13 + u ^ 7 * v ^ 13 * w ^ 6) - u ^ 8 * v ^ 9 * w ^ 9) - u ^ 9 * v ^ 8 * w ^ 9) - u ^ 9 * v ^ 9 * w ^ 8) + u ^ 13 * v ^ 4 * w ^ 9 + u ^ 13 * v ^ 9 * w ^ 4 + v ^ 13 * w ^ 13 + u ^ 14 * v ^ 4 * w ^ 8 + u ^ 14 * v ^ 8 * w ^ 4, (((-3 * u * v * w ^ 3 - 3 * u * v ^ 3 * w) + u ^ 2 * v ^ 3 + u ^ 2 * w ^ 3) - 2 * u ^ 3 * v * w) + u ^ 3 * v ^ 2 + u ^ 3 * w ^ 2 + v ^ 5 + w ^ 5, u ^ 6 * v ^ 9 * w ^ 9 + u ^ 7 * v ^ 8 * w ^ 9 + u ^ 7 * v ^ 9 * w ^ 8, u ^ 5 * v ^ 5 * w ^ 5, u ^ 30 * v ^ 39 * w ^ 39 + u ^ 32 * v ^ 37 * w ^ 39 + u ^ 32 * v ^ 39 * w ^ 37, (((((((((((((u ^ 2 * v ^ 4 * w ^ 12 - 2 * u ^ 2 * v ^ 7 * w ^ 9) - 2 * u ^ 2 * v ^ 9 * w ^ 7) + u ^ 2 * v ^ 12 * w ^ 4 + u ^ 3 * v ^ 3 * w ^ 12) - 2 * u ^ 3 * v ^ 6 * w ^ 9) - 2 * u ^ 3 * v ^ 9 * w ^ 6) + u ^ 3 * v ^ 12 * w ^ 3 + 3 * u ^ 4 * v ^ 6 * w ^ 8 + 2 * u ^ 4 * v ^ 7 * w ^ 7 + 3 * u ^ 4 * v ^ 8 * w ^ 6 + 3 * u ^ 5 * v ^ 5 * w ^ 8 + 3 * u ^ 5 * v ^ 8 * w ^ 5) - 2 * u ^ 6 * v ^ 3 * w ^ 9) - 3 * u ^ 6 * v ^ 6 * w ^ 6) - 2 * u ^ 6 * v ^ 9 * w ^ 3) + 2 * u ^ 7 * v ^ 4 * w ^ 7 + 2 * u ^ 7 * v ^ 7 * w ^ 4 + 3 * u ^ 8 * v ^ 4 * w ^ 6 + 3 * u ^ 8 * v ^ 6 * w ^ 4) - 2 * u ^ 9 * v ^ 2 * w ^ 7) - 2 * u ^ 9 * v ^ 7 * w ^ 2) - 2 * v ^ 9 * w ^ 9) + u ^ 12 * v ^ 2 * w ^ 4 + u ^ 12 * v ^ 4 * w ^ 2, (2 * u * v ^ 2 * w ^ 3 + 2 * u * v ^ 3 * w ^ 2 + 3 * u ^ 2 * v ^ 2 * w ^ 2 + 2 * u ^ 3 * v * w ^ 2 + 2 * u ^ 3 * v ^ 2 * w) - 2 * v ^ 3 * w ^ 3, 0, (((((((((((((((((-u * v ^ 2 * w ^ 3 - u * v ^ 3 * w ^ 2) - 2 * u * v ^ 5) - 2 * u * w ^ 5) - 2 * v * w ^ 5) - 3 * u ^ 2 * v * w ^ 3) + 8 * u ^ 2 * v ^ 2 * w ^ 2) - 3 * u ^ 2 * v ^ 3 * w) + 4 * u ^ 2 * v ^ 4 + 4 * u ^ 2 * w ^ 4 + 3 * v ^ 2 * w ^ 4) - u ^ 3 * v * w ^ 2) - u ^ 3 * v ^ 2 * w) - 3 * u ^ 3 * v ^ 3) - 3 * u ^ 3 * w ^ 3) - 4 * v ^ 3 * w ^ 3) + 3 * u ^ 4 * v ^ 2 + 3 * u ^ 4 * w ^ 2 + 3 * v ^ 4 * w ^ 2) - u ^ 5 * v) - u ^ 5 * w) - 2 * v ^ 5 * w) + v ^ 6 + w ^ 6, 0, (((24 * u ^ 2 * v ^ 2 * w ^ 2 - 8 * u ^ 3 * v ^ 3) - 8 * u ^ 3 * w ^ 3) - 14 * v ^ 3 * w ^ 3) + 2 * u ^ 6 + 2 * v ^ 6 + 2 * w ^ 6, ((-2 * u ^ 30 * v ^ 35 * w ^ 38 - 2 * u ^ 30 * v ^ 38 * w ^ 35) + 8 * u ^ 31 * v ^ 36 * w ^ 36) - 2 * u ^ 33 * v ^ 35 * w ^ 35, ((((((((((((((((((((((((((u ^ 4 * v ^ 8 * w ^ 19 - u ^ 4 * v ^ 11 * w ^ 16) - u ^ 4 * v ^ 12 * w ^ 15) - u ^ 4 * v ^ 15 * w ^ 12) - u ^ 4 * v ^ 16 * w ^ 11) + u ^ 4 * v ^ 19 * w ^ 8 + u ^ 6 * v ^ 6 * w ^ 19) - u ^ 6 * v ^ 9 * w ^ 16) + u ^ 6 * v ^ 11 * w ^ 14 + u ^ 6 * v ^ 14 * w ^ 11) - u ^ 6 * v ^ 16 * w ^ 9) + u ^ 6 * v ^ 19 * w ^ 6 + u ^ 7 * v ^ 10 * w ^ 14 + u ^ 7 * v ^ 14 * w ^ 10 + u ^ 8 * v ^ 8 * w ^ 15 + u ^ 8 * v ^ 9 * w ^ 14 + u ^ 8 * v ^ 11 * w ^ 12 + u ^ 8 * v ^ 12 * w ^ 11 + u ^ 8 * v ^ 14 * w ^ 9 + u ^ 8 * v ^ 15 * w ^ 8) - u ^ 9 * v ^ 6 * w ^ 16) + u ^ 9 * v ^ 8 * w ^ 14 + u ^ 9 * v ^ 14 * w ^ 8) - u ^ 9 * v ^ 16 * w ^ 6) - u ^ 10 * v ^ 6 * w ^ 15) - u ^ 10 * v ^ 10 * w ^ 11) - u ^ 10 * v ^ 11 * w ^ 10) - u ^ 10 * v ^ 15 * w ^ 6) + u ^ 11 * v ^ 8 * w ^ 12) - u ^ 11 * v ^ 10 * w ^ 10) + u ^ 11 * v ^ 12 * w ^ 8 + u ^ 12 * v ^ 8 * w ^ 11 + u ^ 12 * v ^ 11 * w ^ 8 + u ^ 14 * v ^ 6 * w ^ 11 + u ^ 14 * v ^ 7 * w ^ 10 + u ^ 14 * v ^ 10 * w ^ 7 + u ^ 14 * v ^ 11 * w ^ 6) - u ^ 15 * v ^ 4 * w ^ 12) + u ^ 15 * v ^ 6 * w ^ 10 + u ^ 15 * v ^ 10 * w ^ 6) - u ^ 15 * v ^ 12 * w ^ 4) - v ^ 15 * w ^ 16) - u ^ 16 * v ^ 4 * w ^ 11) - u ^ 16 * v ^ 11 * w ^ 4) - v ^ 16 * w ^ 15) + u ^ 19 * v ^ 4 * w ^ 8 + u ^ 19 * v ^ 8 * w ^ 4, 0, 0, ((((((((((-6 * u * v ^ 3 * w ^ 3 + u * v ^ 6 + u * w ^ 6 + 9 * u ^ 2 * v ^ 2 * w ^ 3 + 9 * u ^ 2 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v * w ^ 3) + 6 * u ^ 3 * v ^ 2 * w ^ 2) - 2 * u ^ 3 * v ^ 3 * w) - 4 * u ^ 3 * v ^ 4) - 4 * u ^ 3 * w ^ 4) - 4 * v ^ 3 * w ^ 4) - 2 * u ^ 4 * v ^ 3) - 2 * u ^ 4 * w ^ 3) - 4 * v ^ 4 * w ^ 3) + u ^ 6 * v + u ^ 6 * w + v ^ 7 + w ^ 7, u ^ 6 * v ^ 11 * w ^ 11 + u ^ 8 * v ^ 9 * w ^ 11 + u ^ 8 * v ^ 11 * w ^ 9, ((((((-(u ^ 6) * v ^ 7 * w ^ 12 - u ^ 6 * v ^ 12 * w ^ 7) + 3 * u ^ 7 * v ^ 8 * w ^ 10 + 3 * u ^ 7 * v ^ 10 * w ^ 8) - u ^ 8 * v ^ 7 * w ^ 10) - u ^ 8 * v ^ 10 * w ^ 7) - u ^ 9 * v ^ 7 * w ^ 9) + 2 * u ^ 9 * v ^ 8 * w ^ 8) - u ^ 9 * v ^ 9 * w ^ 7, u ^ 18 * v ^ 25 * w ^ 25 + u ^ 20 * v ^ 23 * w ^ 25 + u ^ 20 * v ^ 25 * w ^ 23, (((((((u ^ 2 * v ^ 4 * w ^ 8 + 2 * u ^ 2 * v ^ 5 * w ^ 7 + 2 * u ^ 2 * v ^ 6 * w ^ 6 + 2 * u ^ 2 * v ^ 7 * w ^ 5 + u ^ 2 * v ^ 8 * w ^ 4 + 2 * u ^ 3 * v ^ 3 * w ^ 8 + 4 * u ^ 3 * v ^ 4 * w ^ 7 + 4 * u ^ 3 * v ^ 7 * w ^ 4 + 2 * u ^ 3 * v ^ 8 * w ^ 3 + 2 * u ^ 4 * v ^ 3 * w ^ 7 + u ^ 4 * v ^ 4 * w ^ 6) - 2 * u ^ 4 * v ^ 5 * w ^ 5) + u ^ 4 * v ^ 6 * w ^ 4 + 2 * u ^ 4 * v ^ 7 * w ^ 3) - 2 * u ^ 5 * v ^ 4 * w ^ 5) - 2 * u ^ 5 * v ^ 5 * w ^ 4) + u ^ 6 * v ^ 2 * w ^ 6) - u ^ 6 * v ^ 4 * w ^ 4) + u ^ 6 * v ^ 6 * w ^ 2 + v ^ 6 * w ^ 8 + 2 * u ^ 7 * v ^ 2 * w ^ 5 + 2 * u ^ 7 * v ^ 3 * w ^ 4 + 2 * u ^ 7 * v ^ 4 * w ^ 3 + 2 * u ^ 7 * v ^ 5 * w ^ 2 + u ^ 8 * v ^ 2 * w ^ 4 + u ^ 8 * v ^ 4 * w ^ 2 + v ^ 8 * w ^ 6, 0, 0, ((-2 * u ^ 6 * v ^ 7 * w ^ 10 - 2 * u ^ 6 * v ^ 10 * w ^ 7) + 8 * u ^ 7 * v ^ 8 * w ^ 8) - 2 * u ^ 9 * v ^ 7 * w ^ 7, (((((u ^ 2 * v ^ 4 * w ^ 8 + u ^ 2 * v ^ 5 * w ^ 7 + u ^ 2 * v ^ 7 * w ^ 5 + u ^ 2 * v ^ 8 * w ^ 4 + u ^ 3 * v ^ 3 * w ^ 8 + u ^ 3 * v ^ 4 * w ^ 7 + u ^ 3 * v ^ 7 * w ^ 4 + u ^ 3 * v ^ 8 * w ^ 3 + u ^ 4 * v ^ 3 * w ^ 7) - u ^ 4 * v ^ 5 * w ^ 5) + u ^ 4 * v ^ 7 * w ^ 3) - u ^ 5 * v ^ 4 * w ^ 5) - u ^ 5 * v ^ 5 * w ^ 4) + u ^ 7 * v ^ 2 * w ^ 5 + u ^ 7 * v ^ 5 * w ^ 2 + v ^ 7 * w ^ 7 + u ^ 8 * v ^ 2 * w ^ 4 + u ^ 8 * v ^ 4 * w ^ 2, ((((((-(u ^ 30) * v ^ 35 * w ^ 39 - u ^ 30 * v ^ 39 * w ^ 35) - u ^ 31 * v ^ 35 * w ^ 38) + 3 * u ^ 31 * v ^ 36 * w ^ 37 + 3 * u ^ 31 * v ^ 37 * w ^ 36) - u ^ 31 * v ^ 38 * w ^ 35) + 2 * u ^ 32 * v ^ 36 * w ^ 36) - u ^ 33 * v ^ 35 * w ^ 36) - u ^ 33 * v ^ 36 * w ^ 35, u ^ 30 * v ^ 37 * w ^ 37 + u ^ 31 * v ^ 36 * w ^ 37 + u ^ 31 * v ^ 37 * w ^ 36, (((((((((((9 * u ^ 2 * v ^ 2 * w ^ 4 - 6 * u ^ 2 * v ^ 3 * w ^ 3) + 9 * u ^ 2 * v ^ 4 * w ^ 2 + u ^ 2 * v ^ 6 + u ^ 2 * w ^ 6) - 2 * u ^ 3 * v ^ 2 * w ^ 3) - 2 * u ^ 3 * v ^ 3 * w ^ 2) - 4 * u ^ 3 * v ^ 5) - 4 * u ^ 3 * w ^ 5) - 4 * v ^ 3 * w ^ 5) + 6 * u ^ 4 * v ^ 2 * w ^ 2) - 2 * u ^ 5 * v ^ 3) - 2 * u ^ 5 * w ^ 3) - 4 * v ^ 5 * w ^ 3) + u ^ 6 * v ^ 2 + u ^ 6 * w ^ 2 + v ^ 8 + w ^ 8, (-21 * u ^ 30 * v ^ 35 * w ^ 36 - 21 * u ^ 30 * v ^ 36 * w ^ 35) - 18 * u ^ 31 * v ^ 35 * w ^ 35, ((((((-(u ^ 6) * v ^ 7 * w ^ 11 - u ^ 6 * v ^ 11 * w ^ 7) - u ^ 7 * v ^ 7 * w ^ 10) + 3 * u ^ 7 * v ^ 8 * w ^ 9 + 3 * u ^ 7 * v ^ 9 * w ^ 8) - u ^ 7 * v ^ 10 * w ^ 7) + 2 * u ^ 8 * v ^ 8 * w ^ 8) - u ^ 9 * v ^ 7 * w ^ 8) - u ^ 9 * v ^ 8 * w ^ 7, (-(u ^ 24) * v ^ 30 * w ^ 30 - u ^ 25 * v ^ 29 * w ^ 30) - u ^ 25 * v ^ 30 * w ^ 29, 0, ((((((-(u ^ 30) * v ^ 35 * w ^ 40 - u ^ 30 * v ^ 40 * w ^ 35) + 3 * u ^ 31 * v ^ 36 * w ^ 38 + 3 * u ^ 31 * v ^ 38 * w ^ 36) - u ^ 32 * v ^ 35 * w ^ 38) - u ^ 32 * v ^ 38 * w ^ 35) - u ^ 33 * v ^ 35 * w ^ 37) + 2 * u ^ 33 * v ^ 36 * w ^ 36) - u ^ 33 * v ^ 37 * w ^ 35, ((((-8 * u ^ 6 * v ^ 7 * w ^ 11 - 12 * u ^ 6 * v ^ 9 * w ^ 9) - 8 * u ^ 6 * v ^ 11 * w ^ 7) - 14 * u ^ 8 * v ^ 7 * w ^ 9) - 14 * u ^ 8 * v ^ 9 * w ^ 7) - 4 * u ^ 10 * v ^ 7 * w ^ 7, (-21 * u ^ 6 * v ^ 7 * w ^ 9 - 21 * u ^ 6 * v ^ 9 * w ^ 7) - 18 * u ^ 8 * v ^ 7 * w ^ 7, u ^ 18 * v ^ 23 * w ^ 23 + u ^ 19 * v ^ 22 * w ^ 23 + u ^ 19 * v ^ 23 * w ^ 22, (((((((-8 * u ^ 30 * v ^ 35 * w ^ 38 - 6 * u ^ 30 * v ^ 36 * w ^ 37) - 6 * u ^ 30 * v ^ 37 * w ^ 36) - 8 * u ^ 30 * v ^ 38 * w ^ 35) - 7 * u ^ 31 * v ^ 35 * w ^ 37) - 7 * u ^ 31 * v ^ 37 * w ^ 35) - 7 * u ^ 32 * v ^ 35 * w ^ 36) - 7 * u ^ 32 * v ^ 36 * w ^ 35) - 4 * u ^ 33 * v ^ 35 * w ^ 35, (((((3 * u ^ 2 * v ^ 4 * w ^ 7 + 2 * u ^ 2 * v ^ 5 * w ^ 6 + 2 * u ^ 2 * v ^ 6 * w ^ 5 + 3 * u ^ 2 * v ^ 7 * w ^ 4 + 4 * u ^ 3 * v ^ 3 * w ^ 7 + 3 * u ^ 3 * v ^ 4 * w ^ 6 + 3 * u ^ 3 * v ^ 6 * w ^ 4 + 4 * u ^ 3 * v ^ 7 * w ^ 3 + 2 * u ^ 4 * v ^ 3 * w ^ 6) - 3 * u ^ 4 * v ^ 4 * w ^ 5) - 3 * u ^ 4 * v ^ 5 * w ^ 4) + 2 * u ^ 4 * v ^ 6 * w ^ 3) - 3 * u ^ 5 * v ^ 4 * w ^ 4) + 2 * u ^ 6 * v ^ 2 * w ^ 5 + u ^ 6 * v ^ 3 * w ^ 4 + u ^ 6 * v ^ 4 * w ^ 3 + 2 * u ^ 6 * v ^ 5 * w ^ 2 + v ^ 6 * w ^ 7 + 3 * u ^ 7 * v ^ 2 * w ^ 4 + 3 * u ^ 7 * v ^ 4 * w ^ 2 + v ^ 7 * w ^ 6, 0, (-(u ^ 24) * v ^ 32 * w ^ 32 - u ^ 26 * v ^ 30 * w ^ 32) - u ^ 26 * v ^ 32 * w ^ 30, 0, (((((((-8 * u ^ 6 * v ^ 7 * w ^ 10 - 6 * u ^ 6 * v ^ 8 * w ^ 9) - 6 * u ^ 6 * v ^ 9 * w ^ 8) - 8 * u ^ 6 * v ^ 10 * w ^ 7) - 7 * u ^ 7 * v ^ 7 * w ^ 9) - 7 * u ^ 7 * v ^ 9 * w ^ 7) - 7 * u ^ 8 * v ^ 7 * w ^ 8) - 7 * u ^ 8 * v ^ 8 * w ^ 7) - 4 * u ^ 9 * v ^ 7 * w ^ 7, 0, (((((u ^ 12 * v ^ 14 * w ^ 18 + u ^ 12 * v ^ 18 * w ^ 14 + u ^ 13 * v ^ 14 * w ^ 17) - 3 * u ^ 13 * v ^ 15 * w ^ 16) - 3 * u ^ 13 * v ^ 16 * w ^ 15) + u ^ 13 * v ^ 17 * w ^ 14) - 2 * u ^ 14 * v ^ 15 * w ^ 15) + u ^ 15 * v ^ 14 * w ^ 15 + u ^ 15 * v ^ 15 * w ^ 14, (-(u ^ 12) * v ^ 16 * w ^ 16 - u ^ 13 * v ^ 15 * w ^ 16) - u ^ 13 * v ^ 16 * w ^ 15, ((6 * u ^ 2 * v ^ 4 * w ^ 6 + 6 * u ^ 2 * v ^ 6 * w ^ 4 + 8 * u ^ 3 * v ^ 3 * w ^ 6 + 8 * u ^ 3 * v ^ 6 * w ^ 3) - 9 * u ^ 4 * v ^ 4 * w ^ 4) + 6 * u ^ 6 * v ^ 2 * w ^ 4 + 6 * u ^ 6 * v ^ 4 * w ^ 2 + 2 * v ^ 6 * w ^ 6, (((((((((((-(u ^ 6) * v ^ 7 * w ^ 14 + 4 * u ^ 6 * v ^ 10 * w ^ 11 + 4 * u ^ 6 * v ^ 11 * w ^ 10) - u ^ 6 * v ^ 14 * w ^ 7) - u ^ 7 * v ^ 7 * w ^ 13) + 6 * u ^ 7 * v ^ 10 * w ^ 10) - u ^ 7 * v ^ 13 * w ^ 7) - 9 * u ^ 8 * v ^ 9 * w ^ 10) - 9 * u ^ 8 * v ^ 10 * w ^ 9) + 4 * u ^ 9 * v ^ 7 * w ^ 11 + 2 * u ^ 9 * v ^ 8 * w ^ 10) - 6 * u ^ 9 * v ^ 9 * w ^ 9) + 2 * u ^ 9 * v ^ 10 * w ^ 8 + 4 * u ^ 9 * v ^ 11 * w ^ 7 + 2 * u ^ 10 * v ^ 7 * w ^ 10 + 2 * u ^ 10 * v ^ 10 * w ^ 7) - u ^ 12 * v ^ 7 * w ^ 8) - u ^ 12 * v ^ 8 * w ^ 7, 0, (((((((((((((((((((u ^ 12 * v ^ 14 * w ^ 22 - 2 * u ^ 12 * v ^ 17 * w ^ 19) - 4 * u ^ 12 * v ^ 18 * w ^ 18) - 2 * u ^ 12 * v ^ 19 * w ^ 17) + u ^ 12 * v ^ 22 * w ^ 14 + u ^ 13 * v ^ 14 * w ^ 21) - 3 * u ^ 13 * v ^ 17 * w ^ 18) - 3 * u ^ 13 * v ^ 18 * w ^ 17) + u ^ 13 * v ^ 21 * w ^ 14 + 3 * u ^ 14 * v ^ 16 * w ^ 18 + 6 * u ^ 14 * v ^ 17 * w ^ 17 + 3 * u ^ 14 * v ^ 18 * w ^ 16) - 2 * u ^ 15 * v ^ 14 * w ^ 19) - u ^ 15 * v ^ 15 * w ^ 18) + 5 * u ^ 15 * v ^ 16 * w ^ 17 + 5 * u ^ 15 * v ^ 17 * w ^ 16) - u ^ 15 * v ^ 18 * w ^ 15) - 2 * u ^ 15 * v ^ 19 * w ^ 14) - 3 * u ^ 16 * v ^ 14 * w ^ 18) - u ^ 16 * v ^ 15 * w ^ 17) + 2 * u ^ 16 * v ^ 16 * w ^ 16) - u ^ 16 * v ^ 17 * w ^ 15) - 3 * u ^ 16 * v ^ 18 * w ^ 14) - u ^ 17 * v ^ 14 * w ^ 17) - u ^ 17 * v ^ 17 * w ^ 14) + u ^ 19 * v ^ 14 * w ^ 15 + u ^ 19 * v ^ 15 * w ^ 14, ((6 * u ^ 4 * v ^ 8 * w ^ 12 + 6 * u ^ 4 * v ^ 12 * w ^ 8 + 8 * u ^ 6 * v ^ 6 * w ^ 12 + 8 * u ^ 6 * v ^ 12 * w ^ 6) - 9 * u ^ 8 * v ^ 8 * w ^ 8) + 6 * u ^ 12 * v ^ 4 * w ^ 8 + 6 * u ^ 12 * v ^ 8 * w ^ 4 + 2 * v ^ 12 * w ^ 12, (((((((-8 * u ^ 18 * v ^ 21 * w ^ 24 - 6 * u ^ 18 * v ^ 22 * w ^ 23) - 6 * u ^ 18 * v ^ 23 * w ^ 22) - 8 * u ^ 18 * v ^ 24 * w ^ 21) - 7 * u ^ 19 * v ^ 21 * w ^ 23) - 7 * u ^ 19 * v ^ 23 * w ^ 21) - 7 * u ^ 20 * v ^ 21 * w ^ 22) - 7 * u ^ 20 * v ^ 22 * w ^ 21) - 4 * u ^ 21 * v ^ 21 * w ^ 21, (((((((((((-(u ^ 6) * v ^ 7 * w ^ 11 - 2 * u ^ 6 * v ^ 8 * w ^ 10) - 2 * u ^ 6 * v ^ 10 * w ^ 8) - u ^ 6 * v ^ 11 * w ^ 7) - 2 * u ^ 7 * v ^ 7 * w ^ 10) - u ^ 7 * v ^ 8 * w ^ 9) - u ^ 7 * v ^ 9 * w ^ 8) - 2 * u ^ 7 * v ^ 10 * w ^ 7) - 2 * u ^ 8 * v ^ 7 * w ^ 9) - 3 * u ^ 8 * v ^ 8 * w ^ 8) - 2 * u ^ 8 * v ^ 9 * w ^ 7) - u ^ 9 * v ^ 7 * w ^ 8) - u ^ 9 * v ^ 8 * w ^ 7, (-(u ^ 12) * v ^ 18 * w ^ 18 - u ^ 14 * v ^ 16 * w ^ 18) - u ^ 14 * v ^ 18 * w ^ 16, (((((((((((-(u ^ 6) * v ^ 7 * w ^ 15 + 4 * u ^ 6 * v ^ 10 * w ^ 12 + 4 * u ^ 6 * v ^ 12 * w ^ 10) - u ^ 6 * v ^ 15 * w ^ 7) - u ^ 8 * v ^ 7 * w ^ 13) - 9 * u ^ 8 * v ^ 9 * w ^ 11) + 6 * u ^ 8 * v ^ 10 * w ^ 10) - 9 * u ^ 8 * v ^ 11 * w ^ 9) - u ^ 8 * v ^ 13 * w ^ 7) + 4 * u ^ 9 * v ^ 7 * w ^ 12 + 2 * u ^ 9 * v ^ 9 * w ^ 10 + 2 * u ^ 9 * v ^ 10 * w ^ 9 + 4 * u ^ 9 * v ^ 12 * w ^ 7) - 6 * u ^ 10 * v ^ 9 * w ^ 9) + 2 * u ^ 11 * v ^ 7 * w ^ 10 + 2 * u ^ 11 * v ^ 10 * w ^ 7) - u ^ 12 * v ^ 7 * w ^ 9) - u ^ 12 * v ^ 9 * w ^ 7, ((((((-(u ^ 18) * v ^ 21 * w ^ 25 - u ^ 18 * v ^ 25 * w ^ 21) - u ^ 19 * v ^ 21 * w ^ 24) + 3 * u ^ 19 * v ^ 22 * w ^ 23 + 3 * u ^ 19 * v ^ 23 * w ^ 22) - u ^ 19 * v ^ 24 * w ^ 21) + 2 * u ^ 20 * v ^ 22 * w ^ 22) - u ^ 21 * v ^ 21 * w ^ 22) - u ^ 21 * v ^ 22 * w ^ 21, ((2 * u ^ 12 * v ^ 14 * w ^ 17 + 2 * u ^ 12 * v ^ 17 * w ^ 14) - 8 * u ^ 13 * v ^ 15 * w ^ 15) + 2 * u ^ 15 * v ^ 14 * w ^ 14, (((((u ^ 24 * v ^ 28 * w ^ 33 + u ^ 24 * v ^ 33 * w ^ 28) - 3 * u ^ 25 * v ^ 29 * w ^ 31) - 3 * u ^ 25 * v ^ 31 * w ^ 29) + u ^ 26 * v ^ 28 * w ^ 31 + u ^ 26 * v ^ 31 * w ^ 28 + u ^ 27 * v ^ 28 * w ^ 30) - 2 * u ^ 27 * v ^ 29 * w ^ 29) + u ^ 27 * v ^ 30 * w ^ 28, ((2 * u ^ 24 * v ^ 28 * w ^ 31 + 2 * u ^ 24 * v ^ 31 * w ^ 28) - 8 * u ^ 25 * v ^ 29 * w ^ 29) + 2 * u ^ 27 * v ^ 28 * w ^ 28, ((((((-(u ^ 18) * v ^ 21 * w ^ 26 - u ^ 18 * v ^ 26 * w ^ 21) + 3 * u ^ 19 * v ^ 22 * w ^ 24 + 3 * u ^ 19 * v ^ 24 * w ^ 22) - u ^ 20 * v ^ 21 * w ^ 24) - u ^ 20 * v ^ 24 * w ^ 21) - u ^ 21 * v ^ 21 * w ^ 23) + 2 * u ^ 21 * v ^ 22 * w ^ 22) - u ^ 21 * v ^ 23 * w ^ 21, ((((2 * u ^ 6 * v ^ 10 * w ^ 10 - 2 * u ^ 7 * v ^ 9 * w ^ 10) - 2 * u ^ 7 * v ^ 10 * w ^ 9) - 3 * u ^ 8 * v ^ 9 * w ^ 9) - 2 * u ^ 9 * v ^ 8 * w ^ 9) - 2 * u ^ 9 * v ^ 9 * w ^ 8, ((((((((((((u ^ 12 * v ^ 14 * w ^ 21 - 4 * u ^ 12 * v ^ 17 * w ^ 18) - 4 * u ^ 12 * v ^ 18 * w ^ 17) + u ^ 12 * v ^ 21 * w ^ 14 + u ^ 13 * v ^ 14 * w ^ 20) - 6 * u ^ 13 * v ^ 17 * w ^ 17) + u ^ 13 * v ^ 20 * w ^ 14 + 9 * u ^ 14 * v ^ 16 * w ^ 17 + 9 * u ^ 14 * v ^ 17 * w ^ 16) - 4 * u ^ 15 * v ^ 14 * w ^ 18) - 2 * u ^ 15 * v ^ 15 * w ^ 17) + 6 * u ^ 15 * v ^ 16 * w ^ 16) - 2 * u ^ 15 * v ^ 17 * w ^ 15) - 4 * u ^ 15 * v ^ 18 * w ^ 14) - 2 * u ^ 16 * v ^ 14 * w ^ 17) - 2 * u ^ 16 * v ^ 17 * w ^ 14) + u ^ 18 * v ^ 14 * w ^ 15 + u ^ 18 * v ^ 15 * w ^ 14, ((((-2 * u ^ 6 * v ^ 7 * w ^ 13 + 14 * u ^ 6 * v ^ 10 * w ^ 10) - 2 * u ^ 6 * v ^ 13 * w ^ 7) - 24 * u ^ 8 * v ^ 9 * w ^ 9) + 8 * u ^ 9 * v ^ 7 * w ^ 10 + 8 * u ^ 9 * v ^ 10 * w ^ 7) - 2 * u ^ 12 * v ^ 7 * w ^ 7, (((((((-(u ^ 6) * v ^ 7 * w ^ 10 - 2 * u ^ 6 * v ^ 8 * w ^ 9) - 2 * u ^ 6 * v ^ 9 * w ^ 8) - u ^ 6 * v ^ 10 * w ^ 7) - 3 * u ^ 7 * v ^ 7 * w ^ 9) - 5 * u ^ 7 * v ^ 8 * w ^ 8) - 3 * u ^ 7 * v ^ 9 * w ^ 7) - 2 * u ^ 8 * v ^ 7 * w ^ 8) - 2 * u ^ 8 * v ^ 8 * w ^ 7, 2 * u ^ 12 * v ^ 14 * w ^ 16 + 7 * u ^ 12 * v ^ 15 * w ^ 15 + 2 * u ^ 12 * v ^ 16 * w ^ 14 + 4 * u ^ 13 * v ^ 14 * w ^ 15 + 4 * u ^ 13 * v ^ 15 * w ^ 14 + 2 * u ^ 14 * v ^ 14 * w ^ 14, 0, 21 * u ^ 24 * v ^ 28 * w ^ 30 + 21 * u ^ 24 * v ^ 30 * w ^ 28 + 18 * u ^ 26 * v ^ 28 * w ^ 28, ((((-2 * u ^ 6 * v ^ 7 * w ^ 9 - 7 * u ^ 6 * v ^ 8 * w ^ 8) - 2 * u ^ 6 * v ^ 9 * w ^ 7) - 4 * u ^ 7 * v ^ 7 * w ^ 8) - 4 * u ^ 7 * v ^ 8 * w ^ 7) - 2 * u ^ 8 * v ^ 7 * w ^ 7, ((((2 * u ^ 12 * v ^ 14 * w ^ 20 - 14 * u ^ 12 * v ^ 17 * w ^ 17) + 2 * u ^ 12 * v ^ 20 * w ^ 14 + 24 * u ^ 14 * v ^ 16 * w ^ 16) - 8 * u ^ 15 * v ^ 14 * w ^ 17) - 8 * u ^ 15 * v ^ 17 * w ^ 14) + 2 * u ^ 18 * v ^ 14 * w ^ 14, ((((-8 * u ^ 6 * v ^ 7 * w ^ 9 - 12 * u ^ 6 * v ^ 8 * w ^ 8) - 8 * u ^ 6 * v ^ 9 * w ^ 7) - 14 * u ^ 7 * v ^ 7 * w ^ 8) - 14 * u ^ 7 * v ^ 8 * w ^ 7) - 4 * u ^ 8 * v ^ 7 * w ^ 7, u ^ 12 * v ^ 14 * w ^ 17 + 2 * u ^ 12 * v ^ 15 * w ^ 16 + 2 * u ^ 12 * v ^ 16 * w ^ 15 + u ^ 12 * v ^ 17 * w ^ 14 + 3 * u ^ 13 * v ^ 14 * w ^ 16 + 5 * u ^ 13 * v ^ 15 * w ^ 15 + 3 * u ^ 13 * v ^ 16 * w ^ 14 + 2 * u ^ 14 * v ^ 14 * w ^ 15 + 2 * u ^ 14 * v ^ 15 * w ^ 14, ((-2 * u ^ 18 * v ^ 21 * w ^ 24 - 2 * u ^ 18 * v ^ 24 * w ^ 21) + 8 * u ^ 19 * v ^ 22 * w ^ 22) - 2 * u ^ 21 * v ^ 21 * w ^ 21, (-21 * u ^ 30 * v ^ 35 * w ^ 37 - 21 * u ^ 30 * v ^ 37 * w ^ 35) - 18 * u ^ 32 * v ^ 35 * w ^ 35, 8 * u ^ 12 * v ^ 14 * w ^ 16 + 12 * u ^ 12 * v ^ 15 * w ^ 15 + 8 * u ^ 12 * v ^ 16 * w ^ 14 + 14 * u ^ 13 * v ^ 14 * w ^ 15 + 14 * u ^ 13 * v ^ 15 * w ^ 14 + 4 * u ^ 14 * v ^ 14 * w ^ 14, (-21 * u ^ 6 * v ^ 7 * w ^ 8 - 21 * u ^ 6 * v ^ 8 * w ^ 7) - 18 * u ^ 7 * v ^ 7 * w ^ 7, -60 * u ^ 6 * v ^ 7 * w ^ 7, ((((-8 * u ^ 18 * v ^ 21 * w ^ 23 - 12 * u ^ 18 * v ^ 22 * w ^ 22) - 8 * u ^ 18 * v ^ 23 * w ^ 21) - 14 * u ^ 19 * v ^ 21 * w ^ 22) - 14 * u ^ 19 * v ^ 22 * w ^ 21) - 4 * u ^ 20 * v ^ 21 * w ^ 21, (-21 * u ^ 18 * v ^ 21 * w ^ 23 - 21 * u ^ 18 * v ^ 23 * w ^ 21) - 18 * u ^ 20 * v ^ 21 * w ^ 21, 21 * u ^ 12 * v ^ 14 * w ^ 15 + 21 * u ^ 12 * v ^ 15 * w ^ 14 + 18 * u ^ 13 * v ^ 14 * w ^ 14, (-21 * u ^ 18 * v ^ 21 * w ^ 22 - 21 * u ^ 18 * v ^ 22 * w ^ 21) - 18 * u ^ 19 * v ^ 21 * w ^ 21, -60 * u ^ 30 * v ^ 35 * w ^ 35, -60 * u ^ 18 * v ^ 21 * w ^ 21, 60 * u ^ 12 * v ^ 14 * w ^ 14, 60 * u ^ 24 * v ^ 28 * w ^ 28]
            end
        f60b(u, v, w) = begin
                return [60, 24u + 18v + 18w, 6 * u * v + 6 * u * w + 4 * v * w + 5 * u ^ 2 + v ^ 2 + w ^ 2, 16 * u * v + 16 * u * w + 10 * v * w + 8 * u ^ 2 + 5 * v ^ 2 + 5 * w ^ 2, 24 * u ^ 2 + 18 * v ^ 2 + 18 * w ^ 2, -7 * u * v * w + 5 * u ^ 3 + v ^ 3 + w ^ 3, 6 * u * v * w + 3 * u * v ^ 2 + 3 * u * w ^ 2 + v * w ^ 2 + 4 * u ^ 2 * v + 4 * u ^ 2 * w + v ^ 2 * w + u ^ 3, u * v * w + u ^ 2 * v + u ^ 2 * w, 8 * u * v ^ 2 + 8 * u * w ^ 2 + 5 * v * w ^ 2 + 8 * u ^ 2 * v + 8 * u ^ 2 * w + 5 * v ^ 2 * w + 8 * u ^ 3 + 5 * v ^ 3 + 5 * w ^ 3, (-u * v * w ^ 2 - u * v ^ 2 * w) - u ^ 2 * v * w, ((((((((((((((((((((((((((((((u ^ 3 * v ^ 3 * w ^ 13 - u ^ 3 * v ^ 6 * w ^ 10) - u ^ 3 * v ^ 7 * w ^ 9) - u ^ 3 * v ^ 9 * w ^ 7) - u ^ 3 * v ^ 10 * w ^ 6) + u ^ 3 * v ^ 13 * w ^ 3 + u ^ 4 * v ^ 7 * w ^ 8 + u ^ 4 * v ^ 8 * w ^ 7 + u ^ 5 * v ^ 5 * w ^ 9 + u ^ 5 * v ^ 6 * w ^ 8 + u ^ 5 * v ^ 8 * w ^ 6 + u ^ 5 * v ^ 9 * w ^ 5) - u ^ 6 * v ^ 3 * w ^ 10) + u ^ 6 * v ^ 5 * w ^ 8) - u ^ 6 * v ^ 6 * w ^ 7) - u ^ 6 * v ^ 7 * w ^ 6) + u ^ 6 * v ^ 8 * w ^ 5) - u ^ 6 * v ^ 10 * w ^ 3) - u ^ 7 * v ^ 3 * w ^ 9) + u ^ 7 * v ^ 4 * w ^ 8) - u ^ 7 * v ^ 6 * w ^ 6) + u ^ 7 * v ^ 8 * w ^ 4) - u ^ 7 * v ^ 9 * w ^ 3) + 2 * u ^ 8 * v ^ 4 * w ^ 7 + 2 * u ^ 8 * v ^ 5 * w ^ 6 + 2 * u ^ 8 * v ^ 6 * w ^ 5 + 2 * u ^ 8 * v ^ 7 * w ^ 4) - u ^ 9 * v ^ 2 * w ^ 8) - u ^ 9 * v ^ 3 * w ^ 7) + u ^ 9 * v ^ 4 * w ^ 6 + u ^ 9 * v ^ 5 * w ^ 5 + u ^ 9 * v ^ 6 * w ^ 4) - u ^ 9 * v ^ 7 * w ^ 3) - u ^ 9 * v ^ 8 * w ^ 2) - u ^ 10 * v ^ 2 * w ^ 7) - u ^ 10 * v ^ 3 * w ^ 6) - u ^ 10 * v ^ 6 * w ^ 3) - u ^ 10 * v ^ 7 * w ^ 2) - u ^ 11 * v ^ 8) - u ^ 11 * w ^ 8) - u ^ 12 * v ^ 7) - u ^ 12 * w ^ 7) + u ^ 13 * v ^ 2 * w ^ 4 + u ^ 13 * v ^ 3 * w ^ 3 + u ^ 13 * v ^ 4 * w ^ 2 + u ^ 15 * v ^ 4 + u ^ 15 * w ^ 4, 2 * u * v * w ^ 2 + 2 * u * v ^ 2 * w + 2 * u * v ^ 3 + 2 * u * w ^ 3 + v * w ^ 3 + 2 * u ^ 2 * v * w + 3 * u ^ 2 * v ^ 2 + 3 * u ^ 2 * w ^ 2 + 2 * u ^ 3 * v + 2 * u ^ 3 * w + v ^ 3 * w + u ^ 4, 0, 16 * u ^ 2 * v ^ 2 + 16 * u ^ 2 * w ^ 2 + 10 * v ^ 2 * w ^ 2 + 8 * u ^ 4 + 5 * v ^ 4 + 5 * w ^ 4, (((((((7 * u ^ 2 * v ^ 2 * w ^ 3 + 7 * u ^ 2 * v ^ 3 * w ^ 2 + 7 * u ^ 3 * v ^ 2 * w ^ 2) - 6 * u ^ 3 * v ^ 4) - 6 * u ^ 3 * w ^ 4) - 4 * v ^ 3 * w ^ 4) - 6 * u ^ 4 * v ^ 3) - 6 * u ^ 4 * w ^ 3) - 4 * v ^ 4 * w ^ 3) + 5 * u ^ 7 + v ^ 7 + w ^ 7, (((-2 * u * v * w ^ 2 - 2 * u * v ^ 2 * w) + u * v ^ 3 + u * w ^ 3) - 3 * u ^ 2 * v * w) + 2 * u ^ 3 * v + 2 * u ^ 3 * w + u ^ 4, (((((((((-4 * u * v * w ^ 3 + 3 * u * v ^ 2 * w ^ 2) - 4 * u * v ^ 3 * w) - u * v ^ 4) - u * w ^ 4) - v * w ^ 4) + 2 * u ^ 2 * v * w ^ 2 + 2 * u ^ 2 * v ^ 2 * w + v ^ 2 * w ^ 3) - 4 * u ^ 3 * v * w) + u ^ 3 * v ^ 2 + u ^ 3 * w ^ 2 + v ^ 3 * w ^ 2) - v ^ 4 * w) + u ^ 5, 0, (-(u ^ 2) * v ^ 2 * w ^ 4 - u ^ 2 * v ^ 4 * w ^ 2) - u ^ 4 * v ^ 2 * w ^ 2, 0, ((((u ^ 6 * v ^ 6 * w ^ 14 + u ^ 6 * v ^ 7 * w ^ 13 + u ^ 6 * v ^ 13 * w ^ 7 + u ^ 6 * v ^ 14 * w ^ 6 + u ^ 7 * v ^ 6 * w ^ 13 + u ^ 7 * v ^ 13 * w ^ 6) - u ^ 8 * v ^ 9 * w ^ 9) - u ^ 9 * v ^ 8 * w ^ 9) - u ^ 9 * v ^ 9 * w ^ 8) + u ^ 13 * v ^ 4 * w ^ 9 + u ^ 13 * v ^ 6 * w ^ 7 + u ^ 13 * v ^ 7 * w ^ 6 + u ^ 13 * v ^ 9 * w ^ 4 + u ^ 14 * v ^ 4 * w ^ 8 + u ^ 14 * v ^ 6 * w ^ 6 + u ^ 14 * v ^ 8 * w ^ 4 + u ^ 17 * v ^ 9 + u ^ 17 * w ^ 9 + u ^ 18 * v ^ 8 + u ^ 18 * w ^ 8, (((-2 * u * v * w ^ 3 - 2 * u * v ^ 3 * w) + u ^ 2 * v ^ 3 + u ^ 2 * w ^ 3) - 3 * u ^ 3 * v * w) + 2 * u ^ 3 * v ^ 2 + 2 * u ^ 3 * w ^ 2 + u ^ 5, (-(u ^ 9) * v ^ 7 * w ^ 8 - u ^ 9 * v ^ 8 * w ^ 7) - u ^ 10 * v ^ 7 * w ^ 7, u ^ 5 * v ^ 5 * w ^ 5 + u ^ 10 * v ^ 5 + u ^ 10 * w ^ 5, (-(u ^ 42) * v ^ 32 * w ^ 34 - u ^ 42 * v ^ 34 * w ^ 32) - u ^ 44 * v ^ 32 * w ^ 32, (((((((((((((u ^ 3 * v ^ 3 * w ^ 12 - 2 * u ^ 3 * v ^ 6 * w ^ 9) - 2 * u ^ 3 * v ^ 9 * w ^ 6) + u ^ 3 * v ^ 12 * w ^ 3 + 2 * u ^ 4 * v ^ 7 * w ^ 7 + 3 * u ^ 5 * v ^ 5 * w ^ 8 + 3 * u ^ 5 * v ^ 8 * w ^ 5) - 2 * u ^ 6 * v ^ 3 * w ^ 9) - 3 * u ^ 6 * v ^ 6 * w ^ 6) - 2 * u ^ 6 * v ^ 9 * w ^ 3) + 2 * u ^ 7 * v ^ 4 * w ^ 7 + 2 * u ^ 7 * v ^ 7 * w ^ 4 + 3 * u ^ 8 * v ^ 4 * w ^ 6 + 3 * u ^ 8 * v ^ 5 * w ^ 5 + 3 * u ^ 8 * v ^ 6 * w ^ 4) - 2 * u ^ 9 * v ^ 2 * w ^ 7) - 2 * u ^ 9 * v ^ 3 * w ^ 6) - 2 * u ^ 9 * v ^ 6 * w ^ 3) - 2 * u ^ 9 * v ^ 7 * w ^ 2) - 2 * u ^ 11 * v ^ 7) - 2 * u ^ 11 * w ^ 7) + u ^ 12 * v ^ 2 * w ^ 4 + u ^ 12 * v ^ 3 * w ^ 3 + u ^ 12 * v ^ 4 * w ^ 2 + u ^ 14 * v ^ 4 + u ^ 14 * w ^ 4, ((3 * u ^ 2 * v ^ 2 * w ^ 2 + 2 * u ^ 3 * v * w ^ 2 + 2 * u ^ 3 * v ^ 2 * w) - u ^ 4 * v ^ 2) - u ^ 4 * w ^ 2, 0, (((((((((((((((((-2 * u * v ^ 2 * w ^ 3 - 2 * u * v ^ 3 * w ^ 2) - 2 * u * v ^ 5) - 2 * u * w ^ 5) - v * w ^ 5) - 2 * u ^ 2 * v * w ^ 3) + 7 * u ^ 2 * v ^ 2 * w ^ 2) - 2 * u ^ 2 * v ^ 3 * w) + 3 * u ^ 2 * v ^ 4 + 3 * u ^ 2 * w ^ 4 + 2 * v ^ 2 * w ^ 4) - 2 * u ^ 3 * v * w ^ 2) - 2 * u ^ 3 * v ^ 2 * w) - 4 * u ^ 3 * v ^ 3) - 4 * u ^ 3 * w ^ 3) - 2 * v ^ 3 * w ^ 3) + 5 * u ^ 4 * v ^ 2 + 5 * u ^ 4 * w ^ 2 + 2 * v ^ 4 * w ^ 2) - 2 * u ^ 5 * v) - 2 * u ^ 5 * w) - v ^ 5 * w) + u ^ 6, u ^ 4 * v ^ 3 * w ^ 5 + u ^ 4 * v ^ 5 * w ^ 3 + 2 * u ^ 6 * v ^ 3 * w ^ 3, (((21 * u ^ 2 * v ^ 2 * w ^ 2 - 12 * u ^ 3 * v ^ 3) - 12 * u ^ 3 * w ^ 3) - 8 * v ^ 3 * w ^ 3) + 5 * u ^ 6 + v ^ 6 + w ^ 6, ((u ^ 40 * v ^ 30 * w ^ 33 + u ^ 40 * v ^ 33 * w ^ 30) - 7 * u ^ 41 * v ^ 31 * w ^ 31) + 5 * u ^ 43 * v ^ 30 * w ^ 30, (((((((((((((((((((((((((((u ^ 6 * v ^ 6 * w ^ 19 - u ^ 6 * v ^ 9 * w ^ 16) - u ^ 6 * v ^ 10 * w ^ 15) - u ^ 6 * v ^ 15 * w ^ 10) - u ^ 6 * v ^ 16 * w ^ 9) + u ^ 6 * v ^ 19 * w ^ 6 + u ^ 8 * v ^ 8 * w ^ 15 + u ^ 8 * v ^ 9 * w ^ 14 + u ^ 8 * v ^ 11 * w ^ 12 + u ^ 8 * v ^ 12 * w ^ 11 + u ^ 8 * v ^ 14 * w ^ 9 + u ^ 8 * v ^ 15 * w ^ 8) - u ^ 9 * v ^ 6 * w ^ 16) + u ^ 9 * v ^ 8 * w ^ 14 + u ^ 9 * v ^ 14 * w ^ 8) - u ^ 9 * v ^ 16 * w ^ 6) - u ^ 10 * v ^ 6 * w ^ 15) - u ^ 10 * v ^ 10 * w ^ 11) - u ^ 10 * v ^ 11 * w ^ 10) - u ^ 10 * v ^ 15 * w ^ 6) + u ^ 11 * v ^ 8 * w ^ 12) - u ^ 11 * v ^ 10 * w ^ 10) + u ^ 11 * v ^ 12 * w ^ 8 + u ^ 12 * v ^ 8 * w ^ 11 + u ^ 12 * v ^ 11 * w ^ 8 + u ^ 14 * v ^ 6 * w ^ 11 + u ^ 14 * v ^ 7 * w ^ 10 + u ^ 14 * v ^ 8 * w ^ 9 + u ^ 14 * v ^ 9 * w ^ 8 + u ^ 14 * v ^ 10 * w ^ 7 + u ^ 14 * v ^ 11 * w ^ 6) - u ^ 15 * v ^ 4 * w ^ 12) + u ^ 15 * v ^ 8 * w ^ 8) - u ^ 15 * v ^ 12 * w ^ 4) - u ^ 16 * v ^ 4 * w ^ 11) - u ^ 16 * v ^ 6 * w ^ 9) - u ^ 16 * v ^ 9 * w ^ 6) - u ^ 16 * v ^ 11 * w ^ 4) + u ^ 19 * v ^ 4 * w ^ 8 + u ^ 19 * v ^ 6 * w ^ 6 + u ^ 19 * v ^ 8 * w ^ 4) - u ^ 19 * v ^ 12) - u ^ 19 * w ^ 12) - u ^ 20 * v ^ 11) - u ^ 20 * w ^ 11) + u ^ 23 * v ^ 8 + u ^ 23 * w ^ 8, 0, 0, ((((((((((-4 * u * v ^ 3 * w ^ 3 + u * v ^ 6 + u * w ^ 6 + 6 * u ^ 2 * v ^ 2 * w ^ 3 + 6 * u ^ 2 * v ^ 3 * w ^ 2) - 4 * u ^ 3 * v * w ^ 3) + 9 * u ^ 3 * v ^ 2 * w ^ 2) - 4 * u ^ 3 * v ^ 3 * w) - 4 * u ^ 3 * v ^ 4) - 4 * u ^ 3 * w ^ 4) - 2 * v ^ 3 * w ^ 4) - 4 * u ^ 4 * v ^ 3) - 4 * u ^ 4 * w ^ 3) - 2 * v ^ 4 * w ^ 3) + 2 * u ^ 6 * v + 2 * u ^ 6 * w + u ^ 7, (-(u ^ 10) * v ^ 8 * w ^ 10 - u ^ 10 * v ^ 10 * w ^ 8) - u ^ 12 * v ^ 8 * w ^ 8, (((-2 * u ^ 9 * v ^ 7 * w ^ 9 - 2 * u ^ 9 * v ^ 9 * w ^ 7) + u ^ 10 * v ^ 6 * w ^ 9 + u ^ 10 * v ^ 9 * w ^ 6 + 2 * u ^ 11 * v ^ 6 * w ^ 8) - 3 * u ^ 11 * v ^ 7 * w ^ 7) + 2 * u ^ 11 * v ^ 8 * w ^ 6 + u ^ 13 * v ^ 6 * w ^ 6, (-(u ^ 26) * v ^ 20 * w ^ 22 - u ^ 26 * v ^ 22 * w ^ 20) - u ^ 28 * v ^ 20 * w ^ 20, (((((2 * u ^ 3 * v ^ 3 * w ^ 8 + 2 * u ^ 3 * v ^ 4 * w ^ 7 + 2 * u ^ 3 * v ^ 7 * w ^ 4 + 2 * u ^ 3 * v ^ 8 * w ^ 3 + 2 * u ^ 4 * v ^ 3 * w ^ 7 + u ^ 4 * v ^ 4 * w ^ 6) - 2 * u ^ 4 * v ^ 5 * w ^ 5) + u ^ 4 * v ^ 6 * w ^ 4 + 2 * u ^ 4 * v ^ 7 * w ^ 3) - 2 * u ^ 5 * v ^ 4 * w ^ 5) - 2 * u ^ 5 * v ^ 5 * w ^ 4) + u ^ 6 * v ^ 2 * w ^ 6 + u ^ 6 * v ^ 4 * w ^ 4 + u ^ 6 * v ^ 6 * w ^ 2 + 2 * u ^ 7 * v ^ 2 * w ^ 5 + 4 * u ^ 7 * v ^ 3 * w ^ 4 + 4 * u ^ 7 * v ^ 4 * w ^ 3 + 2 * u ^ 7 * v ^ 5 * w ^ 2 + u ^ 8 * v ^ 2 * w ^ 4 + 2 * u ^ 8 * v ^ 3 * w ^ 3 + u ^ 8 * v ^ 4 * w ^ 2 + 2 * u ^ 9 * v ^ 5 + 2 * u ^ 9 * w ^ 5 + u ^ 10 * v ^ 4 + u ^ 10 * w ^ 4, u ^ 4 * v ^ 3 * w ^ 3 * (e * (u + v + w) + u), 0, ((u ^ 8 * v ^ 6 * w ^ 9 + u ^ 8 * v ^ 9 * w ^ 6) - 7 * u ^ 9 * v ^ 7 * w ^ 7) + 5 * u ^ 11 * v ^ 6 * w ^ 6, (((((u ^ 3 * v ^ 3 * w ^ 8 + u ^ 3 * v ^ 4 * w ^ 7 + u ^ 3 * v ^ 7 * w ^ 4 + u ^ 3 * v ^ 8 * w ^ 3 + u ^ 4 * v ^ 3 * w ^ 7) - u ^ 4 * v ^ 5 * w ^ 5) + u ^ 4 * v ^ 7 * w ^ 3) - u ^ 5 * v ^ 4 * w ^ 5) - u ^ 5 * v ^ 5 * w ^ 4) + u ^ 7 * v ^ 2 * w ^ 5 + u ^ 7 * v ^ 3 * w ^ 4 + u ^ 7 * v ^ 4 * w ^ 3 + u ^ 7 * v ^ 5 * w ^ 2 + u ^ 8 * v ^ 2 * w ^ 4 + u ^ 8 * v ^ 3 * w ^ 3 + u ^ 8 * v ^ 4 * w ^ 2 + u ^ 9 * v ^ 5 + u ^ 9 * w ^ 5 + u ^ 10 * v ^ 4 + u ^ 10 * w ^ 4, ((((u ^ 41 * v ^ 30 * w ^ 33 - 2 * u ^ 41 * v ^ 31 * w ^ 32) - 2 * u ^ 41 * v ^ 32 * w ^ 31) + u ^ 41 * v ^ 33 * w ^ 30) - 3 * u ^ 42 * v ^ 31 * w ^ 31) + 2 * u ^ 43 * v ^ 30 * w ^ 31 + 2 * u ^ 43 * v ^ 31 * w ^ 30 + u ^ 44 * v ^ 30 * w ^ 30, (-(u ^ 41) * v ^ 31 * w ^ 32 - u ^ 41 * v ^ 32 * w ^ 31) - u ^ 42 * v ^ 31 * w ^ 31, (((((((((((6 * u ^ 2 * v ^ 2 * w ^ 4 - 4 * u ^ 2 * v ^ 3 * w ^ 3) + 6 * u ^ 2 * v ^ 4 * w ^ 2 + u ^ 2 * v ^ 6 + u ^ 2 * w ^ 6) - 4 * u ^ 3 * v ^ 2 * w ^ 3) - 4 * u ^ 3 * v ^ 3 * w ^ 2) - 4 * u ^ 3 * v ^ 5) - 4 * u ^ 3 * w ^ 5) - 2 * v ^ 3 * w ^ 5) + 9 * u ^ 4 * v ^ 2 * w ^ 2) - 4 * u ^ 5 * v ^ 3) - 4 * u ^ 5 * w ^ 3) - 2 * v ^ 5 * w ^ 3) + 2 * u ^ 6 * v ^ 2 + 2 * u ^ 6 * w ^ 2 + u ^ 8, 18 * u ^ 40 * v ^ 30 * w ^ 31 + 18 * u ^ 40 * v ^ 31 * w ^ 30 + 24 * u ^ 41 * v ^ 30 * w ^ 30, ((((u ^ 9 * v ^ 6 * w ^ 9 - 2 * u ^ 9 * v ^ 7 * w ^ 8) - 2 * u ^ 9 * v ^ 8 * w ^ 7) + u ^ 9 * v ^ 9 * w ^ 6) - 3 * u ^ 10 * v ^ 7 * w ^ 7) + 2 * u ^ 11 * v ^ 6 * w ^ 7 + 2 * u ^ 11 * v ^ 7 * w ^ 6 + u ^ 12 * v ^ 6 * w ^ 6, (-(u ^ 33) * v ^ 25 * w ^ 26 - u ^ 33 * v ^ 26 * w ^ 25) - u ^ 34 * v ^ 25 * w ^ 25, 0, (((-2 * u ^ 41 * v ^ 31 * w ^ 33 - 2 * u ^ 41 * v ^ 33 * w ^ 31) + u ^ 42 * v ^ 30 * w ^ 33 + u ^ 42 * v ^ 33 * w ^ 30 + 2 * u ^ 43 * v ^ 30 * w ^ 32) - 3 * u ^ 43 * v ^ 31 * w ^ 31) + 2 * u ^ 43 * v ^ 32 * w ^ 30 + u ^ 45 * v ^ 30 * w ^ 30, 5 * u ^ 8 * v ^ 6 * w ^ 10 + 10 * u ^ 8 * v ^ 8 * w ^ 8 + 5 * u ^ 8 * v ^ 10 * w ^ 6 + 16 * u ^ 10 * v ^ 6 * w ^ 8 + 16 * u ^ 10 * v ^ 8 * w ^ 6 + 8 * u ^ 12 * v ^ 6 * w ^ 6, 18 * u ^ 8 * v ^ 6 * w ^ 8 + 18 * u ^ 8 * v ^ 8 * w ^ 6 + 24 * u ^ 10 * v ^ 6 * w ^ 6, (-(u ^ 25) * v ^ 19 * w ^ 20 - u ^ 25 * v ^ 20 * w ^ 19) - u ^ 26 * v ^ 19 * w ^ 19, 5 * u ^ 40 * v ^ 30 * w ^ 33 + 5 * u ^ 40 * v ^ 31 * w ^ 32 + 5 * u ^ 40 * v ^ 32 * w ^ 31 + 5 * u ^ 40 * v ^ 33 * w ^ 30 + 8 * u ^ 41 * v ^ 30 * w ^ 32 + 8 * u ^ 41 * v ^ 32 * w ^ 30 + 8 * u ^ 42 * v ^ 30 * w ^ 31 + 8 * u ^ 42 * v ^ 31 * w ^ 30 + 8 * u ^ 43 * v ^ 30 * w ^ 30, (((((4 * u ^ 3 * v ^ 3 * w ^ 7 + 2 * u ^ 3 * v ^ 4 * w ^ 6 + 2 * u ^ 3 * v ^ 6 * w ^ 4 + 4 * u ^ 3 * v ^ 7 * w ^ 3 + 2 * u ^ 4 * v ^ 3 * w ^ 6) - 3 * u ^ 4 * v ^ 4 * w ^ 5) - 3 * u ^ 4 * v ^ 5 * w ^ 4) + 2 * u ^ 4 * v ^ 6 * w ^ 3) - 3 * u ^ 5 * v ^ 4 * w ^ 4) + 2 * u ^ 6 * v ^ 2 * w ^ 5 + 3 * u ^ 6 * v ^ 3 * w ^ 4 + 3 * u ^ 6 * v ^ 4 * w ^ 3 + 2 * u ^ 6 * v ^ 5 * w ^ 2 + 3 * u ^ 7 * v ^ 2 * w ^ 4 + 4 * u ^ 7 * v ^ 3 * w ^ 3 + 3 * u ^ 7 * v ^ 4 * w ^ 2 + u ^ 8 * v ^ 5 + u ^ 8 * w ^ 5 + 2 * u ^ 9 * v ^ 4 + 2 * u ^ 9 * w ^ 4, u ^ 12 * v ^ 9 * w ^ 9 * (e * (u + v + w) + u), (-(u ^ 34) * v ^ 26 * w ^ 28 - u ^ 34 * v ^ 28 * w ^ 26) - u ^ 36 * v ^ 26 * w ^ 26, 4 * u ^ 4 * v ^ 3 * w ^ 3, 5 * u ^ 8 * v ^ 6 * w ^ 9 + 5 * u ^ 8 * v ^ 7 * w ^ 8 + 5 * u ^ 8 * v ^ 8 * w ^ 7 + 5 * u ^ 8 * v ^ 9 * w ^ 6 + 8 * u ^ 9 * v ^ 6 * w ^ 8 + 8 * u ^ 9 * v ^ 8 * w ^ 6 + 8 * u ^ 10 * v ^ 6 * w ^ 7 + 8 * u ^ 10 * v ^ 7 * w ^ 6 + 8 * u ^ 11 * v ^ 6 * w ^ 6, 4 * u ^ 20 * v ^ 15 * w ^ 15, ((((u ^ 17 * v ^ 12 * w ^ 15 - 2 * u ^ 17 * v ^ 13 * w ^ 14) - 2 * u ^ 17 * v ^ 14 * w ^ 13) + u ^ 17 * v ^ 15 * w ^ 12) - 3 * u ^ 18 * v ^ 13 * w ^ 13) + 2 * u ^ 19 * v ^ 12 * w ^ 13 + 2 * u ^ 19 * v ^ 13 * w ^ 12 + u ^ 20 * v ^ 12 * w ^ 12, (-(u ^ 17) * v ^ 13 * w ^ 14 - u ^ 17 * v ^ 14 * w ^ 13) - u ^ 18 * v ^ 13 * w ^ 13, ((8 * u ^ 3 * v ^ 3 * w ^ 6 + 8 * u ^ 3 * v ^ 6 * w ^ 3) - 9 * u ^ 4 * v ^ 4 * w ^ 4) + 6 * u ^ 6 * v ^ 2 * w ^ 4 + 8 * u ^ 6 * v ^ 3 * w ^ 3 + 6 * u ^ 6 * v ^ 4 * w ^ 2 + 3 * u ^ 8 * v ^ 4 + 3 * u ^ 8 * w ^ 4, (((((((((((-2 * u ^ 8 * v ^ 9 * w ^ 10 - 2 * u ^ 8 * v ^ 10 * w ^ 9) + u ^ 9 * v ^ 6 * w ^ 12) - 4 * u ^ 9 * v ^ 9 * w ^ 9) + u ^ 9 * v ^ 12 * w ^ 6 + 6 * u ^ 10 * v ^ 8 * w ^ 9 + 6 * u ^ 10 * v ^ 9 * w ^ 8) - 4 * u ^ 11 * v ^ 6 * w ^ 10) - 4 * u ^ 11 * v ^ 7 * w ^ 9) + 9 * u ^ 11 * v ^ 8 * w ^ 8) - 4 * u ^ 11 * v ^ 9 * w ^ 7) - 4 * u ^ 11 * v ^ 10 * w ^ 6) - 4 * u ^ 12 * v ^ 6 * w ^ 9) - 4 * u ^ 12 * v ^ 9 * w ^ 6) + 2 * u ^ 14 * v ^ 6 * w ^ 7 + 2 * u ^ 14 * v ^ 7 * w ^ 6 + u ^ 15 * v ^ 6 * w ^ 6, 0, ((((((((((((((((((-(u ^ 16) * v ^ 15 * w ^ 17 - 2 * u ^ 16 * v ^ 16 * w ^ 16) - u ^ 16 * v ^ 17 * w ^ 15) + u ^ 17 * v ^ 12 * w ^ 19) - 2 * u ^ 17 * v ^ 15 * w ^ 16) - 2 * u ^ 17 * v ^ 16 * w ^ 15) + u ^ 17 * v ^ 19 * w ^ 12 + 2 * u ^ 18 * v ^ 14 * w ^ 16 + 4 * u ^ 18 * v ^ 15 * w ^ 15 + 2 * u ^ 18 * v ^ 16 * w ^ 14) - 2 * u ^ 19 * v ^ 12 * w ^ 17) - 2 * u ^ 19 * v ^ 13 * w ^ 16) + 5 * u ^ 19 * v ^ 14 * w ^ 15 + 5 * u ^ 19 * v ^ 15 * w ^ 14) - 2 * u ^ 19 * v ^ 16 * w ^ 13) - 2 * u ^ 19 * v ^ 17 * w ^ 12) - 4 * u ^ 20 * v ^ 12 * w ^ 16) - 2 * u ^ 20 * v ^ 13 * w ^ 15) + 3 * u ^ 20 * v ^ 14 * w ^ 14) - 2 * u ^ 20 * v ^ 15 * w ^ 13) - 4 * u ^ 20 * v ^ 16 * w ^ 12) - 2 * u ^ 21 * v ^ 12 * w ^ 15) - 2 * u ^ 21 * v ^ 15 * w ^ 12) + 2 * u ^ 23 * v ^ 12 * w ^ 13 + 2 * u ^ 23 * v ^ 13 * w ^ 12 + u ^ 24 * v ^ 12 * w ^ 12, ((8 * u ^ 6 * v ^ 6 * w ^ 12 + 8 * u ^ 6 * v ^ 12 * w ^ 6) - 9 * u ^ 8 * v ^ 8 * w ^ 8) + 6 * u ^ 12 * v ^ 4 * w ^ 8 + 8 * u ^ 12 * v ^ 6 * w ^ 6 + 6 * u ^ 12 * v ^ 8 * w ^ 4 + 3 * u ^ 16 * v ^ 8 + 3 * u ^ 16 * w ^ 8, 5 * u ^ 24 * v ^ 18 * w ^ 21 + 5 * u ^ 24 * v ^ 19 * w ^ 20 + 5 * u ^ 24 * v ^ 20 * w ^ 19 + 5 * u ^ 24 * v ^ 21 * w ^ 18 + 8 * u ^ 25 * v ^ 18 * w ^ 20 + 8 * u ^ 25 * v ^ 20 * w ^ 18 + 8 * u ^ 26 * v ^ 18 * w ^ 19 + 8 * u ^ 26 * v ^ 19 * w ^ 18 + 8 * u ^ 27 * v ^ 18 * w ^ 18, u ^ 8 * v ^ 7 * w ^ 9 + u ^ 8 * v ^ 9 * w ^ 7 + 2 * u ^ 9 * v ^ 6 * w ^ 9 + 2 * u ^ 9 * v ^ 7 * w ^ 8 + 2 * u ^ 9 * v ^ 8 * w ^ 7 + 2 * u ^ 9 * v ^ 9 * w ^ 6 + 3 * u ^ 10 * v ^ 6 * w ^ 8 + 2 * u ^ 10 * v ^ 7 * w ^ 7 + 3 * u ^ 10 * v ^ 8 * w ^ 6 + 2 * u ^ 11 * v ^ 6 * w ^ 7 + 2 * u ^ 11 * v ^ 7 * w ^ 6 + u ^ 12 * v ^ 6 * w ^ 6, (-(u ^ 18) * v ^ 14 * w ^ 16 - u ^ 18 * v ^ 16 * w ^ 14) - u ^ 20 * v ^ 14 * w ^ 14, (((((((((((-2 * u ^ 8 * v ^ 9 * w ^ 11 - 2 * u ^ 8 * v ^ 11 * w ^ 9) + u ^ 10 * v ^ 6 * w ^ 12 + 6 * u ^ 10 * v ^ 8 * w ^ 10) - 4 * u ^ 10 * v ^ 9 * w ^ 9) + 6 * u ^ 10 * v ^ 10 * w ^ 8 + u ^ 10 * v ^ 12 * w ^ 6) - 4 * u ^ 11 * v ^ 6 * w ^ 11) - 4 * u ^ 11 * v ^ 8 * w ^ 9) - 4 * u ^ 11 * v ^ 9 * w ^ 8) - 4 * u ^ 11 * v ^ 11 * w ^ 6) + 9 * u ^ 12 * v ^ 8 * w ^ 8) - 4 * u ^ 13 * v ^ 6 * w ^ 9) - 4 * u ^ 13 * v ^ 9 * w ^ 6) + 2 * u ^ 14 * v ^ 6 * w ^ 8 + 2 * u ^ 14 * v ^ 8 * w ^ 6 + u ^ 16 * v ^ 6 * w ^ 6, ((((u ^ 25 * v ^ 18 * w ^ 21 - 2 * u ^ 25 * v ^ 19 * w ^ 20) - 2 * u ^ 25 * v ^ 20 * w ^ 19) + u ^ 25 * v ^ 21 * w ^ 18) - 3 * u ^ 26 * v ^ 19 * w ^ 19) + 2 * u ^ 27 * v ^ 18 * w ^ 19 + 2 * u ^ 27 * v ^ 19 * w ^ 18 + u ^ 28 * v ^ 18 * w ^ 18, ((u ^ 16 * v ^ 12 * w ^ 15 + u ^ 16 * v ^ 15 * w ^ 12) - 7 * u ^ 17 * v ^ 13 * w ^ 13) + 5 * u ^ 19 * v ^ 12 * w ^ 12, (((-2 * u ^ 33 * v ^ 25 * w ^ 27 - 2 * u ^ 33 * v ^ 27 * w ^ 25) + u ^ 34 * v ^ 24 * w ^ 27 + u ^ 34 * v ^ 27 * w ^ 24 + 2 * u ^ 35 * v ^ 24 * w ^ 26) - 3 * u ^ 35 * v ^ 25 * w ^ 25) + 2 * u ^ 35 * v ^ 26 * w ^ 24 + u ^ 37 * v ^ 24 * w ^ 24, ((u ^ 32 * v ^ 24 * w ^ 27 + u ^ 32 * v ^ 27 * w ^ 24) - 7 * u ^ 33 * v ^ 25 * w ^ 25) + 5 * u ^ 35 * v ^ 24 * w ^ 24, (((-2 * u ^ 25 * v ^ 19 * w ^ 21 - 2 * u ^ 25 * v ^ 21 * w ^ 19) + u ^ 26 * v ^ 18 * w ^ 21 + u ^ 26 * v ^ 21 * w ^ 18 + 2 * u ^ 27 * v ^ 18 * w ^ 20) - 3 * u ^ 27 * v ^ 19 * w ^ 19) + 2 * u ^ 27 * v ^ 20 * w ^ 18 + u ^ 29 * v ^ 18 * w ^ 18, ((3 * u ^ 10 * v ^ 8 * w ^ 8 + 2 * u ^ 11 * v ^ 7 * w ^ 8 + 2 * u ^ 11 * v ^ 8 * w ^ 7) - u ^ 12 * v ^ 6 * w ^ 8) - u ^ 12 * v ^ 8 * w ^ 6, (((((((((((-2 * u ^ 16 * v ^ 15 * w ^ 16 - 2 * u ^ 16 * v ^ 16 * w ^ 15) + u ^ 17 * v ^ 12 * w ^ 18) - 4 * u ^ 17 * v ^ 15 * w ^ 15) + u ^ 17 * v ^ 18 * w ^ 12 + 6 * u ^ 18 * v ^ 14 * w ^ 15 + 6 * u ^ 18 * v ^ 15 * w ^ 14) - 4 * u ^ 19 * v ^ 12 * w ^ 16) - 4 * u ^ 19 * v ^ 13 * w ^ 15) + 9 * u ^ 19 * v ^ 14 * w ^ 14) - 4 * u ^ 19 * v ^ 15 * w ^ 13) - 4 * u ^ 19 * v ^ 16 * w ^ 12) - 4 * u ^ 20 * v ^ 12 * w ^ 15) - 4 * u ^ 20 * v ^ 15 * w ^ 12) + 2 * u ^ 22 * v ^ 12 * w ^ 13 + 2 * u ^ 22 * v ^ 13 * w ^ 12 + u ^ 23 * v ^ 12 * w ^ 12, ((((u ^ 8 * v ^ 6 * w ^ 12 - 8 * u ^ 8 * v ^ 9 * w ^ 9) + u ^ 8 * v ^ 12 * w ^ 6 + 21 * u ^ 10 * v ^ 8 * w ^ 8) - 12 * u ^ 11 * v ^ 6 * w ^ 9) - 12 * u ^ 11 * v ^ 9 * w ^ 6) + 5 * u ^ 14 * v ^ 6 * w ^ 6, u ^ 8 * v ^ 7 * w ^ 8 + u ^ 8 * v ^ 8 * w ^ 7 + 3 * u ^ 9 * v ^ 6 * w ^ 8 + 6 * u ^ 9 * v ^ 7 * w ^ 7 + 3 * u ^ 9 * v ^ 8 * w ^ 6 + 4 * u ^ 10 * v ^ 6 * w ^ 7 + 4 * u ^ 10 * v ^ 7 * w ^ 6 + u ^ 11 * v ^ 6 * w ^ 6, u ^ 16 * v ^ 12 * w ^ 14 + 4 * u ^ 16 * v ^ 13 * w ^ 13 + u ^ 16 * v ^ 14 * w ^ 12 + 6 * u ^ 17 * v ^ 12 * w ^ 13 + 6 * u ^ 17 * v ^ 13 * w ^ 12 + 5 * u ^ 18 * v ^ 12 * w ^ 12, 4 * u ^ 12 * v ^ 9 * w ^ 9, 18 * u ^ 32 * v ^ 24 * w ^ 26 + 18 * u ^ 32 * v ^ 26 * w ^ 24 + 24 * u ^ 34 * v ^ 24 * w ^ 24, u ^ 8 * v ^ 6 * w ^ 8 + 4 * u ^ 8 * v ^ 7 * w ^ 7 + u ^ 8 * v ^ 8 * w ^ 6 + 6 * u ^ 9 * v ^ 6 * w ^ 7 + 6 * u ^ 9 * v ^ 7 * w ^ 6 + 5 * u ^ 10 * v ^ 6 * w ^ 6, ((((u ^ 16 * v ^ 12 * w ^ 18 - 8 * u ^ 16 * v ^ 15 * w ^ 15) + u ^ 16 * v ^ 18 * w ^ 12 + 21 * u ^ 18 * v ^ 14 * w ^ 14) - 12 * u ^ 19 * v ^ 12 * w ^ 15) - 12 * u ^ 19 * v ^ 15 * w ^ 12) + 5 * u ^ 22 * v ^ 12 * w ^ 12, 5 * u ^ 8 * v ^ 6 * w ^ 8 + 10 * u ^ 8 * v ^ 7 * w ^ 7 + 5 * u ^ 8 * v ^ 8 * w ^ 6 + 16 * u ^ 9 * v ^ 6 * w ^ 7 + 16 * u ^ 9 * v ^ 7 * w ^ 6 + 8 * u ^ 10 * v ^ 6 * w ^ 6, u ^ 16 * v ^ 13 * w ^ 14 + u ^ 16 * v ^ 14 * w ^ 13 + 3 * u ^ 17 * v ^ 12 * w ^ 14 + 6 * u ^ 17 * v ^ 13 * w ^ 13 + 3 * u ^ 17 * v ^ 14 * w ^ 12 + 4 * u ^ 18 * v ^ 12 * w ^ 13 + 4 * u ^ 18 * v ^ 13 * w ^ 12 + u ^ 19 * v ^ 12 * w ^ 12, ((u ^ 24 * v ^ 18 * w ^ 21 + u ^ 24 * v ^ 21 * w ^ 18) - 7 * u ^ 25 * v ^ 19 * w ^ 19) + 5 * u ^ 27 * v ^ 18 * w ^ 18, 18 * u ^ 40 * v ^ 30 * w ^ 32 + 18 * u ^ 40 * v ^ 32 * w ^ 30 + 24 * u ^ 42 * v ^ 30 * w ^ 30, 5 * u ^ 16 * v ^ 12 * w ^ 14 + 10 * u ^ 16 * v ^ 13 * w ^ 13 + 5 * u ^ 16 * v ^ 14 * w ^ 12 + 16 * u ^ 17 * v ^ 12 * w ^ 13 + 16 * u ^ 17 * v ^ 13 * w ^ 12 + 8 * u ^ 18 * v ^ 12 * w ^ 12, 18 * u ^ 8 * v ^ 6 * w ^ 7 + 18 * u ^ 8 * v ^ 7 * w ^ 6 + 24 * u ^ 9 * v ^ 6 * w ^ 6, 60 * u ^ 8 * v ^ 6 * w ^ 6, 5 * u ^ 24 * v ^ 18 * w ^ 20 + 10 * u ^ 24 * v ^ 19 * w ^ 19 + 5 * u ^ 24 * v ^ 20 * w ^ 18 + 16 * u ^ 25 * v ^ 18 * w ^ 19 + 16 * u ^ 25 * v ^ 19 * w ^ 18 + 8 * u ^ 26 * v ^ 18 * w ^ 18, 18 * u ^ 24 * v ^ 18 * w ^ 20 + 18 * u ^ 24 * v ^ 20 * w ^ 18 + 24 * u ^ 26 * v ^ 18 * w ^ 18, 18 * u ^ 16 * v ^ 12 * w ^ 13 + 18 * u ^ 16 * v ^ 13 * w ^ 12 + 24 * u ^ 17 * v ^ 12 * w ^ 12, 18 * u ^ 24 * v ^ 18 * w ^ 19 + 18 * u ^ 24 * v ^ 19 * w ^ 18 + 24 * u ^ 25 * v ^ 18 * w ^ 18, 60 * u ^ 40 * v ^ 30 * w ^ 30, 60 * u ^ 24 * v ^ 18 * w ^ 18, 60 * u ^ 16 * v ^ 12 * w ^ 12, 60 * u ^ 32 * v ^ 24 * w ^ 24]
            end
        f60c(u, v, w) = begin
                return [60, 24u + 21v + 15w, 8 * u * v + 4 * u * w + 3 * v * w + 4 * u ^ 2 + 2 * v ^ 2, 16 * u * v + 12 * u * w + 10 * v * w + 10 * u ^ 2 + 8 * v ^ 2 + 4 * w ^ 2, 24 * u ^ 2 + 21 * v ^ 2 + 15 * w ^ 2, -8 * u * v * w + 4 * u ^ 3 + 2 * v ^ 3, 4 * u * v * w + 4 * u * v ^ 2 + u * w ^ 2 + v * w ^ 2 + 4 * u ^ 2 * v + 3 * u ^ 2 * w + v ^ 2 * w + 2 * u ^ 3 + v ^ 3, u ^ 2 * v, 8 * u * v ^ 2 + 6 * u * w ^ 2 + 5 * v * w ^ 2 + 8 * u ^ 2 * v + 6 * u ^ 2 * w + 5 * v ^ 2 * w + 10 * u ^ 3 + 8 * v ^ 3 + 4 * w ^ 3, (-u * v ^ 2 * w - u ^ 2 * v * w) - u ^ 2 * v ^ 2, (((((((((((((((((((((-(u ^ 3) * v ^ 9 * w ^ 7 - u ^ 3 * v ^ 10 * w ^ 6) + u ^ 3 * v ^ 13 * w ^ 3 + u ^ 4 * v ^ 7 * w ^ 8 + u ^ 4 * v ^ 8 * w ^ 7 + u ^ 4 * v ^ 13 * w ^ 2 + u ^ 5 * v ^ 8 * w ^ 6 + u ^ 5 * v ^ 9 * w ^ 5 + 2 * u ^ 6 * v ^ 8 * w ^ 5 + u ^ 6 * v ^ 9 * w ^ 4) - u ^ 6 * v ^ 10 * w ^ 3) + u ^ 7 * v ^ 4 * w ^ 8 + 2 * u ^ 7 * v ^ 8 * w ^ 4) - u ^ 7 * v ^ 9 * w ^ 3) - u ^ 7 * v ^ 10 * w ^ 2) + 2 * u ^ 8 * v ^ 4 * w ^ 7 + 2 * u ^ 8 * v ^ 5 * w ^ 6 + 2 * u ^ 8 * v ^ 6 * w ^ 5 + 2 * u ^ 8 * v ^ 7 * w ^ 4) - u ^ 8 * v ^ 9 * w ^ 2) - u ^ 9 * v ^ 2 * w ^ 8) - u ^ 9 * v ^ 3 * w ^ 7) + u ^ 9 * v ^ 4 * w ^ 6 + u ^ 9 * v ^ 5 * w ^ 5 + u ^ 9 * v ^ 6 * w ^ 4) - u ^ 9 * v ^ 7 * w ^ 3) - u ^ 9 * v ^ 8 * w ^ 2) - u ^ 9 * v ^ 10) - u ^ 10 * v ^ 2 * w ^ 7) - u ^ 10 * v ^ 3 * w ^ 6) - u ^ 10 * v ^ 6 * w ^ 3) - u ^ 10 * v ^ 7 * w ^ 2) - u ^ 10 * v ^ 9) - u ^ 11 * v ^ 8) - u ^ 12 * v ^ 7) + u ^ 13 * v ^ 2 * w ^ 4 + u ^ 13 * v ^ 3 * w ^ 3 + u ^ 13 * v ^ 4 * w ^ 2 + u ^ 15 * v ^ 4, 2 * u * v * w ^ 2 + u * v ^ 2 * w + 3 * u * v ^ 3 + u * w ^ 3 + v * w ^ 3 + u ^ 2 * v * w + 2 * u ^ 2 * v ^ 2 + u ^ 2 * w ^ 2 + 3 * u ^ 3 * v + 2 * u ^ 3 * w + v ^ 3 * w + 2 * u ^ 4 + v ^ 4, 0, 16 * u ^ 2 * v ^ 2 + 12 * u ^ 2 * w ^ 2 + 10 * v ^ 2 * w ^ 2 + 10 * u ^ 4 + 8 * v ^ 4 + 4 * w ^ 4, (((((((8 * u ^ 2 * v ^ 2 * w ^ 3 + 8 * u ^ 2 * v ^ 3 * w ^ 2 + 8 * u ^ 3 * v ^ 2 * w ^ 2) - 8 * u ^ 3 * v ^ 4) - 4 * u ^ 3 * w ^ 4) - 3 * v ^ 3 * w ^ 4) - 8 * u ^ 4 * v ^ 3) - 4 * u ^ 4 * w ^ 3) - 3 * v ^ 4 * w ^ 3) + 4 * u ^ 7 + 2 * v ^ 7, (((-2 * u * v * w ^ 2 - 3 * u * v ^ 2 * w) + u * v ^ 3) - 3 * u ^ 2 * v * w) + u ^ 3 * v + u ^ 3 * w + 2 * u ^ 4 + v ^ 4, (((((((((((-2 * u * v * w ^ 3 + 3 * u * v ^ 2 * w ^ 2) - 3 * u * v ^ 3 * w) - 2 * u * v ^ 4) - u * w ^ 4) - v * w ^ 4) + 3 * u ^ 2 * v * w ^ 2 + 2 * u ^ 2 * v ^ 2 * w + v ^ 2 * w ^ 3) - 3 * u ^ 3 * v * w) + 2 * u ^ 3 * w ^ 2 + 2 * v ^ 3 * w ^ 2) - 2 * u ^ 4 * v) - u ^ 4 * w) - v ^ 4 * w) + 2 * u ^ 5 + v ^ 5, 0, (-(u ^ 2) * v ^ 4 * w ^ 2 - u ^ 4 * v ^ 2 * w ^ 2) - u ^ 4 * v ^ 4, 0, (((((u ^ 6 * v ^ 13 * w ^ 7 + u ^ 6 * v ^ 14 * w ^ 6 + u ^ 7 * v ^ 13 * w ^ 6) - u ^ 8 * v ^ 9 * w ^ 9) + u ^ 8 * v ^ 14 * w ^ 4) - u ^ 9 * v ^ 8 * w ^ 9) - u ^ 9 * v ^ 9 * w ^ 8) + u ^ 9 * v ^ 13 * w ^ 4 + u ^ 13 * v ^ 4 * w ^ 9 + u ^ 13 * v ^ 6 * w ^ 7 + u ^ 13 * v ^ 7 * w ^ 6 + u ^ 13 * v ^ 9 * w ^ 4 + u ^ 13 * v ^ 13 + u ^ 14 * v ^ 4 * w ^ 8 + u ^ 14 * v ^ 6 * w ^ 6 + u ^ 14 * v ^ 8 * w ^ 4 + u ^ 17 * v ^ 9 + u ^ 18 * v ^ 8, (((-2 * u * v * w ^ 3 - 3 * u * v ^ 3 * w) + u ^ 2 * v ^ 3) - 3 * u ^ 3 * v * w) + u ^ 3 * v ^ 2 + u ^ 3 * w ^ 2 + 2 * u ^ 5 + v ^ 5, u ^ 9 * v ^ 9 * w ^ 6 + u ^ 10 * v ^ 8 * w ^ 6 + u ^ 10 * v ^ 9 * w ^ 5, u ^ 10 * v ^ 5, u ^ 42 * v ^ 39 * w ^ 27 + u ^ 44 * v ^ 37 * w ^ 27 + u ^ 44 * v ^ 39 * w ^ 25, (((((((((((-2 * u ^ 3 * v ^ 9 * w ^ 6 + u ^ 3 * v ^ 12 * w ^ 3 + 2 * u ^ 4 * v ^ 7 * w ^ 7 + u ^ 4 * v ^ 12 * w ^ 2 + 3 * u ^ 5 * v ^ 8 * w ^ 5 + 3 * u ^ 6 * v ^ 8 * w ^ 4) - 2 * u ^ 6 * v ^ 9 * w ^ 3) + 2 * u ^ 7 * v ^ 4 * w ^ 7 + 2 * u ^ 7 * v ^ 7 * w ^ 4) - 2 * u ^ 7 * v ^ 9 * w ^ 2) + 3 * u ^ 8 * v ^ 4 * w ^ 6 + 3 * u ^ 8 * v ^ 5 * w ^ 5 + 3 * u ^ 8 * v ^ 6 * w ^ 4) - 2 * u ^ 9 * v ^ 2 * w ^ 7) - 2 * u ^ 9 * v ^ 3 * w ^ 6) - 2 * u ^ 9 * v ^ 6 * w ^ 3) - 2 * u ^ 9 * v ^ 7 * w ^ 2) - 2 * u ^ 9 * v ^ 9) - 2 * u ^ 11 * v ^ 7) + u ^ 12 * v ^ 2 * w ^ 4 + u ^ 12 * v ^ 3 * w ^ 3 + u ^ 12 * v ^ 4 * w ^ 2 + u ^ 14 * v ^ 4, ((6 * u ^ 2 * v ^ 2 * w ^ 2 + 2 * u ^ 2 * v ^ 3 * w + 2 * u ^ 3 * v * w ^ 2 + 2 * u ^ 3 * v ^ 2 * w) - 2 * u ^ 3 * v ^ 3) - u ^ 4 * v ^ 2, 0, (((((((((((((((((-u * v ^ 2 * w ^ 3 - 2 * u * v ^ 3 * w ^ 2) - 3 * u * v ^ 5) - u * w ^ 5) - v * w ^ 5) - u ^ 2 * v * w ^ 3) + 8 * u ^ 2 * v ^ 2 * w ^ 2) - u ^ 2 * v ^ 3 * w) + 4 * u ^ 2 * v ^ 4 + 2 * u ^ 2 * w ^ 4 + 2 * v ^ 2 * w ^ 4) - 2 * u ^ 3 * v * w ^ 2) - u ^ 3 * v ^ 2 * w) - 6 * u ^ 3 * v ^ 3) - 3 * u ^ 3 * w ^ 3) - 2 * v ^ 3 * w ^ 3) + 4 * u ^ 4 * v ^ 2 + 4 * u ^ 4 * w ^ 2 + 3 * v ^ 4 * w ^ 2) - 3 * u ^ 5 * v) - 2 * u ^ 5 * w) - v ^ 5 * w) + 2 * u ^ 6 + v ^ 6, 0, (((24 * u ^ 2 * v ^ 2 * w ^ 2 - 16 * u ^ 3 * v ^ 3) - 8 * u ^ 3 * w ^ 3) - 6 * v ^ 3 * w ^ 3) + 4 * u ^ 6 + 2 * v ^ 6, (-2 * u ^ 40 * v ^ 38 * w ^ 25 + 8 * u ^ 41 * v ^ 36 * w ^ 26) - 4 * u ^ 43 * v ^ 35 * w ^ 25, ((((((((((((((((((((-(u ^ 6) * v ^ 15 * w ^ 10 - u ^ 6 * v ^ 16 * w ^ 9) + u ^ 6 * v ^ 19 * w ^ 6 + u ^ 8 * v ^ 11 * w ^ 12 + u ^ 8 * v ^ 12 * w ^ 11 + u ^ 8 * v ^ 14 * w ^ 9 + u ^ 8 * v ^ 15 * w ^ 8 + u ^ 8 * v ^ 19 * w ^ 4 + u ^ 9 * v ^ 14 * w ^ 8) - u ^ 9 * v ^ 16 * w ^ 6) + u ^ 10 * v ^ 14 * w ^ 7 + u ^ 11 * v ^ 8 * w ^ 12 + u ^ 11 * v ^ 12 * w ^ 8 + u ^ 11 * v ^ 14 * w ^ 6) - u ^ 11 * v ^ 16 * w ^ 4) + u ^ 12 * v ^ 8 * w ^ 11 + u ^ 12 * v ^ 11 * w ^ 8) - u ^ 12 * v ^ 15 * w ^ 4) + u ^ 14 * v ^ 6 * w ^ 11 + u ^ 14 * v ^ 7 * w ^ 10 + u ^ 14 * v ^ 8 * w ^ 9 + u ^ 14 * v ^ 9 * w ^ 8 + u ^ 14 * v ^ 10 * w ^ 7 + u ^ 14 * v ^ 11 * w ^ 6) - u ^ 15 * v ^ 4 * w ^ 12) + u ^ 15 * v ^ 8 * w ^ 8) - u ^ 15 * v ^ 12 * w ^ 4) - u ^ 15 * v ^ 16) - u ^ 16 * v ^ 4 * w ^ 11) - u ^ 16 * v ^ 6 * w ^ 9) - u ^ 16 * v ^ 9 * w ^ 6) - u ^ 16 * v ^ 11 * w ^ 4) - u ^ 16 * v ^ 15) + u ^ 19 * v ^ 4 * w ^ 8 + u ^ 19 * v ^ 6 * w ^ 6 + u ^ 19 * v ^ 8 * w ^ 4) - u ^ 19 * v ^ 12) - u ^ 20 * v ^ 11) + u ^ 23 * v ^ 8, 0, 0, ((((((((((-2 * u * v ^ 3 * w ^ 3 + u * v ^ 6 + 6 * u ^ 2 * v ^ 2 * w ^ 3 + 9 * u ^ 2 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v * w ^ 3) + 9 * u ^ 3 * v ^ 2 * w ^ 2) - 4 * u ^ 3 * v ^ 3 * w) - 6 * u ^ 3 * v ^ 4) - 2 * u ^ 3 * w ^ 4) - 2 * v ^ 3 * w ^ 4) - 6 * u ^ 4 * v ^ 3) - 4 * u ^ 4 * w ^ 3) - 2 * v ^ 4 * w ^ 3) + u ^ 6 * v + u ^ 6 * w + 2 * u ^ 7 + v ^ 7, u ^ 10 * v ^ 11 * w ^ 7 + u ^ 12 * v ^ 9 * w ^ 7 + u ^ 12 * v ^ 11 * w ^ 5, (((((-(u ^ 8) * v ^ 12 * w ^ 5 + 2 * u ^ 9 * v ^ 8 * w ^ 8 + 3 * u ^ 9 * v ^ 10 * w ^ 6) - u ^ 10 * v ^ 10 * w ^ 5) - u ^ 11 * v ^ 7 * w ^ 7) + 3 * u ^ 11 * v ^ 8 * w ^ 6) - u ^ 11 * v ^ 9 * w ^ 5) - 2 * u ^ 13 * v ^ 7 * w ^ 5, u ^ 26 * v ^ 25 * w ^ 17 + u ^ 28 * v ^ 23 * w ^ 17 + u ^ 28 * v ^ 25 * w ^ 15, (((((2 * u ^ 3 * v ^ 7 * w ^ 4 + 2 * u ^ 3 * v ^ 8 * w ^ 3) - 2 * u ^ 4 * v ^ 5 * w ^ 5) + 2 * u ^ 4 * v ^ 6 * w ^ 4 + 4 * u ^ 4 * v ^ 7 * w ^ 3 + u ^ 4 * v ^ 8 * w ^ 2) - 2 * u ^ 5 * v ^ 4 * w ^ 5) - 2 * u ^ 5 * v ^ 5 * w ^ 4) + 2 * u ^ 5 * v ^ 7 * w ^ 2 + u ^ 6 * v ^ 2 * w ^ 6 + 2 * u ^ 6 * v ^ 4 * w ^ 4 + 2 * u ^ 6 * v ^ 6 * w ^ 2 + u ^ 6 * v ^ 8 + 2 * u ^ 7 * v ^ 2 * w ^ 5 + 4 * u ^ 7 * v ^ 3 * w ^ 4 + 4 * u ^ 7 * v ^ 4 * w ^ 3 + 2 * u ^ 7 * v ^ 5 * w ^ 2 + u ^ 8 * v ^ 2 * w ^ 4 + 2 * u ^ 8 * v ^ 3 * w ^ 3 + u ^ 8 * v ^ 4 * w ^ 2 + u ^ 8 * v ^ 6 + 2 * u ^ 9 * v ^ 5 + u ^ 10 * v ^ 4, 0, 0, (-2 * u ^ 8 * v ^ 10 * w ^ 5 + 8 * u ^ 9 * v ^ 8 * w ^ 6) - 4 * u ^ 11 * v ^ 7 * w ^ 5, (((((u ^ 3 * v ^ 7 * w ^ 4 + u ^ 3 * v ^ 8 * w ^ 3) - u ^ 4 * v ^ 5 * w ^ 5) + u ^ 4 * v ^ 7 * w ^ 3 + u ^ 4 * v ^ 8 * w ^ 2) - u ^ 5 * v ^ 4 * w ^ 5) - u ^ 5 * v ^ 5 * w ^ 4) + u ^ 5 * v ^ 7 * w ^ 2 + u ^ 7 * v ^ 2 * w ^ 5 + u ^ 7 * v ^ 3 * w ^ 4 + u ^ 7 * v ^ 4 * w ^ 3 + u ^ 7 * v ^ 5 * w ^ 2 + u ^ 7 * v ^ 7 + u ^ 8 * v ^ 2 * w ^ 4 + u ^ 8 * v ^ 3 * w ^ 3 + u ^ 8 * v ^ 4 * w ^ 2 + u ^ 9 * v ^ 5 + u ^ 10 * v ^ 4, (((((-(u ^ 40) * v ^ 39 * w ^ 25 + 2 * u ^ 41 * v ^ 36 * w ^ 27 + 3 * u ^ 41 * v ^ 37 * w ^ 26) - u ^ 41 * v ^ 38 * w ^ 25) + 3 * u ^ 42 * v ^ 36 * w ^ 26) - u ^ 43 * v ^ 35 * w ^ 26) - u ^ 43 * v ^ 36 * w ^ 25) - 2 * u ^ 44 * v ^ 35 * w ^ 25, u ^ 41 * v ^ 37 * w ^ 26 + u ^ 42 * v ^ 36 * w ^ 26 + u ^ 42 * v ^ 37 * w ^ 25, (((((((((((6 * u ^ 2 * v ^ 2 * w ^ 4 - 2 * u ^ 2 * v ^ 3 * w ^ 3) + 9 * u ^ 2 * v ^ 4 * w ^ 2 + u ^ 2 * v ^ 6) - 2 * u ^ 3 * v ^ 2 * w ^ 3) - 4 * u ^ 3 * v ^ 3 * w ^ 2) - 6 * u ^ 3 * v ^ 5) - 2 * u ^ 3 * w ^ 5) - 2 * v ^ 3 * w ^ 5) + 9 * u ^ 4 * v ^ 2 * w ^ 2) - 6 * u ^ 5 * v ^ 3) - 4 * u ^ 5 * w ^ 3) - 2 * v ^ 5 * w ^ 3) + u ^ 6 * v ^ 2 + u ^ 6 * w ^ 2 + 2 * u ^ 8 + v ^ 8, (-15 * u ^ 40 * v ^ 35 * w ^ 26 - 21 * u ^ 40 * v ^ 36 * w ^ 25) - 24 * u ^ 41 * v ^ 35 * w ^ 25, (((((-(u ^ 8) * v ^ 11 * w ^ 5 + 2 * u ^ 9 * v ^ 8 * w ^ 7 + 3 * u ^ 9 * v ^ 9 * w ^ 6) - u ^ 9 * v ^ 10 * w ^ 5) + 3 * u ^ 10 * v ^ 8 * w ^ 6) - u ^ 11 * v ^ 7 * w ^ 6) - u ^ 11 * v ^ 8 * w ^ 5) - 2 * u ^ 12 * v ^ 7 * w ^ 5, (-(u ^ 33) * v ^ 30 * w ^ 21 - u ^ 34 * v ^ 29 * w ^ 21) - u ^ 34 * v ^ 30 * w ^ 20, 0, (((((-(u ^ 40) * v ^ 40 * w ^ 25 + 2 * u ^ 41 * v ^ 36 * w ^ 28 + 3 * u ^ 41 * v ^ 38 * w ^ 26) - u ^ 42 * v ^ 38 * w ^ 25) - u ^ 43 * v ^ 35 * w ^ 27) + 3 * u ^ 43 * v ^ 36 * w ^ 26) - u ^ 43 * v ^ 37 * w ^ 25) - 2 * u ^ 45 * v ^ 35 * w ^ 25, ((((-4 * u ^ 8 * v ^ 7 * w ^ 9 - 10 * u ^ 8 * v ^ 9 * w ^ 7) - 8 * u ^ 8 * v ^ 11 * w ^ 5) - 12 * u ^ 10 * v ^ 7 * w ^ 7) - 16 * u ^ 10 * v ^ 9 * w ^ 5) - 10 * u ^ 12 * v ^ 7 * w ^ 5, (-15 * u ^ 8 * v ^ 7 * w ^ 7 - 21 * u ^ 8 * v ^ 9 * w ^ 5) - 24 * u ^ 10 * v ^ 7 * w ^ 5, u ^ 25 * v ^ 23 * w ^ 16 + u ^ 26 * v ^ 22 * w ^ 16 + u ^ 26 * v ^ 23 * w ^ 15, (((((((-4 * u ^ 40 * v ^ 35 * w ^ 28 - 5 * u ^ 40 * v ^ 36 * w ^ 27) - 5 * u ^ 40 * v ^ 37 * w ^ 26) - 8 * u ^ 40 * v ^ 38 * w ^ 25) - 6 * u ^ 41 * v ^ 35 * w ^ 27) - 8 * u ^ 41 * v ^ 37 * w ^ 25) - 6 * u ^ 42 * v ^ 35 * w ^ 26) - 8 * u ^ 42 * v ^ 36 * w ^ 25) - 10 * u ^ 43 * v ^ 35 * w ^ 25, (((((2 * u ^ 3 * v ^ 6 * w ^ 4 + 4 * u ^ 3 * v ^ 7 * w ^ 3) - 2 * u ^ 4 * v ^ 4 * w ^ 5) - 2 * u ^ 4 * v ^ 5 * w ^ 4) + 3 * u ^ 4 * v ^ 6 * w ^ 3 + 3 * u ^ 4 * v ^ 7 * w ^ 2) - 2 * u ^ 5 * v ^ 4 * w ^ 4) + 2 * u ^ 5 * v ^ 6 * w ^ 2 + 2 * u ^ 6 * v ^ 2 * w ^ 5 + 3 * u ^ 6 * v ^ 3 * w ^ 4 + 3 * u ^ 6 * v ^ 4 * w ^ 3 + 2 * u ^ 6 * v ^ 5 * w ^ 2 + u ^ 6 * v ^ 7 + 3 * u ^ 7 * v ^ 2 * w ^ 4 + 4 * u ^ 7 * v ^ 3 * w ^ 3 + 3 * u ^ 7 * v ^ 4 * w ^ 2 + u ^ 7 * v ^ 6 + u ^ 8 * v ^ 5 + 2 * u ^ 9 * v ^ 4, 0, (-(u ^ 34) * v ^ 32 * w ^ 22 - u ^ 36 * v ^ 30 * w ^ 22) - u ^ 36 * v ^ 32 * w ^ 20, 0, (((((((-4 * u ^ 8 * v ^ 7 * w ^ 8 - 5 * u ^ 8 * v ^ 8 * w ^ 7) - 5 * u ^ 8 * v ^ 9 * w ^ 6) - 8 * u ^ 8 * v ^ 10 * w ^ 5) - 6 * u ^ 9 * v ^ 7 * w ^ 7) - 8 * u ^ 9 * v ^ 9 * w ^ 5) - 6 * u ^ 10 * v ^ 7 * w ^ 6) - 8 * u ^ 10 * v ^ 8 * w ^ 5) - 10 * u ^ 11 * v ^ 7 * w ^ 5, 0, ((((u ^ 16 * v ^ 18 * w ^ 10 - 2 * u ^ 17 * v ^ 15 * w ^ 12) - 3 * u ^ 17 * v ^ 16 * w ^ 11) + u ^ 17 * v ^ 17 * w ^ 10) - 3 * u ^ 18 * v ^ 15 * w ^ 11) + u ^ 19 * v ^ 14 * w ^ 11 + u ^ 19 * v ^ 15 * w ^ 10 + 2 * u ^ 20 * v ^ 14 * w ^ 10, (-(u ^ 17) * v ^ 16 * w ^ 11 - u ^ 18 * v ^ 15 * w ^ 11) - u ^ 18 * v ^ 16 * w ^ 10, (8 * u ^ 3 * v ^ 6 * w ^ 3 - 6 * u ^ 4 * v ^ 4 * w ^ 4) + 6 * u ^ 4 * v ^ 6 * w ^ 2 + 6 * u ^ 6 * v ^ 2 * w ^ 4 + 8 * u ^ 6 * v ^ 3 * w ^ 3 + 6 * u ^ 6 * v ^ 4 * w ^ 2 + 2 * u ^ 6 * v ^ 6 + 3 * u ^ 8 * v ^ 4, (((((((((((2 * u ^ 8 * v ^ 10 * w ^ 9 + 2 * u ^ 8 * v ^ 11 * w ^ 8) - u ^ 8 * v ^ 14 * w ^ 5) + 2 * u ^ 9 * v ^ 10 * w ^ 8) - u ^ 9 * v ^ 13 * w ^ 5) - 6 * u ^ 10 * v ^ 9 * w ^ 8) - 9 * u ^ 10 * v ^ 10 * w ^ 7) + 2 * u ^ 11 * v ^ 7 * w ^ 9 + 2 * u ^ 11 * v ^ 8 * w ^ 8) - 9 * u ^ 11 * v ^ 9 * w ^ 7) + 4 * u ^ 11 * v ^ 10 * w ^ 6 + 6 * u ^ 11 * v ^ 11 * w ^ 5 + 4 * u ^ 12 * v ^ 7 * w ^ 8 + 6 * u ^ 12 * v ^ 10 * w ^ 5) - u ^ 14 * v ^ 7 * w ^ 6) - u ^ 14 * v ^ 8 * w ^ 5) - 2 * u ^ 15 * v ^ 7 * w ^ 5, 0, ((((((((((((((((((-(u ^ 16) * v ^ 17 * w ^ 15 - 2 * u ^ 16 * v ^ 18 * w ^ 14) - u ^ 16 * v ^ 19 * w ^ 13) + u ^ 16 * v ^ 22 * w ^ 10) - u ^ 17 * v ^ 17 * w ^ 14) - u ^ 17 * v ^ 18 * w ^ 13) + u ^ 17 * v ^ 21 * w ^ 10 + 2 * u ^ 18 * v ^ 16 * w ^ 14 + 5 * u ^ 18 * v ^ 17 * w ^ 13 + 3 * u ^ 18 * v ^ 18 * w ^ 12) - u ^ 19 * v ^ 14 * w ^ 15) - u ^ 19 * v ^ 15 * w ^ 14) + 5 * u ^ 19 * v ^ 16 * w ^ 13 + 6 * u ^ 19 * v ^ 17 * w ^ 12) - 2 * u ^ 19 * v ^ 18 * w ^ 11) - 3 * u ^ 19 * v ^ 19 * w ^ 10) - 3 * u ^ 20 * v ^ 14 * w ^ 14) - u ^ 20 * v ^ 15 * w ^ 13) + 3 * u ^ 20 * v ^ 16 * w ^ 12) - 2 * u ^ 20 * v ^ 17 * w ^ 11) - 6 * u ^ 20 * v ^ 18 * w ^ 10) - 2 * u ^ 21 * v ^ 14 * w ^ 13) - 3 * u ^ 21 * v ^ 17 * w ^ 10) + u ^ 23 * v ^ 14 * w ^ 11 + u ^ 23 * v ^ 15 * w ^ 10 + 2 * u ^ 24 * v ^ 14 * w ^ 10, (8 * u ^ 6 * v ^ 12 * w ^ 6 - 6 * u ^ 8 * v ^ 8 * w ^ 8) + 6 * u ^ 8 * v ^ 12 * w ^ 4 + 6 * u ^ 12 * v ^ 4 * w ^ 8 + 8 * u ^ 12 * v ^ 6 * w ^ 6 + 6 * u ^ 12 * v ^ 8 * w ^ 4 + 2 * u ^ 12 * v ^ 12 + 3 * u ^ 16 * v ^ 8, (((((((-4 * u ^ 24 * v ^ 21 * w ^ 18 - 5 * u ^ 24 * v ^ 22 * w ^ 17) - 5 * u ^ 24 * v ^ 23 * w ^ 16) - 8 * u ^ 24 * v ^ 24 * w ^ 15) - 6 * u ^ 25 * v ^ 21 * w ^ 17) - 8 * u ^ 25 * v ^ 23 * w ^ 15) - 6 * u ^ 26 * v ^ 21 * w ^ 16) - 8 * u ^ 26 * v ^ 22 * w ^ 15) - 10 * u ^ 27 * v ^ 21 * w ^ 15, (((((((((((-(u ^ 8) * v ^ 8 * w ^ 8 - u ^ 8 * v ^ 10 * w ^ 6) - u ^ 8 * v ^ 11 * w ^ 5) - u ^ 9 * v ^ 7 * w ^ 8) - 2 * u ^ 9 * v ^ 8 * w ^ 7) - u ^ 9 * v ^ 9 * w ^ 6) - 3 * u ^ 9 * v ^ 10 * w ^ 5) - u ^ 10 * v ^ 7 * w ^ 7) - u ^ 10 * v ^ 8 * w ^ 6) - 2 * u ^ 10 * v ^ 9 * w ^ 5) - 2 * u ^ 11 * v ^ 7 * w ^ 6) - 3 * u ^ 11 * v ^ 8 * w ^ 5) - 2 * u ^ 12 * v ^ 7 * w ^ 5, (-(u ^ 18) * v ^ 18 * w ^ 12 - u ^ 20 * v ^ 16 * w ^ 12) - u ^ 20 * v ^ 18 * w ^ 10, (((((((((((2 * u ^ 8 * v ^ 10 * w ^ 10 + 2 * u ^ 8 * v ^ 12 * w ^ 8) - u ^ 8 * v ^ 15 * w ^ 5) - 6 * u ^ 10 * v ^ 9 * w ^ 9) + 2 * u ^ 10 * v ^ 10 * w ^ 8) - 9 * u ^ 10 * v ^ 11 * w ^ 7) - u ^ 10 * v ^ 13 * w ^ 5) + 2 * u ^ 11 * v ^ 7 * w ^ 10 + 2 * u ^ 11 * v ^ 9 * w ^ 8 + 4 * u ^ 11 * v ^ 10 * w ^ 7 + 6 * u ^ 11 * v ^ 12 * w ^ 5) - 9 * u ^ 12 * v ^ 9 * w ^ 7) + 4 * u ^ 13 * v ^ 7 * w ^ 8 + 6 * u ^ 13 * v ^ 10 * w ^ 5) - u ^ 14 * v ^ 7 * w ^ 7) - u ^ 14 * v ^ 9 * w ^ 5) - 2 * u ^ 16 * v ^ 7 * w ^ 5, (((((-(u ^ 24) * v ^ 25 * w ^ 15 + 2 * u ^ 25 * v ^ 22 * w ^ 17 + 3 * u ^ 25 * v ^ 23 * w ^ 16) - u ^ 25 * v ^ 24 * w ^ 15) + 3 * u ^ 26 * v ^ 22 * w ^ 16) - u ^ 27 * v ^ 21 * w ^ 16) - u ^ 27 * v ^ 22 * w ^ 15) - 2 * u ^ 28 * v ^ 21 * w ^ 15, (2 * u ^ 16 * v ^ 17 * w ^ 10 - 8 * u ^ 17 * v ^ 15 * w ^ 11) + 4 * u ^ 19 * v ^ 14 * w ^ 10, ((((u ^ 32 * v ^ 33 * w ^ 20 - 2 * u ^ 33 * v ^ 29 * w ^ 23) - 3 * u ^ 33 * v ^ 31 * w ^ 21) + u ^ 34 * v ^ 31 * w ^ 20 + u ^ 35 * v ^ 28 * w ^ 22) - 3 * u ^ 35 * v ^ 29 * w ^ 21) + u ^ 35 * v ^ 30 * w ^ 20 + 2 * u ^ 37 * v ^ 28 * w ^ 20, (2 * u ^ 32 * v ^ 31 * w ^ 20 - 8 * u ^ 33 * v ^ 29 * w ^ 21) + 4 * u ^ 35 * v ^ 28 * w ^ 20, (((((-(u ^ 24) * v ^ 26 * w ^ 15 + 2 * u ^ 25 * v ^ 22 * w ^ 18 + 3 * u ^ 25 * v ^ 24 * w ^ 16) - u ^ 26 * v ^ 24 * w ^ 15) - u ^ 27 * v ^ 21 * w ^ 17) + 3 * u ^ 27 * v ^ 22 * w ^ 16) - u ^ 27 * v ^ 23 * w ^ 15) - 2 * u ^ 29 * v ^ 21 * w ^ 15, (((-6 * u ^ 10 * v ^ 9 * w ^ 7 - 2 * u ^ 10 * v ^ 10 * w ^ 6) - 2 * u ^ 11 * v ^ 8 * w ^ 7) - 2 * u ^ 11 * v ^ 9 * w ^ 6) + 2 * u ^ 11 * v ^ 10 * w ^ 5 + u ^ 12 * v ^ 9 * w ^ 5, (((((((((((-2 * u ^ 16 * v ^ 17 * w ^ 14 - 2 * u ^ 16 * v ^ 18 * w ^ 13) + u ^ 16 * v ^ 21 * w ^ 10) - 2 * u ^ 17 * v ^ 17 * w ^ 13) + u ^ 17 * v ^ 20 * w ^ 10 + 6 * u ^ 18 * v ^ 16 * w ^ 13 + 9 * u ^ 18 * v ^ 17 * w ^ 12) - 2 * u ^ 19 * v ^ 14 * w ^ 14) - 2 * u ^ 19 * v ^ 15 * w ^ 13) + 9 * u ^ 19 * v ^ 16 * w ^ 12) - 4 * u ^ 19 * v ^ 17 * w ^ 11) - 6 * u ^ 19 * v ^ 18 * w ^ 10) - 4 * u ^ 20 * v ^ 14 * w ^ 13) - 6 * u ^ 20 * v ^ 17 * w ^ 10) + u ^ 22 * v ^ 14 * w ^ 11 + u ^ 22 * v ^ 15 * w ^ 10 + 2 * u ^ 23 * v ^ 14 * w ^ 10, (((6 * u ^ 8 * v ^ 10 * w ^ 8 - 2 * u ^ 8 * v ^ 13 * w ^ 5) - 24 * u ^ 10 * v ^ 9 * w ^ 7) + 8 * u ^ 11 * v ^ 7 * w ^ 8 + 16 * u ^ 11 * v ^ 10 * w ^ 5) - 4 * u ^ 14 * v ^ 7 * w ^ 5, (((((((-(u ^ 8) * v ^ 8 * w ^ 7 - u ^ 8 * v ^ 9 * w ^ 6) - u ^ 8 * v ^ 10 * w ^ 5) - u ^ 9 * v ^ 7 * w ^ 7) - 4 * u ^ 9 * v ^ 8 * w ^ 6) - 4 * u ^ 9 * v ^ 9 * w ^ 5) - 3 * u ^ 10 * v ^ 7 * w ^ 6) - 4 * u ^ 10 * v ^ 8 * w ^ 5) - 2 * u ^ 11 * v ^ 7 * w ^ 5, 3 * u ^ 16 * v ^ 15 * w ^ 11 + 2 * u ^ 16 * v ^ 16 * w ^ 10 + 4 * u ^ 17 * v ^ 14 * w ^ 11 + 8 * u ^ 17 * v ^ 15 * w ^ 10 + 4 * u ^ 18 * v ^ 14 * w ^ 10, 0, 15 * u ^ 32 * v ^ 28 * w ^ 22 + 21 * u ^ 32 * v ^ 30 * w ^ 20 + 24 * u ^ 34 * v ^ 28 * w ^ 20, (((-3 * u ^ 8 * v ^ 8 * w ^ 6 - 2 * u ^ 8 * v ^ 9 * w ^ 5) - 4 * u ^ 9 * v ^ 7 * w ^ 6) - 8 * u ^ 9 * v ^ 8 * w ^ 5) - 4 * u ^ 10 * v ^ 7 * w ^ 5, (((-6 * u ^ 16 * v ^ 17 * w ^ 13 + 2 * u ^ 16 * v ^ 20 * w ^ 10 + 24 * u ^ 18 * v ^ 16 * w ^ 12) - 8 * u ^ 19 * v ^ 14 * w ^ 13) - 16 * u ^ 19 * v ^ 17 * w ^ 10) + 4 * u ^ 22 * v ^ 14 * w ^ 10, ((((-4 * u ^ 8 * v ^ 7 * w ^ 7 - 10 * u ^ 8 * v ^ 8 * w ^ 6) - 8 * u ^ 8 * v ^ 9 * w ^ 5) - 12 * u ^ 9 * v ^ 7 * w ^ 6) - 16 * u ^ 9 * v ^ 8 * w ^ 5) - 10 * u ^ 10 * v ^ 7 * w ^ 5, u ^ 16 * v ^ 15 * w ^ 12 + u ^ 16 * v ^ 16 * w ^ 11 + u ^ 16 * v ^ 17 * w ^ 10 + u ^ 17 * v ^ 14 * w ^ 12 + 4 * u ^ 17 * v ^ 15 * w ^ 11 + 4 * u ^ 17 * v ^ 16 * w ^ 10 + 3 * u ^ 18 * v ^ 14 * w ^ 11 + 4 * u ^ 18 * v ^ 15 * w ^ 10 + 2 * u ^ 19 * v ^ 14 * w ^ 10, (-2 * u ^ 24 * v ^ 24 * w ^ 15 + 8 * u ^ 25 * v ^ 22 * w ^ 16) - 4 * u ^ 27 * v ^ 21 * w ^ 15, (-15 * u ^ 40 * v ^ 35 * w ^ 27 - 21 * u ^ 40 * v ^ 37 * w ^ 25) - 24 * u ^ 42 * v ^ 35 * w ^ 25, 4 * u ^ 16 * v ^ 14 * w ^ 12 + 10 * u ^ 16 * v ^ 15 * w ^ 11 + 8 * u ^ 16 * v ^ 16 * w ^ 10 + 12 * u ^ 17 * v ^ 14 * w ^ 11 + 16 * u ^ 17 * v ^ 15 * w ^ 10 + 10 * u ^ 18 * v ^ 14 * w ^ 10, (-15 * u ^ 8 * v ^ 7 * w ^ 6 - 21 * u ^ 8 * v ^ 8 * w ^ 5) - 24 * u ^ 9 * v ^ 7 * w ^ 5, -60 * u ^ 8 * v ^ 7 * w ^ 5, ((((-4 * u ^ 24 * v ^ 21 * w ^ 17 - 10 * u ^ 24 * v ^ 22 * w ^ 16) - 8 * u ^ 24 * v ^ 23 * w ^ 15) - 12 * u ^ 25 * v ^ 21 * w ^ 16) - 16 * u ^ 25 * v ^ 22 * w ^ 15) - 10 * u ^ 26 * v ^ 21 * w ^ 15, (-15 * u ^ 24 * v ^ 21 * w ^ 17 - 21 * u ^ 24 * v ^ 23 * w ^ 15) - 24 * u ^ 26 * v ^ 21 * w ^ 15, 15 * u ^ 16 * v ^ 14 * w ^ 11 + 21 * u ^ 16 * v ^ 15 * w ^ 10 + 24 * u ^ 17 * v ^ 14 * w ^ 10, (-15 * u ^ 24 * v ^ 21 * w ^ 16 - 21 * u ^ 24 * v ^ 22 * w ^ 15) - 24 * u ^ 25 * v ^ 21 * w ^ 15, -60 * u ^ 40 * v ^ 35 * w ^ 25, -60 * u ^ 24 * v ^ 21 * w ^ 15, 60 * u ^ 16 * v ^ 14 * w ^ 10, 60 * u ^ 32 * v ^ 28 * w ^ 20]
            end
        f80(u, v, w) = begin
                return [80, 32u + 24v + 24w, 8 * u * v + 8 * u * w + 4 * v * w + 6 * u ^ 2 + 2 * v ^ 2 + 2 * w ^ 2, 20 * u * v + 20 * u * w + 16 * v * w + 12 * u ^ 2 + 6 * v ^ 2 + 6 * w ^ 2, 32 * u ^ 2 + 24 * v ^ 2 + 24 * w ^ 2, -10 * u * v * w + 6 * u ^ 3 + 2 * v ^ 3 + 2 * w ^ 3, 8 * u * v * w + 3 * u * v ^ 2 + 3 * u * w ^ 2 + 2 * v * w ^ 2 + 5 * u ^ 2 * v + 5 * u ^ 2 * w + 2 * v ^ 2 * w + 2 * u ^ 3, u * v * w + u ^ 2 * v + u ^ 2 * w, 10 * u * v ^ 2 + 10 * u * w ^ 2 + 8 * v * w ^ 2 + 10 * u ^ 2 * v + 10 * u ^ 2 * w + 8 * v ^ 2 * w + 12 * u ^ 3 + 6 * v ^ 3 + 6 * w ^ 3, (-u * v * w ^ 2 - u * v ^ 2 * w) - 2 * u ^ 2 * v * w, ((((((((((((((((((((((((((((((((((u ^ 3 * v ^ 3 * w ^ 13 - u ^ 3 * v ^ 6 * w ^ 10) - u ^ 3 * v ^ 7 * w ^ 9) - u ^ 3 * v ^ 9 * w ^ 7) - u ^ 3 * v ^ 10 * w ^ 6) + u ^ 3 * v ^ 13 * w ^ 3 + u ^ 4 * v ^ 2 * w ^ 13 + u ^ 4 * v ^ 7 * w ^ 8 + u ^ 4 * v ^ 8 * w ^ 7 + u ^ 4 * v ^ 13 * w ^ 2 + u ^ 5 * v ^ 5 * w ^ 9 + u ^ 5 * v ^ 6 * w ^ 8 + u ^ 5 * v ^ 8 * w ^ 6 + u ^ 5 * v ^ 9 * w ^ 5) - u ^ 6 * v ^ 3 * w ^ 10) + u ^ 6 * v ^ 4 * w ^ 9 + 2 * u ^ 6 * v ^ 5 * w ^ 8) - u ^ 6 * v ^ 6 * w ^ 7) - u ^ 6 * v ^ 7 * w ^ 6) + 2 * u ^ 6 * v ^ 8 * w ^ 5 + u ^ 6 * v ^ 9 * w ^ 4) - u ^ 6 * v ^ 10 * w ^ 3) - u ^ 7 * v ^ 2 * w ^ 10) - u ^ 7 * v ^ 3 * w ^ 9) + 2 * u ^ 7 * v ^ 4 * w ^ 8) - u ^ 7 * v ^ 6 * w ^ 6) + 2 * u ^ 7 * v ^ 8 * w ^ 4) - u ^ 7 * v ^ 9 * w ^ 3) - u ^ 7 * v ^ 10 * w ^ 2) - u ^ 8 * v ^ 2 * w ^ 9) + 2 * u ^ 8 * v ^ 4 * w ^ 7 + 3 * u ^ 8 * v ^ 5 * w ^ 6 + 3 * u ^ 8 * v ^ 6 * w ^ 5 + 2 * u ^ 8 * v ^ 7 * w ^ 4) - u ^ 8 * v ^ 9 * w ^ 2) - u ^ 9 * v ^ 2 * w ^ 8) - 2 * u ^ 9 * v ^ 3 * w ^ 7) + u ^ 9 * v ^ 4 * w ^ 6 + 2 * u ^ 9 * v ^ 5 * w ^ 5 + u ^ 9 * v ^ 6 * w ^ 4) - 2 * u ^ 9 * v ^ 7 * w ^ 3) - u ^ 9 * v ^ 8 * w ^ 2) - u ^ 10 * v ^ 2 * w ^ 7) - 2 * u ^ 10 * v ^ 3 * w ^ 6) - 2 * u ^ 10 * v ^ 6 * w ^ 3) - u ^ 10 * v ^ 7 * w ^ 2) - u ^ 11 * v ^ 8) - u ^ 11 * w ^ 8) - u ^ 12 * v ^ 7) - u ^ 12 * w ^ 7) + u ^ 13 * v ^ 2 * w ^ 4 + 2 * u ^ 13 * v ^ 3 * w ^ 3 + u ^ 13 * v ^ 4 * w ^ 2 + u ^ 15 * v ^ 4 + u ^ 15 * w ^ 4, 3 * u * v * w ^ 2 + 3 * u * v ^ 2 * w + 2 * u * v ^ 3 + 2 * u * w ^ 3 + v * w ^ 3 + 2 * u ^ 2 * v * w + 3 * u ^ 2 * v ^ 2 + 3 * u ^ 2 * w ^ 2 + 2 * v ^ 2 * w ^ 2 + 3 * u ^ 3 * v + 3 * u ^ 3 * w + v ^ 3 * w + 2 * u ^ 4, 0, 20 * u ^ 2 * v ^ 2 + 20 * u ^ 2 * w ^ 2 + 16 * v ^ 2 * w ^ 2 + 12 * u ^ 4 + 6 * v ^ 4 + 6 * w ^ 4, (((((((10 * u ^ 2 * v ^ 2 * w ^ 3 + 10 * u ^ 2 * v ^ 3 * w ^ 2 + 10 * u ^ 3 * v ^ 2 * w ^ 2) - 8 * u ^ 3 * v ^ 4) - 8 * u ^ 3 * w ^ 4) - 4 * v ^ 3 * w ^ 4) - 8 * u ^ 4 * v ^ 3) - 8 * u ^ 4 * w ^ 3) - 4 * v ^ 4 * w ^ 3) + 6 * u ^ 7 + 2 * v ^ 7 + 2 * w ^ 7, (((-3 * u * v * w ^ 2 - 3 * u * v ^ 2 * w) + u * v ^ 3 + u * w ^ 3 + v * w ^ 3) - 4 * u ^ 2 * v * w) + 2 * u ^ 3 * v + 2 * u ^ 3 * w + v ^ 3 * w + 2 * u ^ 4, (((((((((-5 * u * v * w ^ 3 + 4 * u * v ^ 2 * w ^ 2) - 5 * u * v ^ 3 * w) - u * v ^ 4) - u * w ^ 4) + 3 * u ^ 2 * v * w ^ 2 + 3 * u ^ 2 * v ^ 2 * w + 2 * v ^ 2 * w ^ 3) - 6 * u ^ 3 * v * w) + 2 * u ^ 3 * v ^ 2 + 2 * u ^ 3 * w ^ 2 + 2 * v ^ 3 * w ^ 2) - u ^ 4 * v) - u ^ 4 * w) + 2 * u ^ 5, 0, (-(u ^ 2) * v ^ 2 * w ^ 4 - u ^ 2 * v ^ 4 * w ^ 2) - 2 * u ^ 4 * v ^ 2 * w ^ 2, 0, (((((u ^ 6 * v ^ 6 * w ^ 14 + u ^ 6 * v ^ 7 * w ^ 13 + u ^ 6 * v ^ 13 * w ^ 7 + u ^ 6 * v ^ 14 * w ^ 6 + u ^ 7 * v ^ 6 * w ^ 13 + u ^ 7 * v ^ 13 * w ^ 6 + u ^ 8 * v ^ 4 * w ^ 14) - u ^ 8 * v ^ 9 * w ^ 9) + u ^ 8 * v ^ 14 * w ^ 4 + u ^ 9 * v ^ 4 * w ^ 13) - u ^ 9 * v ^ 8 * w ^ 9) - u ^ 9 * v ^ 9 * w ^ 8) + u ^ 9 * v ^ 13 * w ^ 4 + u ^ 13 * v ^ 4 * w ^ 9 + 2 * u ^ 13 * v ^ 6 * w ^ 7 + 2 * u ^ 13 * v ^ 7 * w ^ 6 + u ^ 13 * v ^ 9 * w ^ 4 + u ^ 14 * v ^ 4 * w ^ 8 + 2 * u ^ 14 * v ^ 6 * w ^ 6 + u ^ 14 * v ^ 8 * w ^ 4 + u ^ 17 * v ^ 9 + u ^ 17 * w ^ 9 + u ^ 18 * v ^ 8 + u ^ 18 * w ^ 8, (((-3 * u * v * w ^ 3 - 3 * u * v ^ 3 * w) + u ^ 2 * v ^ 3 + u ^ 2 * w ^ 3 + v ^ 2 * w ^ 3) - 4 * u ^ 3 * v * w) + 2 * u ^ 3 * v ^ 2 + 2 * u ^ 3 * w ^ 2 + v ^ 3 * w ^ 2 + 2 * u ^ 5, u ^ 9 * v ^ 7 * w ^ 8 + u ^ 9 * v ^ 8 * w ^ 7 + 2 * u ^ 10 * v ^ 7 * w ^ 7, u ^ 5 * v ^ 5 * w ^ 5 + u ^ 10 * v ^ 5 + u ^ 10 * w ^ 5, u ^ 42 * v ^ 32 * w ^ 34 + u ^ 42 * v ^ 34 * w ^ 32 + 2 * u ^ 44 * v ^ 32 * w ^ 32, ((((((((((((((((((u ^ 3 * v ^ 3 * w ^ 12 - 2 * u ^ 3 * v ^ 6 * w ^ 9) - 2 * u ^ 3 * v ^ 9 * w ^ 6) + u ^ 3 * v ^ 12 * w ^ 3 + u ^ 4 * v ^ 2 * w ^ 12 + 2 * u ^ 4 * v ^ 7 * w ^ 7 + u ^ 4 * v ^ 12 * w ^ 2 + 3 * u ^ 5 * v ^ 5 * w ^ 8 + 3 * u ^ 5 * v ^ 8 * w ^ 5) - 2 * u ^ 6 * v ^ 3 * w ^ 9) + 3 * u ^ 6 * v ^ 4 * w ^ 8) - 3 * u ^ 6 * v ^ 6 * w ^ 6) + 3 * u ^ 6 * v ^ 8 * w ^ 4) - 2 * u ^ 6 * v ^ 9 * w ^ 3) - 2 * u ^ 7 * v ^ 2 * w ^ 9) + 2 * u ^ 7 * v ^ 4 * w ^ 7 + 2 * u ^ 7 * v ^ 7 * w ^ 4) - 2 * u ^ 7 * v ^ 9 * w ^ 2) + 3 * u ^ 8 * v ^ 4 * w ^ 6 + 6 * u ^ 8 * v ^ 5 * w ^ 5 + 3 * u ^ 8 * v ^ 6 * w ^ 4) - 2 * u ^ 9 * v ^ 2 * w ^ 7) - 4 * u ^ 9 * v ^ 3 * w ^ 6) - 4 * u ^ 9 * v ^ 6 * w ^ 3) - 2 * u ^ 9 * v ^ 7 * w ^ 2) - 2 * u ^ 11 * v ^ 7) - 2 * u ^ 11 * w ^ 7) + u ^ 12 * v ^ 2 * w ^ 4 + 2 * u ^ 12 * v ^ 3 * w ^ 3 + u ^ 12 * v ^ 4 * w ^ 2 + u ^ 14 * v ^ 4 + u ^ 14 * w ^ 4, ((2 * u ^ 2 * v * w ^ 3 + 3 * u ^ 2 * v ^ 2 * w ^ 2 + 2 * u ^ 2 * v ^ 3 * w + 2 * u ^ 3 * v * w ^ 2 + 2 * u ^ 3 * v ^ 2 * w) - u ^ 4 * v ^ 2) - u ^ 4 * w ^ 2, 0, (((((((((((((((((-3 * u * v ^ 2 * w ^ 3 - 3 * u * v ^ 3 * w ^ 2) - 2 * u * v ^ 5) - 2 * u * w ^ 5) - v * w ^ 5) - 2 * u ^ 2 * v * w ^ 3) + 10 * u ^ 2 * v ^ 2 * w ^ 2) - 2 * u ^ 2 * v ^ 3 * w) + 4 * u ^ 2 * v ^ 4 + 4 * u ^ 2 * w ^ 4 + 4 * v ^ 2 * w ^ 4) - 3 * u ^ 3 * v * w ^ 2) - 3 * u ^ 3 * v ^ 2 * w) - 5 * u ^ 3 * v ^ 3) - 5 * u ^ 3 * w ^ 3) - 2 * v ^ 3 * w ^ 3) + 6 * u ^ 4 * v ^ 2 + 6 * u ^ 4 * w ^ 2 + 4 * v ^ 4 * w ^ 2) - 3 * u ^ 5 * v) - 3 * u ^ 5 * w) - v ^ 5 * w) + 2 * u ^ 6, 0, (((30 * u ^ 2 * v ^ 2 * w ^ 2 - 16 * u ^ 3 * v ^ 3) - 16 * u ^ 3 * w ^ 3) - 8 * v ^ 3 * w ^ 3) + 6 * u ^ 6 + 2 * v ^ 6 + 2 * w ^ 6, ((-2 * u ^ 40 * v ^ 30 * w ^ 33 - 2 * u ^ 40 * v ^ 33 * w ^ 30) + 10 * u ^ 41 * v ^ 31 * w ^ 31) - 6 * u ^ 43 * v ^ 30 * w ^ 30, (((((((((((((((((((((((((((((((((((u ^ 6 * v ^ 6 * w ^ 19 - u ^ 6 * v ^ 9 * w ^ 16) - u ^ 6 * v ^ 10 * w ^ 15) - u ^ 6 * v ^ 15 * w ^ 10) - u ^ 6 * v ^ 16 * w ^ 9) + u ^ 6 * v ^ 19 * w ^ 6 + u ^ 8 * v ^ 4 * w ^ 19 + u ^ 8 * v ^ 8 * w ^ 15 + u ^ 8 * v ^ 9 * w ^ 14 + u ^ 8 * v ^ 11 * w ^ 12 + u ^ 8 * v ^ 12 * w ^ 11 + u ^ 8 * v ^ 14 * w ^ 9 + u ^ 8 * v ^ 15 * w ^ 8 + u ^ 8 * v ^ 19 * w ^ 4) - u ^ 9 * v ^ 6 * w ^ 16) + u ^ 9 * v ^ 8 * w ^ 14 + u ^ 9 * v ^ 14 * w ^ 8) - u ^ 9 * v ^ 16 * w ^ 6) + u ^ 10 * v ^ 7 * w ^ 14) - u ^ 10 * v ^ 10 * w ^ 11) - u ^ 10 * v ^ 11 * w ^ 10) + u ^ 10 * v ^ 14 * w ^ 7) - u ^ 11 * v ^ 4 * w ^ 16) + u ^ 11 * v ^ 6 * w ^ 14 + u ^ 11 * v ^ 8 * w ^ 12) - u ^ 11 * v ^ 10 * w ^ 10) + u ^ 11 * v ^ 12 * w ^ 8 + u ^ 11 * v ^ 14 * w ^ 6) - u ^ 11 * v ^ 16 * w ^ 4) - u ^ 12 * v ^ 4 * w ^ 15) + u ^ 12 * v ^ 8 * w ^ 11 + u ^ 12 * v ^ 11 * w ^ 8) - u ^ 12 * v ^ 15 * w ^ 4) + u ^ 14 * v ^ 6 * w ^ 11 + u ^ 14 * v ^ 7 * w ^ 10 + 2 * u ^ 14 * v ^ 8 * w ^ 9 + 2 * u ^ 14 * v ^ 9 * w ^ 8 + u ^ 14 * v ^ 10 * w ^ 7 + u ^ 14 * v ^ 11 * w ^ 6) - u ^ 15 * v ^ 4 * w ^ 12) - u ^ 15 * v ^ 6 * w ^ 10) + 2 * u ^ 15 * v ^ 8 * w ^ 8) - u ^ 15 * v ^ 10 * w ^ 6) - u ^ 15 * v ^ 12 * w ^ 4) - u ^ 16 * v ^ 4 * w ^ 11) - 2 * u ^ 16 * v ^ 6 * w ^ 9) - 2 * u ^ 16 * v ^ 9 * w ^ 6) - u ^ 16 * v ^ 11 * w ^ 4) + u ^ 19 * v ^ 4 * w ^ 8 + 2 * u ^ 19 * v ^ 6 * w ^ 6 + u ^ 19 * v ^ 8 * w ^ 4) - u ^ 19 * v ^ 12) - u ^ 19 * w ^ 12) - u ^ 20 * v ^ 11) - u ^ 20 * w ^ 11) + u ^ 23 * v ^ 8 + u ^ 23 * w ^ 8, 0, 0, ((((((((((-4 * u * v ^ 3 * w ^ 3 + u * v ^ 6 + u * w ^ 6 + v * w ^ 6 + 9 * u ^ 2 * v ^ 2 * w ^ 3 + 9 * u ^ 2 * v ^ 3 * w ^ 2) - 6 * u ^ 3 * v * w ^ 3) + 12 * u ^ 3 * v ^ 2 * w ^ 2) - 6 * u ^ 3 * v ^ 3 * w) - 4 * u ^ 3 * v ^ 4) - 4 * u ^ 3 * w ^ 4) - 2 * v ^ 3 * w ^ 4) - 6 * u ^ 4 * v ^ 3) - 6 * u ^ 4 * w ^ 3) - 2 * v ^ 4 * w ^ 3) + 2 * u ^ 6 * v + 2 * u ^ 6 * w + v ^ 6 * w + 2 * u ^ 7, u ^ 10 * v ^ 8 * w ^ 10 + u ^ 10 * v ^ 10 * w ^ 8 + 2 * u ^ 12 * v ^ 8 * w ^ 8, (((((((-(u ^ 8) * v ^ 8 * w ^ 9 - u ^ 8 * v ^ 9 * w ^ 8) + 3 * u ^ 9 * v ^ 7 * w ^ 9 + 3 * u ^ 9 * v ^ 9 * w ^ 7) - u ^ 10 * v ^ 6 * w ^ 9) - u ^ 10 * v ^ 9 * w ^ 6) - 2 * u ^ 11 * v ^ 6 * w ^ 8) + 4 * u ^ 11 * v ^ 7 * w ^ 7) - 2 * u ^ 11 * v ^ 8 * w ^ 6) - 2 * u ^ 13 * v ^ 6 * w ^ 6, u ^ 26 * v ^ 20 * w ^ 22 + u ^ 26 * v ^ 22 * w ^ 20 + 2 * u ^ 28 * v ^ 20 * w ^ 20, (((((2 * u ^ 3 * v ^ 3 * w ^ 8 + 2 * u ^ 3 * v ^ 4 * w ^ 7 + 2 * u ^ 3 * v ^ 7 * w ^ 4 + 2 * u ^ 3 * v ^ 8 * w ^ 3 + u ^ 4 * v ^ 2 * w ^ 8 + 4 * u ^ 4 * v ^ 3 * w ^ 7 + u ^ 4 * v ^ 4 * w ^ 6) - 2 * u ^ 4 * v ^ 5 * w ^ 5) + u ^ 4 * v ^ 6 * w ^ 4 + 4 * u ^ 4 * v ^ 7 * w ^ 3 + u ^ 4 * v ^ 8 * w ^ 2 + 2 * u ^ 5 * v ^ 2 * w ^ 7) - 2 * u ^ 5 * v ^ 4 * w ^ 5) - 2 * u ^ 5 * v ^ 5 * w ^ 4) + 2 * u ^ 5 * v ^ 7 * w ^ 2 + 2 * u ^ 6 * v ^ 2 * w ^ 6 + 3 * u ^ 6 * v ^ 4 * w ^ 4 + 2 * u ^ 6 * v ^ 6 * w ^ 2 + 2 * u ^ 7 * v ^ 2 * w ^ 5 + 6 * u ^ 7 * v ^ 3 * w ^ 4 + 6 * u ^ 7 * v ^ 4 * w ^ 3 + 2 * u ^ 7 * v ^ 5 * w ^ 2 + u ^ 8 * v ^ 2 * w ^ 4 + 4 * u ^ 8 * v ^ 3 * w ^ 3 + u ^ 8 * v ^ 4 * w ^ 2 + 2 * u ^ 9 * v ^ 5 + 2 * u ^ 9 * w ^ 5 + u ^ 10 * v ^ 4 + u ^ 10 * w ^ 4, 0, 0, ((-2 * u ^ 8 * v ^ 6 * w ^ 9 - 2 * u ^ 8 * v ^ 9 * w ^ 6) + 10 * u ^ 9 * v ^ 7 * w ^ 7) - 6 * u ^ 11 * v ^ 6 * w ^ 6, (((((u ^ 3 * v ^ 3 * w ^ 8 + u ^ 3 * v ^ 4 * w ^ 7 + u ^ 3 * v ^ 7 * w ^ 4 + u ^ 3 * v ^ 8 * w ^ 3 + u ^ 4 * v ^ 2 * w ^ 8 + u ^ 4 * v ^ 3 * w ^ 7) - u ^ 4 * v ^ 5 * w ^ 5) + u ^ 4 * v ^ 7 * w ^ 3 + u ^ 4 * v ^ 8 * w ^ 2 + u ^ 5 * v ^ 2 * w ^ 7) - u ^ 5 * v ^ 4 * w ^ 5) - u ^ 5 * v ^ 5 * w ^ 4) + u ^ 5 * v ^ 7 * w ^ 2 + u ^ 7 * v ^ 2 * w ^ 5 + 2 * u ^ 7 * v ^ 3 * w ^ 4 + 2 * u ^ 7 * v ^ 4 * w ^ 3 + u ^ 7 * v ^ 5 * w ^ 2 + u ^ 8 * v ^ 2 * w ^ 4 + 2 * u ^ 8 * v ^ 3 * w ^ 3 + u ^ 8 * v ^ 4 * w ^ 2 + u ^ 9 * v ^ 5 + u ^ 9 * w ^ 5 + u ^ 10 * v ^ 4 + u ^ 10 * w ^ 4, (((((((-(u ^ 40) * v ^ 31 * w ^ 33 - u ^ 40 * v ^ 33 * w ^ 31) - u ^ 41 * v ^ 30 * w ^ 33) + 3 * u ^ 41 * v ^ 31 * w ^ 32 + 3 * u ^ 41 * v ^ 32 * w ^ 31) - u ^ 41 * v ^ 33 * w ^ 30) + 4 * u ^ 42 * v ^ 31 * w ^ 31) - 2 * u ^ 43 * v ^ 30 * w ^ 31) - 2 * u ^ 43 * v ^ 31 * w ^ 30) - 2 * u ^ 44 * v ^ 30 * w ^ 30, u ^ 41 * v ^ 31 * w ^ 32 + u ^ 41 * v ^ 32 * w ^ 31 + 2 * u ^ 42 * v ^ 31 * w ^ 31, (((((((((((9 * u ^ 2 * v ^ 2 * w ^ 4 - 4 * u ^ 2 * v ^ 3 * w ^ 3) + 9 * u ^ 2 * v ^ 4 * w ^ 2 + u ^ 2 * v ^ 6 + u ^ 2 * w ^ 6 + v ^ 2 * w ^ 6) - 6 * u ^ 3 * v ^ 2 * w ^ 3) - 6 * u ^ 3 * v ^ 3 * w ^ 2) - 4 * u ^ 3 * v ^ 5) - 4 * u ^ 3 * w ^ 5) - 2 * v ^ 3 * w ^ 5) + 12 * u ^ 4 * v ^ 2 * w ^ 2) - 6 * u ^ 5 * v ^ 3) - 6 * u ^ 5 * w ^ 3) - 2 * v ^ 5 * w ^ 3) + 2 * u ^ 6 * v ^ 2 + 2 * u ^ 6 * w ^ 2 + v ^ 6 * w ^ 2 + 2 * u ^ 8, (-24 * u ^ 40 * v ^ 30 * w ^ 31 - 24 * u ^ 40 * v ^ 31 * w ^ 30) - 32 * u ^ 41 * v ^ 30 * w ^ 30, (((((((-(u ^ 8) * v ^ 7 * w ^ 9 - u ^ 8 * v ^ 9 * w ^ 7) - u ^ 9 * v ^ 6 * w ^ 9) + 3 * u ^ 9 * v ^ 7 * w ^ 8 + 3 * u ^ 9 * v ^ 8 * w ^ 7) - u ^ 9 * v ^ 9 * w ^ 6) + 4 * u ^ 10 * v ^ 7 * w ^ 7) - 2 * u ^ 11 * v ^ 6 * w ^ 7) - 2 * u ^ 11 * v ^ 7 * w ^ 6) - 2 * u ^ 12 * v ^ 6 * w ^ 6, (-(u ^ 33) * v ^ 25 * w ^ 26 - u ^ 33 * v ^ 26 * w ^ 25) - 2 * u ^ 34 * v ^ 25 * w ^ 25, 0, (((((((-(u ^ 40) * v ^ 32 * w ^ 33 - u ^ 40 * v ^ 33 * w ^ 32) + 3 * u ^ 41 * v ^ 31 * w ^ 33 + 3 * u ^ 41 * v ^ 33 * w ^ 31) - u ^ 42 * v ^ 30 * w ^ 33) - u ^ 42 * v ^ 33 * w ^ 30) - 2 * u ^ 43 * v ^ 30 * w ^ 32) + 4 * u ^ 43 * v ^ 31 * w ^ 31) - 2 * u ^ 43 * v ^ 32 * w ^ 30) - 2 * u ^ 45 * v ^ 30 * w ^ 30, ((((-6 * u ^ 8 * v ^ 6 * w ^ 10 - 16 * u ^ 8 * v ^ 8 * w ^ 8) - 6 * u ^ 8 * v ^ 10 * w ^ 6) - 20 * u ^ 10 * v ^ 6 * w ^ 8) - 20 * u ^ 10 * v ^ 8 * w ^ 6) - 12 * u ^ 12 * v ^ 6 * w ^ 6, (-24 * u ^ 8 * v ^ 6 * w ^ 8 - 24 * u ^ 8 * v ^ 8 * w ^ 6) - 32 * u ^ 10 * v ^ 6 * w ^ 6, u ^ 25 * v ^ 19 * w ^ 20 + u ^ 25 * v ^ 20 * w ^ 19 + 2 * u ^ 26 * v ^ 19 * w ^ 19, (((((((-6 * u ^ 40 * v ^ 30 * w ^ 33 - 8 * u ^ 40 * v ^ 31 * w ^ 32) - 8 * u ^ 40 * v ^ 32 * w ^ 31) - 6 * u ^ 40 * v ^ 33 * w ^ 30) - 10 * u ^ 41 * v ^ 30 * w ^ 32) - 10 * u ^ 41 * v ^ 32 * w ^ 30) - 10 * u ^ 42 * v ^ 30 * w ^ 31) - 10 * u ^ 42 * v ^ 31 * w ^ 30) - 12 * u ^ 43 * v ^ 30 * w ^ 30, (((((4 * u ^ 3 * v ^ 3 * w ^ 7 + 2 * u ^ 3 * v ^ 4 * w ^ 6 + 2 * u ^ 3 * v ^ 6 * w ^ 4 + 4 * u ^ 3 * v ^ 7 * w ^ 3 + 3 * u ^ 4 * v ^ 2 * w ^ 7 + 3 * u ^ 4 * v ^ 3 * w ^ 6) - 3 * u ^ 4 * v ^ 4 * w ^ 5) - 3 * u ^ 4 * v ^ 5 * w ^ 4) + 3 * u ^ 4 * v ^ 6 * w ^ 3 + 3 * u ^ 4 * v ^ 7 * w ^ 2 + 2 * u ^ 5 * v ^ 2 * w ^ 6) - 3 * u ^ 5 * v ^ 4 * w ^ 4) + 2 * u ^ 5 * v ^ 6 * w ^ 2 + 2 * u ^ 6 * v ^ 2 * w ^ 5 + 5 * u ^ 6 * v ^ 3 * w ^ 4 + 5 * u ^ 6 * v ^ 4 * w ^ 3 + 2 * u ^ 6 * v ^ 5 * w ^ 2 + 3 * u ^ 7 * v ^ 2 * w ^ 4 + 8 * u ^ 7 * v ^ 3 * w ^ 3 + 3 * u ^ 7 * v ^ 4 * w ^ 2 + u ^ 8 * v ^ 5 + u ^ 8 * w ^ 5 + 2 * u ^ 9 * v ^ 4 + 2 * u ^ 9 * w ^ 4, 0, (-(u ^ 34) * v ^ 26 * w ^ 28 - u ^ 34 * v ^ 28 * w ^ 26) - 2 * u ^ 36 * v ^ 26 * w ^ 26, 0, (((((((-6 * u ^ 8 * v ^ 6 * w ^ 9 - 8 * u ^ 8 * v ^ 7 * w ^ 8) - 8 * u ^ 8 * v ^ 8 * w ^ 7) - 6 * u ^ 8 * v ^ 9 * w ^ 6) - 10 * u ^ 9 * v ^ 6 * w ^ 8) - 10 * u ^ 9 * v ^ 8 * w ^ 6) - 10 * u ^ 10 * v ^ 6 * w ^ 7) - 10 * u ^ 10 * v ^ 7 * w ^ 6) - 12 * u ^ 11 * v ^ 6 * w ^ 6, 0, (((((u ^ 16 * v ^ 13 * w ^ 15 + u ^ 16 * v ^ 15 * w ^ 13 + u ^ 17 * v ^ 12 * w ^ 15) - 3 * u ^ 17 * v ^ 13 * w ^ 14) - 3 * u ^ 17 * v ^ 14 * w ^ 13) + u ^ 17 * v ^ 15 * w ^ 12) - 4 * u ^ 18 * v ^ 13 * w ^ 13) + 2 * u ^ 19 * v ^ 12 * w ^ 13 + 2 * u ^ 19 * v ^ 13 * w ^ 12 + 2 * u ^ 20 * v ^ 12 * w ^ 12, (-(u ^ 17) * v ^ 13 * w ^ 14 - u ^ 17 * v ^ 14 * w ^ 13) - 2 * u ^ 18 * v ^ 13 * w ^ 13, ((8 * u ^ 3 * v ^ 3 * w ^ 6 + 8 * u ^ 3 * v ^ 6 * w ^ 3 + 6 * u ^ 4 * v ^ 2 * w ^ 6) - 9 * u ^ 4 * v ^ 4 * w ^ 4) + 6 * u ^ 4 * v ^ 6 * w ^ 2 + 6 * u ^ 6 * v ^ 2 * w ^ 4 + 16 * u ^ 6 * v ^ 3 * w ^ 3 + 6 * u ^ 6 * v ^ 4 * w ^ 2 + 3 * u ^ 8 * v ^ 4 + 3 * u ^ 8 * w ^ 4, ((((((((((((-(u ^ 8) * v ^ 7 * w ^ 12 + 2 * u ^ 8 * v ^ 9 * w ^ 10 + 2 * u ^ 8 * v ^ 10 * w ^ 9) - u ^ 8 * v ^ 12 * w ^ 7) - u ^ 9 * v ^ 6 * w ^ 12) + 4 * u ^ 9 * v ^ 9 * w ^ 9) - u ^ 9 * v ^ 12 * w ^ 6) - 9 * u ^ 10 * v ^ 8 * w ^ 9) - 9 * u ^ 10 * v ^ 9 * w ^ 8) + 4 * u ^ 11 * v ^ 6 * w ^ 10 + 6 * u ^ 11 * v ^ 7 * w ^ 9) - 12 * u ^ 11 * v ^ 8 * w ^ 8) + 6 * u ^ 11 * v ^ 9 * w ^ 7 + 4 * u ^ 11 * v ^ 10 * w ^ 6 + 6 * u ^ 12 * v ^ 6 * w ^ 9 + 6 * u ^ 12 * v ^ 9 * w ^ 6) - 2 * u ^ 14 * v ^ 6 * w ^ 7) - 2 * u ^ 14 * v ^ 7 * w ^ 6) - 2 * u ^ 15 * v ^ 6 * w ^ 6, 0, (((((((((((((((((((u ^ 16 * v ^ 13 * w ^ 19 - u ^ 16 * v ^ 15 * w ^ 17) - 2 * u ^ 16 * v ^ 16 * w ^ 16) - u ^ 16 * v ^ 17 * w ^ 15) + u ^ 16 * v ^ 19 * w ^ 13 + u ^ 17 * v ^ 12 * w ^ 19) - 2 * u ^ 17 * v ^ 15 * w ^ 16) - 2 * u ^ 17 * v ^ 16 * w ^ 15) + u ^ 17 * v ^ 19 * w ^ 12 + 3 * u ^ 18 * v ^ 14 * w ^ 16 + 6 * u ^ 18 * v ^ 15 * w ^ 15 + 3 * u ^ 18 * v ^ 16 * w ^ 14) - 2 * u ^ 19 * v ^ 12 * w ^ 17) - 3 * u ^ 19 * v ^ 13 * w ^ 16) + 7 * u ^ 19 * v ^ 14 * w ^ 15 + 7 * u ^ 19 * v ^ 15 * w ^ 14) - 3 * u ^ 19 * v ^ 16 * w ^ 13) - 2 * u ^ 19 * v ^ 17 * w ^ 12) - 5 * u ^ 20 * v ^ 12 * w ^ 16) - 3 * u ^ 20 * v ^ 13 * w ^ 15) + 4 * u ^ 20 * v ^ 14 * w ^ 14) - 3 * u ^ 20 * v ^ 15 * w ^ 13) - 5 * u ^ 20 * v ^ 16 * w ^ 12) - 3 * u ^ 21 * v ^ 12 * w ^ 15) - 3 * u ^ 21 * v ^ 15 * w ^ 12) + 2 * u ^ 23 * v ^ 12 * w ^ 13 + 2 * u ^ 23 * v ^ 13 * w ^ 12 + 2 * u ^ 24 * v ^ 12 * w ^ 12, ((8 * u ^ 6 * v ^ 6 * w ^ 12 + 8 * u ^ 6 * v ^ 12 * w ^ 6 + 6 * u ^ 8 * v ^ 4 * w ^ 12) - 9 * u ^ 8 * v ^ 8 * w ^ 8) + 6 * u ^ 8 * v ^ 12 * w ^ 4 + 6 * u ^ 12 * v ^ 4 * w ^ 8 + 16 * u ^ 12 * v ^ 6 * w ^ 6 + 6 * u ^ 12 * v ^ 8 * w ^ 4 + 3 * u ^ 16 * v ^ 8 + 3 * u ^ 16 * w ^ 8, (((((((-6 * u ^ 24 * v ^ 18 * w ^ 21 - 8 * u ^ 24 * v ^ 19 * w ^ 20) - 8 * u ^ 24 * v ^ 20 * w ^ 19) - 6 * u ^ 24 * v ^ 21 * w ^ 18) - 10 * u ^ 25 * v ^ 18 * w ^ 20) - 10 * u ^ 25 * v ^ 20 * w ^ 18) - 10 * u ^ 26 * v ^ 18 * w ^ 19) - 10 * u ^ 26 * v ^ 19 * w ^ 18) - 12 * u ^ 27 * v ^ 18 * w ^ 18, (((((((((((-(u ^ 8) * v ^ 7 * w ^ 9 - 2 * u ^ 8 * v ^ 8 * w ^ 8) - u ^ 8 * v ^ 9 * w ^ 7) - 2 * u ^ 9 * v ^ 6 * w ^ 9) - 3 * u ^ 9 * v ^ 7 * w ^ 8) - 3 * u ^ 9 * v ^ 8 * w ^ 7) - 2 * u ^ 9 * v ^ 9 * w ^ 6) - 3 * u ^ 10 * v ^ 6 * w ^ 8) - 2 * u ^ 10 * v ^ 7 * w ^ 7) - 3 * u ^ 10 * v ^ 8 * w ^ 6) - 3 * u ^ 11 * v ^ 6 * w ^ 7) - 3 * u ^ 11 * v ^ 7 * w ^ 6) - 2 * u ^ 12 * v ^ 6 * w ^ 6, (-(u ^ 18) * v ^ 14 * w ^ 16 - u ^ 18 * v ^ 16 * w ^ 14) - 2 * u ^ 20 * v ^ 14 * w ^ 14, ((((((((((((-(u ^ 8) * v ^ 8 * w ^ 12 + 2 * u ^ 8 * v ^ 9 * w ^ 11 + 2 * u ^ 8 * v ^ 11 * w ^ 9) - u ^ 8 * v ^ 12 * w ^ 8) - u ^ 10 * v ^ 6 * w ^ 12) - 9 * u ^ 10 * v ^ 8 * w ^ 10) + 4 * u ^ 10 * v ^ 9 * w ^ 9) - 9 * u ^ 10 * v ^ 10 * w ^ 8) - u ^ 10 * v ^ 12 * w ^ 6) + 4 * u ^ 11 * v ^ 6 * w ^ 11 + 6 * u ^ 11 * v ^ 8 * w ^ 9 + 6 * u ^ 11 * v ^ 9 * w ^ 8 + 4 * u ^ 11 * v ^ 11 * w ^ 6) - 12 * u ^ 12 * v ^ 8 * w ^ 8) + 6 * u ^ 13 * v ^ 6 * w ^ 9 + 6 * u ^ 13 * v ^ 9 * w ^ 6) - 2 * u ^ 14 * v ^ 6 * w ^ 8) - 2 * u ^ 14 * v ^ 8 * w ^ 6) - 2 * u ^ 16 * v ^ 6 * w ^ 6, (((((((-(u ^ 24) * v ^ 19 * w ^ 21 - u ^ 24 * v ^ 21 * w ^ 19) - u ^ 25 * v ^ 18 * w ^ 21) + 3 * u ^ 25 * v ^ 19 * w ^ 20 + 3 * u ^ 25 * v ^ 20 * w ^ 19) - u ^ 25 * v ^ 21 * w ^ 18) + 4 * u ^ 26 * v ^ 19 * w ^ 19) - 2 * u ^ 27 * v ^ 18 * w ^ 19) - 2 * u ^ 27 * v ^ 19 * w ^ 18) - 2 * u ^ 28 * v ^ 18 * w ^ 18, ((2 * u ^ 16 * v ^ 12 * w ^ 15 + 2 * u ^ 16 * v ^ 15 * w ^ 12) - 10 * u ^ 17 * v ^ 13 * w ^ 13) + 6 * u ^ 19 * v ^ 12 * w ^ 12, (((((u ^ 32 * v ^ 26 * w ^ 27 + u ^ 32 * v ^ 27 * w ^ 26) - 3 * u ^ 33 * v ^ 25 * w ^ 27) - 3 * u ^ 33 * v ^ 27 * w ^ 25) + u ^ 34 * v ^ 24 * w ^ 27 + u ^ 34 * v ^ 27 * w ^ 24 + 2 * u ^ 35 * v ^ 24 * w ^ 26) - 4 * u ^ 35 * v ^ 25 * w ^ 25) + 2 * u ^ 35 * v ^ 26 * w ^ 24 + 2 * u ^ 37 * v ^ 24 * w ^ 24, ((2 * u ^ 32 * v ^ 24 * w ^ 27 + 2 * u ^ 32 * v ^ 27 * w ^ 24) - 10 * u ^ 33 * v ^ 25 * w ^ 25) + 6 * u ^ 35 * v ^ 24 * w ^ 24, (((((((-(u ^ 24) * v ^ 20 * w ^ 21 - u ^ 24 * v ^ 21 * w ^ 20) + 3 * u ^ 25 * v ^ 19 * w ^ 21 + 3 * u ^ 25 * v ^ 21 * w ^ 19) - u ^ 26 * v ^ 18 * w ^ 21) - u ^ 26 * v ^ 21 * w ^ 18) - 2 * u ^ 27 * v ^ 18 * w ^ 20) + 4 * u ^ 27 * v ^ 19 * w ^ 19) - 2 * u ^ 27 * v ^ 20 * w ^ 18) - 2 * u ^ 29 * v ^ 18 * w ^ 18, ((((-2 * u ^ 10 * v ^ 7 * w ^ 9 - 3 * u ^ 10 * v ^ 8 * w ^ 8) - 2 * u ^ 10 * v ^ 9 * w ^ 7) - 2 * u ^ 11 * v ^ 7 * w ^ 8) - 2 * u ^ 11 * v ^ 8 * w ^ 7) + u ^ 12 * v ^ 6 * w ^ 8 + u ^ 12 * v ^ 8 * w ^ 6, ((((((((((((u ^ 16 * v ^ 13 * w ^ 18 - 2 * u ^ 16 * v ^ 15 * w ^ 16) - 2 * u ^ 16 * v ^ 16 * w ^ 15) + u ^ 16 * v ^ 18 * w ^ 13 + u ^ 17 * v ^ 12 * w ^ 18) - 4 * u ^ 17 * v ^ 15 * w ^ 15) + u ^ 17 * v ^ 18 * w ^ 12 + 9 * u ^ 18 * v ^ 14 * w ^ 15 + 9 * u ^ 18 * v ^ 15 * w ^ 14) - 4 * u ^ 19 * v ^ 12 * w ^ 16) - 6 * u ^ 19 * v ^ 13 * w ^ 15) + 12 * u ^ 19 * v ^ 14 * w ^ 14) - 6 * u ^ 19 * v ^ 15 * w ^ 13) - 4 * u ^ 19 * v ^ 16 * w ^ 12) - 6 * u ^ 20 * v ^ 12 * w ^ 15) - 6 * u ^ 20 * v ^ 15 * w ^ 12) + 2 * u ^ 22 * v ^ 12 * w ^ 13 + 2 * u ^ 22 * v ^ 13 * w ^ 12 + 2 * u ^ 23 * v ^ 12 * w ^ 12, ((((-2 * u ^ 8 * v ^ 6 * w ^ 12 + 8 * u ^ 8 * v ^ 9 * w ^ 9) - 2 * u ^ 8 * v ^ 12 * w ^ 6) - 30 * u ^ 10 * v ^ 8 * w ^ 8) + 16 * u ^ 11 * v ^ 6 * w ^ 9 + 16 * u ^ 11 * v ^ 9 * w ^ 6) - 6 * u ^ 14 * v ^ 6 * w ^ 6, ((((((-2 * u ^ 8 * v ^ 7 * w ^ 8 - 2 * u ^ 8 * v ^ 8 * w ^ 7) - 3 * u ^ 9 * v ^ 6 * w ^ 8) - 8 * u ^ 9 * v ^ 7 * w ^ 7) - 3 * u ^ 9 * v ^ 8 * w ^ 6) - 5 * u ^ 10 * v ^ 6 * w ^ 7) - 5 * u ^ 10 * v ^ 7 * w ^ 6) - 2 * u ^ 11 * v ^ 6 * w ^ 6, 2 * u ^ 16 * v ^ 12 * w ^ 14 + 4 * u ^ 16 * v ^ 13 * w ^ 13 + 2 * u ^ 16 * v ^ 14 * w ^ 12 + 8 * u ^ 17 * v ^ 12 * w ^ 13 + 8 * u ^ 17 * v ^ 13 * w ^ 12 + 6 * u ^ 18 * v ^ 12 * w ^ 12, 0, 24 * u ^ 32 * v ^ 24 * w ^ 26 + 24 * u ^ 32 * v ^ 26 * w ^ 24 + 32 * u ^ 34 * v ^ 24 * w ^ 24, ((((-2 * u ^ 8 * v ^ 6 * w ^ 8 - 4 * u ^ 8 * v ^ 7 * w ^ 7) - 2 * u ^ 8 * v ^ 8 * w ^ 6) - 8 * u ^ 9 * v ^ 6 * w ^ 7) - 8 * u ^ 9 * v ^ 7 * w ^ 6) - 6 * u ^ 10 * v ^ 6 * w ^ 6, ((((2 * u ^ 16 * v ^ 12 * w ^ 18 - 8 * u ^ 16 * v ^ 15 * w ^ 15) + 2 * u ^ 16 * v ^ 18 * w ^ 12 + 30 * u ^ 18 * v ^ 14 * w ^ 14) - 16 * u ^ 19 * v ^ 12 * w ^ 15) - 16 * u ^ 19 * v ^ 15 * w ^ 12) + 6 * u ^ 22 * v ^ 12 * w ^ 12, ((((-6 * u ^ 8 * v ^ 6 * w ^ 8 - 16 * u ^ 8 * v ^ 7 * w ^ 7) - 6 * u ^ 8 * v ^ 8 * w ^ 6) - 20 * u ^ 9 * v ^ 6 * w ^ 7) - 20 * u ^ 9 * v ^ 7 * w ^ 6) - 12 * u ^ 10 * v ^ 6 * w ^ 6, 2 * u ^ 16 * v ^ 13 * w ^ 14 + 2 * u ^ 16 * v ^ 14 * w ^ 13 + 3 * u ^ 17 * v ^ 12 * w ^ 14 + 8 * u ^ 17 * v ^ 13 * w ^ 13 + 3 * u ^ 17 * v ^ 14 * w ^ 12 + 5 * u ^ 18 * v ^ 12 * w ^ 13 + 5 * u ^ 18 * v ^ 13 * w ^ 12 + 2 * u ^ 19 * v ^ 12 * w ^ 12, ((-2 * u ^ 24 * v ^ 18 * w ^ 21 - 2 * u ^ 24 * v ^ 21 * w ^ 18) + 10 * u ^ 25 * v ^ 19 * w ^ 19) - 6 * u ^ 27 * v ^ 18 * w ^ 18, (-24 * u ^ 40 * v ^ 30 * w ^ 32 - 24 * u ^ 40 * v ^ 32 * w ^ 30) - 32 * u ^ 42 * v ^ 30 * w ^ 30, 6 * u ^ 16 * v ^ 12 * w ^ 14 + 16 * u ^ 16 * v ^ 13 * w ^ 13 + 6 * u ^ 16 * v ^ 14 * w ^ 12 + 20 * u ^ 17 * v ^ 12 * w ^ 13 + 20 * u ^ 17 * v ^ 13 * w ^ 12 + 12 * u ^ 18 * v ^ 12 * w ^ 12, (-24 * u ^ 8 * v ^ 6 * w ^ 7 - 24 * u ^ 8 * v ^ 7 * w ^ 6) - 32 * u ^ 9 * v ^ 6 * w ^ 6, -80 * u ^ 8 * v ^ 6 * w ^ 6, ((((-6 * u ^ 24 * v ^ 18 * w ^ 20 - 16 * u ^ 24 * v ^ 19 * w ^ 19) - 6 * u ^ 24 * v ^ 20 * w ^ 18) - 20 * u ^ 25 * v ^ 18 * w ^ 19) - 20 * u ^ 25 * v ^ 19 * w ^ 18) - 12 * u ^ 26 * v ^ 18 * w ^ 18, (-24 * u ^ 24 * v ^ 18 * w ^ 20 - 24 * u ^ 24 * v ^ 20 * w ^ 18) - 32 * u ^ 26 * v ^ 18 * w ^ 18, 24 * u ^ 16 * v ^ 12 * w ^ 13 + 24 * u ^ 16 * v ^ 13 * w ^ 12 + 32 * u ^ 17 * v ^ 12 * w ^ 12, (-24 * u ^ 24 * v ^ 18 * w ^ 19 - 24 * u ^ 24 * v ^ 19 * w ^ 18) - 32 * u ^ 25 * v ^ 18 * w ^ 18, -80 * u ^ 40 * v ^ 30 * w ^ 30, -80 * u ^ 24 * v ^ 18 * w ^ 18, 80 * u ^ 16 * v ^ 12 * w ^ 12, 80 * u ^ 32 * v ^ 24 * w ^ 24]
            end
        f64(u, v, w, r) = begin
                return [64, 16u + 24v + 24w, 4 * (v + w) * (v + w + u), 4 * (v + u + 2w) * (2v + u + w), 16 * u ^ 2 + 24 * v ^ 2 + 24 * w ^ 2, -8 * u * v * w + 4 * v ^ 3 + 4 * w ^ 3, (v + w + u) * (v ^ 2 + u * v + 4 * v * w + w ^ 2 + u * w), v * w * (v + w + u), 6 * u * v ^ 2 + 6 * u * w ^ 2 + 10 * v * w ^ 2 + 6 * u ^ 2 * v + 6 * u ^ 2 * w + 10 * v ^ 2 * w + 4 * u ^ 3 + 8 * v ^ 3 + 8 * w ^ 3, -u * v * w * (v + w), -(v ^ 2) * w ^ 2 * (((((((((((((((((((((((((((((((((v ^ 5 * w ^ 10 + v ^ 10 * w ^ 5) - w ^ 7 * v ^ 3 * u ^ 5) - w ^ 3 * v ^ 7 * u ^ 5) + w ^ 8 * v * u ^ 6) - w ^ 7 * v ^ 2 * u ^ 6) + w ^ 5 * v ^ 4 * u ^ 6 + w ^ 4 * v ^ 5 * u ^ 6) - w ^ 2 * v ^ 7 * u ^ 6) + w * v ^ 8 * u ^ 6 + w ^ 7 * v * u ^ 7 + w ^ 4 * v ^ 4 * u ^ 7 + w * v ^ 7 * u ^ 7 + v ^ 8 * u ^ 7) - w ^ 5 * v ^ 2 * u ^ 8) - w ^ 2 * v ^ 5 * u ^ 8) + v ^ 7 * u ^ 8) - 2 * w ^ 2 * v ^ 6 * u ^ 7) - 2 * w ^ 6 * v ^ 2 * u ^ 7) - 2 * w ^ 6 * v ^ 3 * u ^ 6) - 2 * w ^ 3 * v ^ 6 * u ^ 6) - 2 * w ^ 4 * v ^ 6 * u ^ 5) - 2 * w ^ 6 * v ^ 4 * u ^ 5) - 2 * w ^ 6 * v ^ 5 * u ^ 4) - 2 * w ^ 5 * v ^ 6 * u ^ 4) - w ^ 11 * v ^ 2 * u ^ 2) + w ^ 8 * v ^ 5 * u ^ 2 + w ^ 7 * v ^ 6 * u ^ 2 + w ^ 6 * v ^ 7 * u ^ 2 + w ^ 5 * v ^ 8 * u ^ 2) - w ^ 2 * v ^ 11 * u ^ 2) - w ^ 11 * v * u ^ 3) + w ^ 8 * v ^ 4 * u ^ 3 + w ^ 7 * v ^ 5 * u ^ 3 + w ^ 5 * v ^ 7 * u ^ 3 + w ^ 4 * v ^ 8 * u ^ 3) - w * v ^ 11 * u ^ 3) - w ^ 7 * v ^ 4 * u ^ 4) - w ^ 4 * v ^ 7 * u ^ 4) - v ^ 11 * u ^ 4) + w ^ 8 * u ^ 7 + w ^ 7 * u ^ 8) - w ^ 11 * u ^ 4) - w ^ 13 * v ^ 2) + w ^ 9 * v ^ 6 + w ^ 6 * v ^ 9) - w ^ 2 * v ^ 13), (v + w) * (v + w + u) * (v ^ 2 + v * w + w ^ 2 + u ^ 2), -r * u * v * w, 4 * (v ^ 2 + u ^ 2 + 2 * w ^ 2) * (2 * v ^ 2 + u ^ 2 + w ^ 2), -4 * (v + w) * (((((((((((((-(v ^ 6) + v ^ 5 * w) - v ^ 4 * w ^ 2) + u ^ 3 * v ^ 3 + 3 * v ^ 3 * w ^ 3) - 2 * u ^ 2 * v ^ 2 * w ^ 2) - v ^ 2 * w ^ 4) + u ^ 4 * v ^ 2) - u ^ 3 * v ^ 2 * w) - u ^ 3 * v * w ^ 2) + v * w ^ 5) - v * u ^ 4 * w) + u ^ 3 * w ^ 3) - w ^ 6) + u ^ 4 * w ^ 2), (((-3 * u * v * w ^ 2 - 3 * u * v ^ 2 * w) + u * v ^ 3 + u * w ^ 3 + 2 * v * w ^ 3) - 2 * u ^ 2 * v * w) + 2 * v ^ 3 * w + v ^ 4 + w ^ 4, (((((((((-4 * u * v * w ^ 3 + 2 * u * v ^ 2 * w ^ 2) - 4 * u * v ^ 3 * w) - v * w ^ 4) + 3 * u ^ 2 * v * w ^ 2 + 3 * u ^ 2 * v ^ 2 * w + 2 * u ^ 2 * v ^ 3 + 2 * u ^ 2 * w ^ 3) - 4 * u ^ 3 * v * w) + u ^ 3 * v ^ 2 + u ^ 3 * w ^ 2) - u ^ 4 * v) - u ^ 4 * w) - v ^ 4 * w) + v ^ 5 + w ^ 5, -(u ^ 2) * v ^ 3 * w ^ 3, -(u ^ 2) * v ^ 2 * w ^ 4 - u ^ 2 * v ^ 4 * w ^ 2, 0, (((((u ^ 4 * v ^ 8 * w ^ 14 + u ^ 4 * v ^ 9 * w ^ 13 + u ^ 4 * v ^ 13 * w ^ 9 + u ^ 4 * v ^ 14 * w ^ 8 + u ^ 6 * v ^ 6 * w ^ 14 + u ^ 6 * v ^ 7 * w ^ 13 + u ^ 6 * v ^ 13 * w ^ 7 + u ^ 6 * v ^ 14 * w ^ 6 + u ^ 7 * v ^ 6 * w ^ 13 + u ^ 7 * v ^ 13 * w ^ 6 + u ^ 8 * v ^ 4 * w ^ 14) - u ^ 8 * v ^ 9 * w ^ 9) + u ^ 8 * v ^ 14 * w ^ 4 + v ^ 8 * w ^ 18 + u ^ 9 * v ^ 4 * w ^ 13) - u ^ 9 * v ^ 8 * w ^ 9) - u ^ 9 * v ^ 9 * w ^ 8) + u ^ 9 * v ^ 13 * w ^ 4 + v ^ 9 * w ^ 17 + v ^ 17 * w ^ 9 + v ^ 18 * w ^ 8, (((-3 * u * v * w ^ 3 - 3 * u * v ^ 3 * w) + u ^ 2 * v ^ 3 + u ^ 2 * w ^ 3 + 2 * v ^ 2 * w ^ 3) - 2 * u ^ 3 * v * w) + 2 * v ^ 3 * w ^ 2 + v ^ 5 + w ^ 5, -r * u ^ 6 * v ^ 8 * w ^ 9 - r * u ^ 6 * v ^ 9 * w ^ 8, u ^ 5 * v ^ 5 * w ^ 5 + v ^ 5 * w ^ 10 + v ^ 10 * w ^ 5, -r * u ^ 27 * v ^ 39 * w ^ 41 - r * u ^ 27 * v ^ 41 * w ^ 39, ((((((((((((((((u ^ 2 * v ^ 4 * w ^ 12 - 2 * u ^ 2 * v ^ 7 * w ^ 9) - 2 * u ^ 2 * v ^ 9 * w ^ 7) + u ^ 2 * v ^ 12 * w ^ 4 + u ^ 3 * v ^ 3 * w ^ 12) - 2 * u ^ 3 * v ^ 6 * w ^ 9) - 2 * u ^ 3 * v ^ 9 * w ^ 6) + u ^ 3 * v ^ 12 * w ^ 3 + u ^ 4 * v ^ 2 * w ^ 12 + 3 * u ^ 4 * v ^ 6 * w ^ 8 + 2 * u ^ 4 * v ^ 7 * w ^ 7 + 3 * u ^ 4 * v ^ 8 * w ^ 6 + u ^ 4 * v ^ 12 * w ^ 2 + v ^ 4 * w ^ 14 + 3 * u ^ 5 * v ^ 5 * w ^ 8 + 3 * u ^ 5 * v ^ 8 * w ^ 5) - 2 * u ^ 6 * v ^ 3 * w ^ 9) + 3 * u ^ 6 * v ^ 4 * w ^ 8) - 3 * u ^ 6 * v ^ 6 * w ^ 6) + 3 * u ^ 6 * v ^ 8 * w ^ 4) - 2 * u ^ 6 * v ^ 9 * w ^ 3) - 2 * u ^ 7 * v ^ 2 * w ^ 9) + 2 * u ^ 7 * v ^ 4 * w ^ 7 + 2 * u ^ 7 * v ^ 7 * w ^ 4) - 2 * u ^ 7 * v ^ 9 * w ^ 2) - 2 * v ^ 7 * w ^ 11) - 2 * v ^ 11 * w ^ 7) + v ^ 14 * w ^ 4, ((2 * u * v ^ 2 * w ^ 3 + 2 * u * v ^ 3 * w ^ 2 + 2 * u ^ 2 * v * w ^ 3 + 3 * u ^ 2 * v ^ 2 * w ^ 2 + 2 * u ^ 2 * v ^ 3 * w) - v ^ 2 * w ^ 4) - v ^ 4 * w ^ 2, -r * u ^ 3 * v ^ 4 * w ^ 4, (((((((((((((((((-2 * u * v ^ 2 * w ^ 3 - 2 * u * v ^ 3 * w ^ 2) - u * v ^ 5) - u * w ^ 5) - 3 * v * w ^ 5) - 2 * u ^ 2 * v * w ^ 3) + 8 * u ^ 2 * v ^ 2 * w ^ 2) - 2 * u ^ 2 * v ^ 3 * w) + 4 * u ^ 2 * v ^ 4 + 4 * u ^ 2 * w ^ 4 + 5 * v ^ 2 * w ^ 4) - 2 * u ^ 3 * v * w ^ 2) - 2 * u ^ 3 * v ^ 2 * w) - 2 * u ^ 3 * v ^ 3) - 2 * u ^ 3 * w ^ 3) - 6 * v ^ 3 * w ^ 3) + 2 * u ^ 4 * v ^ 2 + 2 * u ^ 4 * w ^ 2 + 5 * v ^ 4 * w ^ 2) - u ^ 5 * v) - u ^ 5 * w) - 3 * v ^ 5 * w) + v ^ 6 + w ^ 6, 0, (((24 * u ^ 2 * v ^ 2 * w ^ 2 - 8 * u ^ 3 * v ^ 3) - 8 * u ^ 3 * w ^ 3) - 16 * v ^ 3 * w ^ 3) + 4 * v ^ 6 + 4 * w ^ 6, (4 * r * u ^ 25 * v ^ 37 * w ^ 40 + 4 * r * u ^ 25 * v ^ 40 * w ^ 37) - 8 * r * u ^ 26 * v ^ 38 * w ^ 38, ((((((((((((((((((((((((((((u ^ 4 * v ^ 8 * w ^ 19 - u ^ 4 * v ^ 11 * w ^ 16) - u ^ 4 * v ^ 12 * w ^ 15) - u ^ 4 * v ^ 15 * w ^ 12) - u ^ 4 * v ^ 16 * w ^ 11) + u ^ 4 * v ^ 19 * w ^ 8 + u ^ 6 * v ^ 6 * w ^ 19) - u ^ 6 * v ^ 9 * w ^ 16) + u ^ 6 * v ^ 11 * w ^ 14 + u ^ 6 * v ^ 14 * w ^ 11) - u ^ 6 * v ^ 16 * w ^ 9) + u ^ 6 * v ^ 19 * w ^ 6 + u ^ 7 * v ^ 10 * w ^ 14 + u ^ 7 * v ^ 14 * w ^ 10 + u ^ 8 * v ^ 4 * w ^ 19 + u ^ 8 * v ^ 8 * w ^ 15 + u ^ 8 * v ^ 9 * w ^ 14 + u ^ 8 * v ^ 11 * w ^ 12 + u ^ 8 * v ^ 12 * w ^ 11 + u ^ 8 * v ^ 14 * w ^ 9 + u ^ 8 * v ^ 15 * w ^ 8 + u ^ 8 * v ^ 19 * w ^ 4 + v ^ 8 * w ^ 23) - u ^ 9 * v ^ 6 * w ^ 16) + u ^ 9 * v ^ 8 * w ^ 14 + u ^ 9 * v ^ 14 * w ^ 8) - u ^ 9 * v ^ 16 * w ^ 6) + u ^ 10 * v ^ 7 * w ^ 14) - u ^ 10 * v ^ 10 * w ^ 11) - u ^ 10 * v ^ 11 * w ^ 10) + u ^ 10 * v ^ 14 * w ^ 7) - u ^ 11 * v ^ 4 * w ^ 16) + u ^ 11 * v ^ 6 * w ^ 14 + u ^ 11 * v ^ 8 * w ^ 12) - u ^ 11 * v ^ 10 * w ^ 10) + u ^ 11 * v ^ 12 * w ^ 8 + u ^ 11 * v ^ 14 * w ^ 6) - u ^ 11 * v ^ 16 * w ^ 4) - v ^ 11 * w ^ 20) - u ^ 12 * v ^ 4 * w ^ 15) + u ^ 12 * v ^ 8 * w ^ 11 + u ^ 12 * v ^ 11 * w ^ 8) - u ^ 12 * v ^ 15 * w ^ 4) - v ^ 12 * w ^ 19) - v ^ 19 * w ^ 12) - v ^ 20 * w ^ 11) + v ^ 23 * w ^ 8, 0, -(u ^ 4) * v ^ 6 * w ^ 6, ((((((((((-4 * u * v ^ 3 * w ^ 3 + u * v ^ 6 + u * w ^ 6 + 2 * v * w ^ 6 + 9 * u ^ 2 * v ^ 2 * w ^ 3 + 9 * u ^ 2 * v ^ 3 * w ^ 2) - 4 * u ^ 3 * v * w ^ 3) + 6 * u ^ 3 * v ^ 2 * w ^ 2) - 4 * u ^ 3 * v ^ 3 * w) - 2 * u ^ 3 * v ^ 4) - 2 * u ^ 3 * w ^ 4) - 6 * v ^ 3 * w ^ 4) - 2 * u ^ 4 * v ^ 3) - 2 * u ^ 4 * w ^ 3) - 6 * v ^ 4 * w ^ 3) + 2 * v ^ 6 * w + v ^ 7 + w ^ 7, -r * u ^ 7 * v ^ 9 * w ^ 9 * (w ^ 2 + v ^ 2), -r * u ^ 5 * v ^ 7 * w ^ 7 * (((((((-(w ^ 5) - 2 * v ^ 2 * w ^ 3) - 2 * v ^ 3 * w ^ 2) - v ^ 5) + 3 * w ^ 3 * v * u + 3 * w * v ^ 3 * u) - w ^ 3 * u ^ 2) - v ^ 3 * u ^ 2) + 2 * w * v * u ^ 3), -r * u ^ 17 * v ^ 24 * w ^ 24 * (w ^ 2 + v ^ 2), v ^ 2 * w ^ 2 * (((((-(u ^ 6) * v ^ 2 * w ^ 2 - 2 * u ^ 5 * v ^ 2 * w ^ 3) - 2 * u ^ 5 * v ^ 3 * w ^ 2) + u ^ 6 * v ^ 4 + u ^ 6 * w ^ 4 + 2 * u ^ 5 * w ^ 5 + 2 * u ^ 5 * v ^ 5 + w ^ 6 * v ^ 2 * u ^ 2 + w ^ 2 * v ^ 6 * u ^ 2 + w ^ 4 * v ^ 2 * u ^ 4 + w ^ 2 * v ^ 4 * u ^ 4 + 4 * w * v ^ 5 * u ^ 4 + v ^ 6 * u ^ 4 + 2 * w ^ 4 * v ^ 4 * u ^ 2 + 2 * w ^ 3 * v ^ 5 * u ^ 2 + 4 * w ^ 5 * v ^ 2 * u ^ 3 + 4 * w ^ 2 * v ^ 5 * u ^ 3 + 2 * w * v ^ 6 * u ^ 3 + 4 * w ^ 5 * v * u ^ 4) - 2 * w ^ 3 * v ^ 3 * u ^ 4) + 2 * w ^ 5 * v ^ 3 * u ^ 2 + 2 * w ^ 6 * v * u ^ 3 + w ^ 8 * v ^ 2 + 2 * w ^ 7 * v ^ 3 + w ^ 6 * u ^ 4 + w ^ 2 * v ^ 8 + 2 * w ^ 3 * v ^ 7), 0, -r * u ^ 11 * v ^ 16 * w ^ 16, -4 * r * u ^ 5 * v ^ 7 * w ^ 7 * ((-(v ^ 3) + 2 * u * w * v) - w ^ 3), v ^ 2 * w ^ 2 * ((((((w ^ 6 * v ^ 2 * u ^ 2 + w ^ 5 * v ^ 3 * u ^ 2 + w ^ 3 * v ^ 5 * u ^ 2 + w ^ 2 * v ^ 6 * u ^ 2 + w ^ 6 * v * u ^ 3 + w ^ 5 * v ^ 2 * u ^ 3 + w ^ 2 * v ^ 5 * u ^ 3 + w * v ^ 6 * u ^ 3 + w ^ 6 * u ^ 4 + w ^ 5 * v * u ^ 4) - w ^ 3 * v ^ 3 * u ^ 4) + w * v ^ 5 * u ^ 4 + v ^ 6 * u ^ 4 + w ^ 8 * v ^ 2 + u ^ 5 * w ^ 5) - u ^ 5 * v ^ 2 * w ^ 3) - u ^ 5 * v ^ 3 * w ^ 2) + u ^ 5 * v ^ 5 + w ^ 7 * v ^ 3 + w ^ 3 * v ^ 7 + w ^ 2 * v ^ 8), -r * u ^ 25 * v ^ 37 * w ^ 37 * (((((((-(w ^ 4) - 2 * v * w ^ 3) - 2 * v ^ 3 * w) - v ^ 4) - w ^ 3 * u) + 3 * w ^ 2 * v * u + 3 * w * v ^ 2 * u) - v ^ 3 * u) + 2 * w * v * u ^ 2), -r * u ^ 26 * v ^ 38 * w ^ 38 * (v + w), (((((((((((9 * u ^ 2 * v ^ 2 * w ^ 4 - 4 * u ^ 2 * v ^ 3 * w ^ 3) + 9 * u ^ 2 * v ^ 4 * w ^ 2 + u ^ 2 * v ^ 6 + u ^ 2 * w ^ 6 + 2 * v ^ 2 * w ^ 6) - 4 * u ^ 3 * v ^ 2 * w ^ 3) - 4 * u ^ 3 * v ^ 3 * w ^ 2) - 2 * u ^ 3 * v ^ 5) - 2 * u ^ 3 * w ^ 5) - 6 * v ^ 3 * w ^ 5) + 6 * u ^ 4 * v ^ 2 * w ^ 2) - 2 * u ^ 5 * v ^ 3) - 2 * u ^ 5 * w ^ 3) - 6 * v ^ 5 * w ^ 3) + 2 * v ^ 6 * w ^ 2 + v ^ 8 + w ^ 8, 24 * r * u ^ 25 * v ^ 37 * w ^ 38 + 24 * r * u ^ 25 * v ^ 38 * w ^ 37 + 16 * r * u ^ 26 * v ^ 37 * w ^ 37, ((((r * u ^ 5 * v ^ 7 * w ^ 11 + 2 * r * u ^ 5 * v ^ 8 * w ^ 10 + 2 * r * u ^ 5 * v ^ 10 * w ^ 8 + r * u ^ 5 * v ^ 11 * w ^ 7 + r * u ^ 6 * v ^ 7 * w ^ 10) - 3 * r * u ^ 6 * v ^ 8 * w ^ 9) - 3 * r * u ^ 6 * v ^ 9 * w ^ 8) + r * u ^ 6 * v ^ 10 * w ^ 7) - 2 * r * u ^ 7 * v ^ 8 * w ^ 8, -(u ^ 21) * v ^ 31 * w ^ 32 - u ^ 21 * v ^ 32 * w ^ 31, 0, ((((r * u ^ 25 * v ^ 37 * w ^ 42 + 2 * r * u ^ 25 * v ^ 39 * w ^ 40 + 2 * r * u ^ 25 * v ^ 40 * w ^ 39 + r * u ^ 25 * v ^ 42 * w ^ 37) - 3 * r * u ^ 26 * v ^ 38 * w ^ 40) - 3 * r * u ^ 26 * v ^ 40 * w ^ 38) + r * u ^ 27 * v ^ 37 * w ^ 40 + r * u ^ 27 * v ^ 40 * w ^ 37) - 2 * r * u ^ 28 * v ^ 38 * w ^ 38, 8 * r * u ^ 5 * v ^ 7 * w ^ 11 + 20 * r * u ^ 5 * v ^ 9 * w ^ 9 + 8 * r * u ^ 5 * v ^ 11 * w ^ 7 + 12 * r * u ^ 7 * v ^ 7 * w ^ 9 + 12 * r * u ^ 7 * v ^ 9 * w ^ 7 + 4 * r * u ^ 9 * v ^ 7 * w ^ 7, 24 * r * u ^ 5 * v ^ 7 * w ^ 9 + 24 * r * u ^ 5 * v ^ 9 * w ^ 7 + 16 * r * u ^ 7 * v ^ 7 * w ^ 7, -r * u ^ 16 * v ^ 23 * w ^ 24 - r * u ^ 16 * v ^ 24 * w ^ 23, 8 * r * u ^ 25 * v ^ 37 * w ^ 40 + 10 * r * u ^ 25 * v ^ 38 * w ^ 39 + 10 * r * u ^ 25 * v ^ 39 * w ^ 38 + 8 * r * u ^ 25 * v ^ 40 * w ^ 37 + 6 * r * u ^ 26 * v ^ 37 * w ^ 39 + 6 * r * u ^ 26 * v ^ 39 * w ^ 37 + 6 * r * u ^ 27 * v ^ 37 * w ^ 38 + 6 * r * u ^ 27 * v ^ 38 * w ^ 37 + 4 * r * u ^ 28 * v ^ 37 * w ^ 37, (((((3 * u ^ 2 * v ^ 4 * w ^ 7 + 2 * u ^ 2 * v ^ 5 * w ^ 6 + 2 * u ^ 2 * v ^ 6 * w ^ 5 + 3 * u ^ 2 * v ^ 7 * w ^ 4 + 4 * u ^ 3 * v ^ 3 * w ^ 7 + 3 * u ^ 3 * v ^ 4 * w ^ 6 + 3 * u ^ 3 * v ^ 6 * w ^ 4 + 4 * u ^ 3 * v ^ 7 * w ^ 3 + 3 * u ^ 4 * v ^ 2 * w ^ 7 + 3 * u ^ 4 * v ^ 3 * w ^ 6) - 3 * u ^ 4 * v ^ 4 * w ^ 5) - 3 * u ^ 4 * v ^ 5 * w ^ 4) + 3 * u ^ 4 * v ^ 6 * w ^ 3 + 3 * u ^ 4 * v ^ 7 * w ^ 2 + 2 * v ^ 4 * w ^ 9 + 2 * u ^ 5 * v ^ 2 * w ^ 6) - 3 * u ^ 5 * v ^ 4 * w ^ 4) + 2 * u ^ 5 * v ^ 6 * w ^ 2 + v ^ 5 * w ^ 8 + v ^ 8 * w ^ 5 + 2 * v ^ 9 * w ^ 4, 0, -(u ^ 22) * v ^ 32 * w ^ 34 - u ^ 22 * v ^ 34 * w ^ 32, 0, 8 * r * u ^ 5 * v ^ 7 * w ^ 10 + 10 * r * u ^ 5 * v ^ 8 * w ^ 9 + 10 * r * u ^ 5 * v ^ 9 * w ^ 8 + 8 * r * u ^ 5 * v ^ 10 * w ^ 7 + 6 * r * u ^ 6 * v ^ 7 * w ^ 9 + 6 * r * u ^ 6 * v ^ 9 * w ^ 7 + 6 * r * u ^ 7 * v ^ 7 * w ^ 8 + 6 * r * u ^ 7 * v ^ 8 * w ^ 7 + 4 * r * u ^ 8 * v ^ 7 * w ^ 7, 0, ((((u ^ 10 * v ^ 15 * w ^ 19 + 2 * u ^ 10 * v ^ 16 * w ^ 18 + 2 * u ^ 10 * v ^ 18 * w ^ 16 + u ^ 10 * v ^ 19 * w ^ 15 + u ^ 11 * v ^ 15 * w ^ 18) - 3 * u ^ 11 * v ^ 16 * w ^ 17) - 3 * u ^ 11 * v ^ 17 * w ^ 16) + u ^ 11 * v ^ 18 * w ^ 15) - 2 * u ^ 12 * v ^ 16 * w ^ 16, -(u ^ 11) * v ^ 16 * w ^ 17 - u ^ 11 * v ^ 17 * w ^ 16, ((6 * u ^ 2 * v ^ 4 * w ^ 6 + 6 * u ^ 2 * v ^ 6 * w ^ 4 + 8 * u ^ 3 * v ^ 3 * w ^ 6 + 8 * u ^ 3 * v ^ 6 * w ^ 3 + 6 * u ^ 4 * v ^ 2 * w ^ 6) - 9 * u ^ 4 * v ^ 4 * w ^ 4) + 6 * u ^ 4 * v ^ 6 * w ^ 2 + 3 * v ^ 4 * w ^ 8 + 3 * v ^ 8 * w ^ 4, ((((((((((((r * u ^ 5 * v ^ 7 * w ^ 14 + 2 * r * u ^ 5 * v ^ 8 * w ^ 13) - 6 * r * u ^ 5 * v ^ 10 * w ^ 11) - 6 * r * u ^ 5 * v ^ 11 * w ^ 10) + 2 * r * u ^ 5 * v ^ 13 * w ^ 8 + r * u ^ 5 * v ^ 14 * w ^ 7 + r * u ^ 6 * v ^ 7 * w ^ 13) - 4 * r * u ^ 6 * v ^ 10 * w ^ 10) + r * u ^ 6 * v ^ 13 * w ^ 7 + 9 * r * u ^ 7 * v ^ 9 * w ^ 10 + 9 * r * u ^ 7 * v ^ 10 * w ^ 9) - 2 * r * u ^ 8 * v ^ 7 * w ^ 11) - 4 * r * u ^ 8 * v ^ 8 * w ^ 10) + 6 * r * u ^ 8 * v ^ 9 * w ^ 9) - 4 * r * u ^ 8 * v ^ 10 * w ^ 8) - 2 * r * u ^ 8 * v ^ 11 * w ^ 7) - 2 * r * u ^ 9 * v ^ 7 * w ^ 10) - 2 * r * u ^ 9 * v ^ 10 * w ^ 7, -(u ^ 6) * v ^ 9 * w ^ 9, (((((((((((((((((((u ^ 10 * v ^ 15 * w ^ 23 + 2 * u ^ 10 * v ^ 16 * w ^ 22) - 3 * u ^ 10 * v ^ 18 * w ^ 20) - 6 * u ^ 10 * v ^ 19 * w ^ 19) - 3 * u ^ 10 * v ^ 20 * w ^ 18) + 2 * u ^ 10 * v ^ 22 * w ^ 16 + u ^ 10 * v ^ 23 * w ^ 15 + u ^ 11 * v ^ 15 * w ^ 22) - 2 * u ^ 11 * v ^ 18 * w ^ 19) - 2 * u ^ 11 * v ^ 19 * w ^ 18) + u ^ 11 * v ^ 22 * w ^ 15 + 3 * u ^ 12 * v ^ 17 * w ^ 19 + 6 * u ^ 12 * v ^ 18 * w ^ 18 + 3 * u ^ 12 * v ^ 19 * w ^ 17) - u ^ 13 * v ^ 15 * w ^ 20) - 2 * u ^ 13 * v ^ 16 * w ^ 19) + 5 * u ^ 13 * v ^ 17 * w ^ 18 + 5 * u ^ 13 * v ^ 18 * w ^ 17) - 2 * u ^ 13 * v ^ 19 * w ^ 16) - u ^ 13 * v ^ 20 * w ^ 15) - 2 * u ^ 14 * v ^ 15 * w ^ 19) - 2 * u ^ 14 * v ^ 16 * w ^ 18) + 2 * u ^ 14 * v ^ 17 * w ^ 17) - 2 * u ^ 14 * v ^ 18 * w ^ 16) - 2 * u ^ 14 * v ^ 19 * w ^ 15) - u ^ 15 * v ^ 15 * w ^ 18) - u ^ 15 * v ^ 18 * w ^ 15, ((6 * u ^ 4 * v ^ 8 * w ^ 12 + 6 * u ^ 4 * v ^ 12 * w ^ 8 + 8 * u ^ 6 * v ^ 6 * w ^ 12 + 8 * u ^ 6 * v ^ 12 * w ^ 6 + 6 * u ^ 8 * v ^ 4 * w ^ 12) - 9 * u ^ 8 * v ^ 8 * w ^ 8) + 6 * u ^ 8 * v ^ 12 * w ^ 4 + 3 * v ^ 8 * w ^ 16 + 3 * v ^ 16 * w ^ 8, 8 * r * u ^ 15 * v ^ 22 * w ^ 25 + 10 * r * u ^ 15 * v ^ 23 * w ^ 24 + 10 * r * u ^ 15 * v ^ 24 * w ^ 23 + 8 * r * u ^ 15 * v ^ 25 * w ^ 22 + 6 * r * u ^ 16 * v ^ 22 * w ^ 24 + 6 * r * u ^ 16 * v ^ 24 * w ^ 22 + 6 * r * u ^ 17 * v ^ 22 * w ^ 23 + 6 * r * u ^ 17 * v ^ 23 * w ^ 22 + 4 * r * u ^ 18 * v ^ 22 * w ^ 22, r * u ^ 5 * v ^ 7 * w ^ 11 + 3 * r * u ^ 5 * v ^ 8 * w ^ 10 + 4 * r * u ^ 5 * v ^ 9 * w ^ 9 + 3 * r * u ^ 5 * v ^ 10 * w ^ 8 + r * u ^ 5 * v ^ 11 * w ^ 7 + r * u ^ 6 * v ^ 7 * w ^ 10 + 2 * r * u ^ 6 * v ^ 8 * w ^ 9 + 2 * r * u ^ 6 * v ^ 9 * w ^ 8 + r * u ^ 6 * v ^ 10 * w ^ 7 + r * u ^ 7 * v ^ 7 * w ^ 9 + 2 * r * u ^ 7 * v ^ 8 * w ^ 8 + r * u ^ 7 * v ^ 9 * w ^ 7 + r * u ^ 8 * v ^ 7 * w ^ 8 + r * u ^ 8 * v ^ 8 * w ^ 7, -(u ^ 12) * v ^ 17 * w ^ 19 - u ^ 12 * v ^ 19 * w ^ 17, ((((((((((((r * u ^ 5 * v ^ 7 * w ^ 15 + 2 * r * u ^ 5 * v ^ 9 * w ^ 13) - 6 * r * u ^ 5 * v ^ 10 * w ^ 12) - 6 * r * u ^ 5 * v ^ 12 * w ^ 10) + 2 * r * u ^ 5 * v ^ 13 * w ^ 9 + r * u ^ 5 * v ^ 15 * w ^ 7 + r * u ^ 7 * v ^ 7 * w ^ 13 + 9 * r * u ^ 7 * v ^ 9 * w ^ 11) - 4 * r * u ^ 7 * v ^ 10 * w ^ 10) + 9 * r * u ^ 7 * v ^ 11 * w ^ 9 + r * u ^ 7 * v ^ 13 * w ^ 7) - 2 * r * u ^ 8 * v ^ 7 * w ^ 12) - 4 * r * u ^ 8 * v ^ 9 * w ^ 10) - 4 * r * u ^ 8 * v ^ 10 * w ^ 9) - 2 * r * u ^ 8 * v ^ 12 * w ^ 7) + 6 * r * u ^ 9 * v ^ 9 * w ^ 9) - 2 * r * u ^ 10 * v ^ 7 * w ^ 10) - 2 * r * u ^ 10 * v ^ 10 * w ^ 7, ((((r * u ^ 15 * v ^ 22 * w ^ 26 + 2 * r * u ^ 15 * v ^ 23 * w ^ 25 + 2 * r * u ^ 15 * v ^ 25 * w ^ 23 + r * u ^ 15 * v ^ 26 * w ^ 22 + r * u ^ 16 * v ^ 22 * w ^ 25) - 3 * r * u ^ 16 * v ^ 23 * w ^ 24) - 3 * r * u ^ 16 * v ^ 24 * w ^ 23) + r * u ^ 16 * v ^ 25 * w ^ 22) - 2 * r * u ^ 17 * v ^ 23 * w ^ 23, (4 * u ^ 10 * v ^ 15 * w ^ 18 + 4 * u ^ 10 * v ^ 18 * w ^ 15) - 8 * u ^ 11 * v ^ 16 * w ^ 16, ((((u ^ 20 * v ^ 30 * w ^ 35 + 2 * u ^ 20 * v ^ 32 * w ^ 33 + 2 * u ^ 20 * v ^ 33 * w ^ 32 + u ^ 20 * v ^ 35 * w ^ 30) - 3 * u ^ 21 * v ^ 31 * w ^ 33) - 3 * u ^ 21 * v ^ 33 * w ^ 31) + u ^ 22 * v ^ 30 * w ^ 33 + u ^ 22 * v ^ 33 * w ^ 30) - 2 * u ^ 23 * v ^ 31 * w ^ 31, (4 * u ^ 20 * v ^ 30 * w ^ 33 + 4 * u ^ 20 * v ^ 33 * w ^ 30) - 8 * u ^ 21 * v ^ 31 * w ^ 31, ((((r * u ^ 15 * v ^ 22 * w ^ 27 + 2 * r * u ^ 15 * v ^ 24 * w ^ 25 + 2 * r * u ^ 15 * v ^ 25 * w ^ 24 + r * u ^ 15 * v ^ 27 * w ^ 22) - 3 * r * u ^ 16 * v ^ 23 * w ^ 25) - 3 * r * u ^ 16 * v ^ 25 * w ^ 23) + r * u ^ 17 * v ^ 22 * w ^ 25 + r * u ^ 17 * v ^ 25 * w ^ 22) - 2 * r * u ^ 18 * v ^ 23 * w ^ 23, (-r * u ^ 5 * v ^ 9 * w ^ 11 - r * u ^ 5 * v ^ 11 * w ^ 9) + 2 * r * u ^ 6 * v ^ 9 * w ^ 10 + 2 * r * u ^ 6 * v ^ 10 * w ^ 9 + 2 * r * u ^ 7 * v ^ 8 * w ^ 10 + 3 * r * u ^ 7 * v ^ 9 * w ^ 9 + 2 * r * u ^ 7 * v ^ 10 * w ^ 8, ((((((((((((u ^ 10 * v ^ 15 * w ^ 22 + 2 * u ^ 10 * v ^ 16 * w ^ 21) - 6 * u ^ 10 * v ^ 18 * w ^ 19) - 6 * u ^ 10 * v ^ 19 * w ^ 18) + 2 * u ^ 10 * v ^ 21 * w ^ 16 + u ^ 10 * v ^ 22 * w ^ 15 + u ^ 11 * v ^ 15 * w ^ 21) - 4 * u ^ 11 * v ^ 18 * w ^ 18) + u ^ 11 * v ^ 21 * w ^ 15 + 9 * u ^ 12 * v ^ 17 * w ^ 18 + 9 * u ^ 12 * v ^ 18 * w ^ 17) - 2 * u ^ 13 * v ^ 15 * w ^ 19) - 4 * u ^ 13 * v ^ 16 * w ^ 18) + 6 * u ^ 13 * v ^ 17 * w ^ 17) - 4 * u ^ 13 * v ^ 18 * w ^ 16) - 2 * u ^ 13 * v ^ 19 * w ^ 15) - 2 * u ^ 14 * v ^ 15 * w ^ 18) - 2 * u ^ 14 * v ^ 18 * w ^ 15, (((4 * r * u ^ 5 * v ^ 7 * w ^ 13 - 16 * r * u ^ 5 * v ^ 10 * w ^ 10) + 4 * r * u ^ 5 * v ^ 13 * w ^ 7 + 24 * r * u ^ 7 * v ^ 9 * w ^ 9) - 8 * r * u ^ 8 * v ^ 7 * w ^ 10) - 8 * r * u ^ 8 * v ^ 10 * w ^ 7, r * u ^ 5 * v ^ 7 * w ^ 10 + 5 * r * u ^ 5 * v ^ 8 * w ^ 9 + 5 * r * u ^ 5 * v ^ 9 * w ^ 8 + r * u ^ 5 * v ^ 10 * w ^ 7 + 2 * r * u ^ 6 * v ^ 7 * w ^ 9 + 6 * r * u ^ 6 * v ^ 8 * w ^ 8 + 2 * r * u ^ 6 * v ^ 9 * w ^ 7 + r * u ^ 7 * v ^ 7 * w ^ 8 + r * u ^ 7 * v ^ 8 * w ^ 7, 4 * u ^ 10 * v ^ 15 * w ^ 17 + 8 * u ^ 10 * v ^ 16 * w ^ 16 + 4 * u ^ 10 * v ^ 17 * w ^ 15 + 4 * u ^ 11 * v ^ 15 * w ^ 16 + 4 * u ^ 11 * v ^ 16 * w ^ 15, 0, 24 * u ^ 20 * v ^ 30 * w ^ 32 + 24 * u ^ 20 * v ^ 32 * w ^ 30 + 16 * u ^ 22 * v ^ 30 * w ^ 30, 4 * r * u ^ 5 * v ^ 7 * w ^ 9 + 8 * r * u ^ 5 * v ^ 8 * w ^ 8 + 4 * r * u ^ 5 * v ^ 9 * w ^ 7 + 4 * r * u ^ 6 * v ^ 7 * w ^ 8 + 4 * r * u ^ 6 * v ^ 8 * w ^ 7, (((4 * u ^ 10 * v ^ 15 * w ^ 21 - 16 * u ^ 10 * v ^ 18 * w ^ 18) + 4 * u ^ 10 * v ^ 21 * w ^ 15 + 24 * u ^ 12 * v ^ 17 * w ^ 17) - 8 * u ^ 13 * v ^ 15 * w ^ 18) - 8 * u ^ 13 * v ^ 18 * w ^ 15, 8 * r * u ^ 5 * v ^ 7 * w ^ 9 + 20 * r * u ^ 5 * v ^ 8 * w ^ 8 + 8 * r * u ^ 5 * v ^ 9 * w ^ 7 + 12 * r * u ^ 6 * v ^ 7 * w ^ 8 + 12 * r * u ^ 6 * v ^ 8 * w ^ 7 + 4 * r * u ^ 7 * v ^ 7 * w ^ 7, u ^ 10 * v ^ 15 * w ^ 18 + 5 * u ^ 10 * v ^ 16 * w ^ 17 + 5 * u ^ 10 * v ^ 17 * w ^ 16 + u ^ 10 * v ^ 18 * w ^ 15 + 2 * u ^ 11 * v ^ 15 * w ^ 17 + 6 * u ^ 11 * v ^ 16 * w ^ 16 + 2 * u ^ 11 * v ^ 17 * w ^ 15 + u ^ 12 * v ^ 15 * w ^ 16 + u ^ 12 * v ^ 16 * w ^ 15, (4 * r * u ^ 15 * v ^ 22 * w ^ 25 + 4 * r * u ^ 15 * v ^ 25 * w ^ 22) - 8 * r * u ^ 16 * v ^ 23 * w ^ 23, 24 * r * u ^ 25 * v ^ 37 * w ^ 39 + 24 * r * u ^ 25 * v ^ 39 * w ^ 37 + 16 * r * u ^ 27 * v ^ 37 * w ^ 37, 8 * u ^ 10 * v ^ 15 * w ^ 17 + 20 * u ^ 10 * v ^ 16 * w ^ 16 + 8 * u ^ 10 * v ^ 17 * w ^ 15 + 12 * u ^ 11 * v ^ 15 * w ^ 16 + 12 * u ^ 11 * v ^ 16 * w ^ 15 + 4 * u ^ 12 * v ^ 15 * w ^ 15, 24 * r * u ^ 5 * v ^ 7 * w ^ 8 + 24 * r * u ^ 5 * v ^ 8 * w ^ 7 + 16 * r * u ^ 6 * v ^ 7 * w ^ 7, 64 * r * u ^ 5 * v ^ 7 * w ^ 7, 8 * r * u ^ 15 * v ^ 22 * w ^ 24 + 20 * r * u ^ 15 * v ^ 23 * w ^ 23 + 8 * r * u ^ 15 * v ^ 24 * w ^ 22 + 12 * r * u ^ 16 * v ^ 22 * w ^ 23 + 12 * r * u ^ 16 * v ^ 23 * w ^ 22 + 4 * r * u ^ 17 * v ^ 22 * w ^ 22, 24 * r * u ^ 15 * v ^ 22 * w ^ 24 + 24 * r * u ^ 15 * v ^ 24 * w ^ 22 + 16 * r * u ^ 17 * v ^ 22 * w ^ 22, 24 * u ^ 10 * v ^ 15 * w ^ 16 + 24 * u ^ 10 * v ^ 16 * w ^ 15 + 16 * u ^ 11 * v ^ 15 * w ^ 15, 24 * r * u ^ 15 * v ^ 22 * w ^ 23 + 24 * r * u ^ 15 * v ^ 23 * w ^ 22 + 16 * r * u ^ 16 * v ^ 22 * w ^ 22, 64 * r * u ^ 25 * v ^ 37 * w ^ 37, 64 * r * u ^ 15 * v ^ 22 * w ^ 22, 64 * u ^ 10 * v ^ 15 * w ^ 15, 64 * u ^ 20 * v ^ 30 * w ^ 30]
            end
        f81(u, v, w, r) = begin
                return [81, 27u + 27v + 27w, 3 * (v + u + w) ^ 2, 9 * (v + u + w) ^ 2, 27 * u ^ 2 + 27 * v ^ 2 + 27 * w ^ 2, -12 * w * v * u + 3 * u ^ 3 + 3 * v ^ 3 + 3 * w ^ 3, (v + u + w) ^ 3, 0, 9 * (v + u + w) * (w ^ 2 + v ^ 2 + u ^ 2), -u * w * v * (v + u + w), w ^ 2 * v ^ 2 * u ^ 2 * (((((((((((((((((((((((((((((((u ^ 7 * w ^ 3 * v ^ 3 - u ^ 8 * w ^ 4 * v) - u ^ 8 * w * v ^ 4) + v ^ 3 * u ^ 3 * w ^ 7 + 2 * v ^ 4 * u ^ 3 * w ^ 6 + 2 * v ^ 3 * u ^ 4 * w ^ 6) - u ^ 6 * w ^ 7) - u ^ 7 * w ^ 6) - v ^ 6 * w ^ 7) - v ^ 7 * w ^ 6) - u ^ 7 * v ^ 6) - u ^ 8 * w ^ 5) - u ^ 8 * v ^ 5) - u ^ 7 * w ^ 5 * v) - u ^ 7 * w * v ^ 5) - w ^ 5 * v ^ 8) + w ^ 11 * u ^ 2 + w ^ 11 * v ^ 2) - w ^ 8 * v ^ 5) + w ^ 2 * v ^ 11) - w ^ 8 * u ^ 5) + w ^ 2 * u ^ 11) - w ^ 4 * u * v ^ 8) - w ^ 5 * u * v ^ 7) + w ^ 11 * v * u) - w ^ 8 * v ^ 4 * u) - w ^ 7 * v ^ 5 * u) + w * v ^ 11 * u + v ^ 11 * u ^ 2) - w ^ 8 * v * u ^ 4) - w * v ^ 8 * u ^ 4) - w ^ 7 * v * u ^ 5) - w * v ^ 7 * u ^ 5) - v ^ 8 * u ^ 5) - v ^ 7 * u ^ 6) + w * v * u ^ 11 + v ^ 2 * u ^ 11 + 2 * u ^ 6 * v ^ 4 * w ^ 3 + 2 * u ^ 6 * v ^ 3 * w ^ 4 + u ^ 7 * v ^ 2 * w ^ 4 + 2 * u ^ 6 * v ^ 5 * w ^ 2 + u ^ 7 * v ^ 4 * w ^ 2 + u ^ 4 * v ^ 7 * w ^ 2 + 2 * u ^ 4 * v ^ 6 * w ^ 3 + 2 * u ^ 5 * v ^ 2 * w ^ 6 + 2 * u ^ 6 * v ^ 2 * w ^ 5 + 2 * u ^ 5 * v ^ 6 * w ^ 2 + 2 * u ^ 2 * v ^ 6 * w ^ 5 + u ^ 2 * v ^ 7 * w ^ 4 + 2 * u ^ 3 * v ^ 6 * w ^ 4 + u ^ 3 * v ^ 7 * w ^ 3 + u ^ 4 * v ^ 2 * w ^ 7 + u ^ 2 * v ^ 4 * w ^ 7 + 2 * u ^ 2 * v ^ 5 * w ^ 6), (w ^ 2 + v ^ 2 + u ^ 2) * (v + u + w) ^ 2, r * u * v * w, 9 * (w ^ 2 + v ^ 2 + u ^ 2) ^ 2, (((((((12 * w ^ 3 * v ^ 2 * u ^ 2 + 12 * w ^ 2 * v ^ 3 * u ^ 2 + 12 * w ^ 2 * v ^ 2 * u ^ 3) - 6 * v ^ 4 * u ^ 3) - 6 * w ^ 4 * u ^ 3) - 6 * w ^ 4 * v ^ 3) - 6 * u ^ 4 * v ^ 3) - 6 * u ^ 4 * w ^ 3) - 6 * w ^ 3 * v ^ 4) + 3 * u ^ 7 + 3 * v ^ 7 + 3 * w ^ 7, (v + u + w) * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), (v + u + w) * (((((((((v ^ 4 - 2 * v ^ 3 * u) - 2 * w * v ^ 3) + 4 * u ^ 2 * v ^ 2 + 4 * w ^ 2 * v ^ 2) - 2 * v * u ^ 3) - 2 * w ^ 3 * v) + u ^ 4 + 4 * u ^ 2 * w ^ 2) - 2 * w ^ 3 * u) + w ^ 4) - 2 * w * u ^ 3), r ^ 2 * u ^ 2 * v ^ 2 * w ^ 2, -(w ^ 2) * v ^ 2 * u ^ 2 * (w ^ 2 + v ^ 2 + u ^ 2), -(r ^ 2) * u * v * w, u ^ 4 * v ^ 4 * w ^ 4 * ((((((w ^ 10 * v ^ 4 + v ^ 5 * w ^ 9 + w ^ 5 * v ^ 9 + w ^ 4 * v ^ 10 + v ^ 2 * u ^ 2 * w ^ 10 + v ^ 3 * u ^ 2 * w ^ 9 + w ^ 3 * u ^ 2 * v ^ 9 + w ^ 2 * v ^ 10 * u ^ 2 + v ^ 2 * u ^ 3 * w ^ 9 + w ^ 2 * u ^ 3 * v ^ 9 + w ^ 10 * u ^ 4) - u ^ 4 * v ^ 5 * w ^ 5) + v ^ 10 * u ^ 4 + u ^ 5 * w ^ 9) - u ^ 5 * v ^ 4 * w ^ 5) - u ^ 5 * v ^ 5 * w ^ 4) + v ^ 9 * u ^ 5 + w ^ 5 * u ^ 9 + w ^ 3 * u ^ 9 * v ^ 2 + w ^ 2 * u ^ 9 * v ^ 3 + v ^ 5 * u ^ 9 + w ^ 4 * u ^ 10 + w ^ 2 * v ^ 2 * u ^ 10 + v ^ 4 * u ^ 10), (w ^ 2 + v ^ 2 + u ^ 2) * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), -(r ^ 2) * u ^ 7 * v ^ 7 * w ^ 7 * (v + u + w), 0, -r * u ^ 35 * v ^ 35 * w ^ 35 * (w ^ 2 + v ^ 2 + u ^ 2), w ^ 2 * v ^ 2 * u ^ 2 * ((((((((((((((((3 * u ^ 6 * v ^ 2 * w ^ 4 + 3 * u ^ 6 * v ^ 3 * w ^ 3 + 3 * u ^ 6 * v ^ 4 * w ^ 2 + 3 * u ^ 2 * v ^ 4 * w ^ 6 + 3 * u ^ 2 * v ^ 6 * w ^ 4 + 3 * u ^ 3 * v ^ 3 * w ^ 6 + 3 * u ^ 3 * v ^ 6 * w ^ 3 + 3 * u ^ 4 * v ^ 2 * w ^ 6 + 3 * u ^ 4 * v ^ 6 * w ^ 2) - 2 * w ^ 7 * u ^ 5) - 2 * v ^ 7 * u ^ 5) - 2 * u ^ 7 * w ^ 4 * v) - 2 * u ^ 7 * w * v ^ 4) - 2 * u ^ 7 * w ^ 5) - 2 * u ^ 7 * v ^ 5) + v ^ 2 * w ^ 10 + w ^ 2 * v ^ 10 + u ^ 2 * w ^ 10 + w ^ 2 * u ^ 10 + v ^ 10 * u ^ 2 + v ^ 2 * u ^ 10 + w ^ 10 * v * u + w * v ^ 10 * u) - 2 * w ^ 7 * v * u ^ 4) + w * v * u ^ 10) - 2 * w * u ^ 4 * v ^ 7) - 2 * v ^ 5 * w ^ 7) - 2 * v ^ 7 * w ^ 5) + 2 * u ^ 5 * v ^ 2 * w ^ 5 + 2 * u ^ 2 * v ^ 5 * w ^ 5 + 2 * u ^ 5 * v ^ 5 * w ^ 2) - 2 * u * v ^ 7 * w ^ 4) - 2 * u * v ^ 4 * w ^ 7), 2 * w * v * u * (v + u + w) * (u * v + w * v + u * w), u ^ 4 * v ^ 4 * w ^ 4, (w ^ 2 + v ^ 2 + u ^ 2) * (((((((((v ^ 4 - 2 * v ^ 3 * u) - 2 * w * v ^ 3) + 4 * u ^ 2 * v ^ 2 + 4 * w ^ 2 * v ^ 2) - 2 * v * u ^ 3) - 2 * w ^ 3 * v) + u ^ 4 + 4 * u ^ 2 * w ^ 2) - 2 * w ^ 3 * u) + w ^ 4) - 2 * w * u ^ 3), 0, (((36 * w ^ 2 * v ^ 2 * u ^ 2 - 12 * u ^ 3 * v ^ 3) - 12 * u ^ 3 * w ^ 3) - 12 * w ^ 3 * v ^ 3) + 3 * u ^ 6 + 3 * v ^ 6 + 3 * w ^ 6, 3 * r * u ^ 33 * v ^ 33 * w ^ 33 * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), u ^ 4 * v ^ 4 * w ^ 4 * (((((((((((((((((((((((((-(v ^ 12) * w ^ 7 + u ^ 3 * v ^ 6 * w ^ 10 + u ^ 3 * v ^ 10 * w ^ 6) - v ^ 7 * w ^ 12) + v ^ 2 * u ^ 2 * w ^ 15 + u ^ 2 * v ^ 7 * w ^ 10 + u ^ 8 * v ^ 7 * w ^ 4 + u ^ 8 * v ^ 4 * w ^ 7 + u ^ 7 * v ^ 4 * w ^ 8 + u ^ 7 * v ^ 8 * w ^ 4 + u ^ 2 * v ^ 10 * w ^ 7 + u ^ 4 * v ^ 7 * w ^ 8 + u ^ 4 * v ^ 8 * w ^ 7 + u ^ 6 * v ^ 3 * w ^ 10 + u ^ 6 * v ^ 10 * w ^ 3 + u ^ 7 * v ^ 2 * w ^ 10 + u ^ 7 * v ^ 10 * w ^ 2 + u ^ 10 * v ^ 2 * w ^ 7 + u ^ 10 * v ^ 3 * w ^ 6 + u ^ 10 * v ^ 6 * w ^ 3 + u ^ 10 * v ^ 7 * w ^ 2) - u ^ 12 * w ^ 7) - u ^ 12 * v ^ 7) - u ^ 12 * v ^ 2 * w ^ 5) - u ^ 12 * v ^ 5 * w ^ 2) - w ^ 12 * v ^ 5 * u ^ 2) - w ^ 5 * v ^ 12 * u ^ 2) + w ^ 2 * v ^ 15 * u ^ 2 + w ^ 11 * v ^ 4 * u ^ 4 + w ^ 10 * v ^ 5 * u ^ 4 + w ^ 5 * v ^ 10 * u ^ 4 + w ^ 4 * v ^ 11 * u ^ 4 + v ^ 15 * u ^ 4) - w ^ 12 * v ^ 2 * u ^ 5) + w ^ 10 * v ^ 4 * u ^ 5 + w ^ 4 * v ^ 10 * u ^ 5) - w ^ 2 * v ^ 12 * u ^ 5) - v ^ 12 * u ^ 7) - v ^ 11 * u ^ 8) + w ^ 5 * v ^ 4 * u ^ 10 + w ^ 4 * v ^ 5 * u ^ 10 + w ^ 4 * v ^ 4 * u ^ 11) - v ^ 8 * u ^ 11) + w ^ 2 * v ^ 2 * u ^ 15 + v ^ 4 * u ^ 15 + w ^ 15 * u ^ 4) - w ^ 12 * u ^ 7) - w ^ 11 * u ^ 8) - w ^ 8 * u ^ 11) + w ^ 4 * u ^ 15 + w ^ 15 * v ^ 4) - w ^ 11 * v ^ 8) - w ^ 8 * v ^ 11) + w ^ 4 * v ^ 15), -r * u ^ 8 * v ^ 8 * w ^ 8, r * u ^ 5 * v ^ 5 * w ^ 5, (v + u + w) * (((((v ^ 6 - 4 * w ^ 3 * v ^ 3) - 4 * u ^ 3 * v ^ 3) + 12 * w ^ 2 * v ^ 2 * u ^ 2) - 4 * u ^ 3 * w ^ 3) + w ^ 6 + u ^ 6), -(r ^ 2) * u ^ 8 * v ^ 8 * w ^ 8 * (w ^ 2 + v ^ 2 + u ^ 2), r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (w ^ 2 + v ^ 2 + u ^ 2) * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), -(u ^ 22) * v ^ 22 * w ^ 22 * (w ^ 2 + v ^ 2 + u ^ 2), w ^ 2 * v ^ 2 * u ^ 2 * (v + u + w) * ((((((v ^ 5 * u ^ 2 + w ^ 2 * v ^ 5 + 2 * w * v ^ 5 * u + w ^ 3 * v ^ 4 + w ^ 2 * v ^ 4 * u + w * v ^ 4 * u ^ 2 + v ^ 4 * u ^ 3 + u ^ 4 * v ^ 3 + w ^ 4 * v ^ 3) - 2 * w ^ 3 * v ^ 3 * u) - 2 * w * v ^ 3 * u ^ 3) + u ^ 5 * v ^ 2 + u ^ 4 * w * v ^ 2 + w ^ 4 * v ^ 2 * u + v ^ 2 * w ^ 5) - 2 * w ^ 3 * v * u ^ 3) + w ^ 4 * v * u ^ 2 + u ^ 4 * w ^ 2 * v + 2 * u ^ 5 * w * v + 2 * w ^ 5 * v * u + u ^ 5 * w ^ 2 + w ^ 5 * u ^ 2 + u ^ 4 * w ^ 3 + w ^ 4 * u ^ 3), r * u ^ 3 * v ^ 3 * w ^ 3 * f * (u + v + w), r ^ 2 * u ^ 14 * v ^ 14 * w ^ 14, 3 * r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), w ^ 2 * v ^ 2 * u ^ 2 * ((((((v ^ 2 * w ^ 6 + w ^ 5 * v ^ 3 + w ^ 3 * v ^ 5 + w ^ 2 * v ^ 6 + v * u * w ^ 6 + w ^ 5 * v ^ 2 * u + w ^ 2 * v ^ 5 * u + w * u * v ^ 6 + u ^ 2 * w ^ 6 + w ^ 5 * v * u ^ 2) - w ^ 3 * v ^ 3 * u ^ 2) + w * v ^ 5 * u ^ 2 + v ^ 6 * u ^ 2 + w ^ 5 * u ^ 3) - w ^ 3 * v ^ 2 * u ^ 3) - w ^ 2 * v ^ 3 * u ^ 3) + v ^ 5 * u ^ 3 + w ^ 3 * u ^ 5 + w ^ 2 * v * u ^ 5 + w * u ^ 5 * v ^ 2 + v ^ 3 * u ^ 5 + u ^ 6 * w ^ 2 + u ^ 6 * w * v + u ^ 6 * v ^ 2), r * u ^ 33 * v ^ 33 * w ^ 33 * (v + u + w) * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), -r * u ^ 34 * v ^ 34 * w ^ 34 * (v + u + w), (((((v ^ 6 - 4 * w ^ 3 * v ^ 3) - 4 * u ^ 3 * v ^ 3) + 12 * w ^ 2 * v ^ 2 * u ^ 2) - 4 * u ^ 3 * w ^ 3) + w ^ 6 + u ^ 6) * (w ^ 2 + v ^ 2 + u ^ 2), 27 * r * u ^ 33 * v ^ 33 * w ^ 33 * (v + u + w), r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (v + u + w) * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), -(r ^ 2) * u ^ 27 * v ^ 27 * w ^ 27 * (v + u + w), -(u ^ 5) * v ^ 5 * w ^ 5, r * u ^ 33 * v ^ 33 * w ^ 33 * (w ^ 2 + v ^ 2 + u ^ 2) * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), 9 * r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (w ^ 2 + v ^ 2 + u ^ 2) ^ 2, 27 * r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (w ^ 2 + v ^ 2 + u ^ 2), -(u ^ 21) * v ^ 21 * w ^ 21 * (v + u + w), 9 * r * u ^ 33 * v ^ 33 * w ^ 33 * (v + u + w) * (w ^ 2 + v ^ 2 + u ^ 2), w ^ 2 * v ^ 2 * u ^ 2 * ((((((3 * v ^ 2 * w ^ 5 + 2 * w ^ 4 * v ^ 3 + 2 * w ^ 3 * v ^ 4 + 3 * w ^ 2 * v ^ 5 + 4 * w ^ 5 * v * u + 3 * w ^ 4 * v ^ 2 * u + 3 * w ^ 2 * v ^ 4 * u + 4 * w * v ^ 5 * u + 3 * w ^ 5 * u ^ 2 + 3 * w ^ 4 * v * u ^ 2) - 2 * w ^ 3 * v ^ 2 * u ^ 2) - 2 * w ^ 2 * v ^ 3 * u ^ 2) + 3 * w * v ^ 4 * u ^ 2 + 3 * v ^ 5 * u ^ 2 + 2 * w ^ 4 * u ^ 3) - 2 * w ^ 2 * v ^ 2 * u ^ 3) + 2 * v ^ 4 * u ^ 3 + 2 * u ^ 4 * w ^ 3 + 3 * u ^ 4 * w ^ 2 * v + 3 * u ^ 4 * w * v ^ 2 + 2 * u ^ 4 * v ^ 3 + 3 * u ^ 5 * w ^ 2 + 4 * u ^ 5 * w * v + 3 * u ^ 5 * v ^ 2), r * u ^ 10 * v ^ 10 * w ^ 10 * f * (u + v + w), -(r ^ 2) * u ^ 28 * v ^ 28 * w ^ 28 * (w ^ 2 + v ^ 2 + u ^ 2), -3 * r * u ^ 3 * v ^ 3 * w ^ 3, 9 * r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (v + u + w) * (w ^ 2 + v ^ 2 + u ^ 2), -3 * r ^ 2 * u ^ 16 * v ^ 16 * w ^ 16, r * u ^ 13 * v ^ 13 * w ^ 13 * (v + u + w) * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), -r * u ^ 14 * v ^ 14 * w ^ 14 * (v + u + w), 2 * w ^ 2 * v ^ 2 * u ^ 2 * (((3 * w ^ 4 * v ^ 2 + 3 * w ^ 2 * v ^ 4 + 4 * w ^ 4 * v * u + 4 * w * v ^ 4 * u + 3 * w ^ 4 * u ^ 2) - 3 * w ^ 2 * v ^ 2 * u ^ 2) + 3 * v ^ 4 * u ^ 2 + 3 * w ^ 2 * u ^ 4 + 4 * u ^ 4 * w * v + 3 * v ^ 2 * u ^ 4), r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (v + u + w) * (((((v ^ 6 - 4 * w ^ 3 * v ^ 3) - 4 * u ^ 3 * v ^ 3) + 12 * w ^ 2 * v ^ 2 * u ^ 2) - 4 * u ^ 3 * w ^ 3) + w ^ 6 + u ^ 6), u ^ 8 * v ^ 8 * w ^ 8, r * u ^ 13 * v ^ 13 * w ^ 13 * (v + u + w) * (((((((((v ^ 7 - 2 * v ^ 4 * u ^ 3) - 2 * w ^ 3 * v ^ 4) + 4 * w ^ 2 * v ^ 3 * u ^ 2) - 2 * w ^ 4 * v ^ 3) - 2 * u ^ 4 * v ^ 3) + 4 * w ^ 3 * v ^ 2 * u ^ 2 + 4 * w ^ 2 * v ^ 2 * u ^ 3) - 2 * w ^ 4 * u ^ 3) - 2 * u ^ 4 * w ^ 3) + u ^ 7 + w ^ 7), 2 * u ^ 4 * v ^ 4 * w ^ 4 * (((3 * w ^ 8 * v ^ 4 + 3 * w ^ 4 * v ^ 8 + 4 * w ^ 8 * v ^ 2 * u ^ 2 + 4 * w ^ 2 * v ^ 8 * u ^ 2 + 3 * w ^ 8 * u ^ 4) - 3 * u ^ 4 * v ^ 4 * w ^ 4) + 3 * v ^ 8 * u ^ 4 + 3 * u ^ 8 * w ^ 4 + 4 * u ^ 8 * v ^ 2 * w ^ 2 + 3 * u ^ 8 * v ^ 4), 9 * u ^ 20 * v ^ 20 * w ^ 20 * (v + u + w) * (w ^ 2 + v ^ 2 + u ^ 2), r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (w ^ 2 + v ^ 2 + u ^ 2) * (v + u + w) ^ 2, -r * u ^ 15 * v ^ 15 * w ^ 15 * (w ^ 2 + v ^ 2 + u ^ 2), r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (((((v ^ 6 - 4 * w ^ 3 * v ^ 3) - 4 * u ^ 3 * v ^ 3) + 12 * w ^ 2 * v ^ 2 * u ^ 2) - 4 * u ^ 3 * w ^ 3) + w ^ 6 + u ^ 6) * (w ^ 2 + v ^ 2 + u ^ 2), u ^ 20 * v ^ 20 * w ^ 20 * (v + u + w) * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), 3 * r * u ^ 13 * v ^ 13 * w ^ 13 * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), r ^ 2 * u ^ 26 * v ^ 26 * w ^ 26 * (w ^ 2 + v ^ 2 + u ^ 2) * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), 3 * r ^ 2 * u ^ 26 * v ^ 26 * w ^ 26 * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), u ^ 20 * v ^ 20 * w ^ 20 * (w ^ 2 + v ^ 2 + u ^ 2) * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), 2 * r ^ 2 * u ^ 7 * v ^ 7 * w ^ 7 * (v + u + w) * (u * v + w * v + u * w), r * u ^ 13 * v ^ 13 * w ^ 13 * (v + u + w) * (((((v ^ 6 - 4 * w ^ 3 * v ^ 3) - 4 * u ^ 3 * v ^ 3) + 12 * w ^ 2 * v ^ 2 * u ^ 2) - 4 * u ^ 3 * w ^ 3) + w ^ 6 + u ^ 6), 3 * r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (((((v ^ 6 - 4 * w ^ 3 * v ^ 3) - 4 * u ^ 3 * v ^ 3) + 12 * w ^ 2 * v ^ 2 * u ^ 2) - 4 * u ^ 3 * w ^ 3) + w ^ 6 + u ^ 6), r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (v + u + w) ^ 3, 3 * r * u ^ 13 * v ^ 13 * w ^ 13 * (v + u + w) ^ 2, -3 * u ^ 10 * v ^ 10 * w ^ 10, 27 * r ^ 2 * u ^ 26 * v ^ 26 * w ^ 26 * (w ^ 2 + v ^ 2 + u ^ 2), 3 * r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (v + u + w) ^ 2, 3 * r * u ^ 13 * v ^ 13 * w ^ 13 * (((((v ^ 6 - 4 * w ^ 3 * v ^ 3) - 4 * u ^ 3 * v ^ 3) + 12 * w ^ 2 * v ^ 2 * u ^ 2) - 4 * u ^ 3 * w ^ 3) + w ^ 6 + u ^ 6), 9 * r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (v + u + w) ^ 2, r * u ^ 13 * v ^ 13 * w ^ 13 * (v + u + w) ^ 3, 3 * u ^ 20 * v ^ 20 * w ^ 20 * ((v ^ 3 - 4 * w * v * u) + u ^ 3 + w ^ 3), 27 * r * u ^ 33 * v ^ 33 * w ^ 33 * (w ^ 2 + v ^ 2 + u ^ 2), 9 * r * u ^ 13 * v ^ 13 * w ^ 13 * (v + u + w) ^ 2, 27 * r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6 * (v + u + w), 81 * r ^ 2 * u ^ 6 * v ^ 6 * w ^ 6, 9 * u ^ 20 * v ^ 20 * w ^ 20 * (v + u + w) ^ 2, 27 * u ^ 20 * v ^ 20 * w ^ 20 * (w ^ 2 + v ^ 2 + u ^ 2), 27 * r * u ^ 13 * v ^ 13 * w ^ 13 * (v + u + w), 27 * u ^ 20 * v ^ 20 * w ^ 20 * (v + u + w), 81 * r * u ^ 33 * v ^ 33 * w ^ 33, 81 * u ^ 20 * v ^ 20 * w ^ 20, 81 * r * u ^ 13 * v ^ 13 * w ^ 13, 81 * r ^ 2 * u ^ 26 * v ^ 26 * w ^ 26]
            end
        res = Dict{Symbol, Any}(:name => "H(G32)", :identifier => "H(G32)", :parameter => para, :size => 155520, :order => 155520, :dim => 4, :degrees => [12, 18, 24, 30], :reflclasses => [2], :powermap => chevieget(:G32, :PowerMaps), :irredinfo => chevieget(:G32, :IrredInfo), :text => "origin: J.Michel, 2008/2012")
        Inherit(res, chevieget(:G32, :ClassInfo))
        res[:centralizers] = map((x->begin
                        div(res[:order], x)
                    end), res[:classes])
        res[:irreducibles] = [f1(u), f1(w), f1(v), f4(v, w), f4(u, v), f4(w, u), f4(w, v), f4(u, w), f4(v, u), f5(u, v, w), f5(w, u, v), f5(v, w, u), f5(u, w, v), f5(v, u, w), f5(w, v, u), f6(v, w), f6(u, v), f6(w, u), f10(u, v, w), f10(w, u, v), f10(v, w, u), f10(u, w, v), f10(v, u, w), f10(w, v, u), f15(u, v, w), f15b(u, v, w), f15(w, u, v), f15(v, u, w), f15b(w, u, v), f15b(v, u, w), f20a(u, v, w), f20b(u, v, w), f20c(u, v, w), f20c(w, u, v), f20c(v, w, u), f20c(u, w, v), f20c(v, u, w), f20c(w, v, u), f20d(u, v, w), f20d(w, u, v), f20d(v, w, u), f20d(u, w, v), f20d(v, u, w), f20d(w, v, u), f20a(v, u, w), f20a(w, u, v), f20b(w, u, v), f20b(v, u, w), f24(u, v, w), f24(w, u, v), f24(v, u, w), f30a(u, v, w), f30b(u, v, w), f30b(w, u, v), f30b(v, w, u), f30b(u, w, v), f30b(v, u, w), f30b(w, v, u), f30a(w, u, v), f30a(v, u, w), f36(u, v, w, E(3)), f36(w, u, v, E(3)), f36(v, u, w, E(3)), f36(u, v, w, E(3, 2)), f36(v, u, w, E(3, 2)), f36(w, u, v, E(3, 2)), f40(u, v, w), f40(w, u, v), f40(v, w, u), f40(u, w, v), f40(v, u, w), f40(w, v, u), f45(u, v, w, E(3)), f45(u, w, v, E(3)), f45(v, w, u, E(3)), f45(u, w, v, E(3, 2)), f45(u, v, w, E(3, 2)), f45(v, w, u, E(3, 2)), f60a(u, v, w), f60b(u, v, w), f60c(u, v, w), f60c(w, u, v), f60c(v, w, u), f60c(u, w, v), f60c(v, u, w), f60c(w, v, u), f60a(v, u, w), f60a(w, u, v), f60b(w, u, v), f60b(v, u, w), f64(u, v, w, GetRoot(v * w)), f64(u, v, w, -(GetRoot(v * w))), f64(w, u, v, GetRoot(u * v)), f64(v, u, w, GetRoot(u * w)), f64(v, u, w, -(GetRoot(u * w))), f64(w, u, v, -(GetRoot(u * v))), f80(u, v, w), f80(v, u, w), f80(w, u, v), f81(u, v, w, GetRoot(u * v * w, 3)), f81(u, v, w, E(3, 2) * GetRoot(u * v * w, 3)), f81(u, v, w, E(3) * GetRoot(u * v * w, 3))]
        res = ((CHEVIE[:compat])[:MakeCharacterTable])(res)
        return res
    end)
chevieset(:G32, :CharTable, function ()
        local res
        res = (chevieget(:G32, :HeckeCharTable))([[1, E(3), E(3, 2)]], [])
        res[:identifier] = "G32"
        res[:name] = "G32"
        res[:galomorphisms] = Group(perm"(2,3)(4,7)(5,8)(6,9)(10,13)(11,14)(12,15)(17,18)(19,22)(20,23)(21,24)(27,28)(29,30)(33,36)(34,37)(35,38)(39,42)(40,43)(41,44)(45,46)(47,48)(50,51)(53,56)(54,57)(55,58)(59,60)(61,64)(62,65)(63,66)(67,70)(68,71)(69,72)(73,76)(74,77)(75,78)(81,84)(82,85)(83,86)(87,88)(89,90)(93,94)(95,96)(98,99)(101,102)")
        return ((CHEVIE[:compat])[:MakeCharacterTable])(res)
    end)
chevieset(:G32, :SchurModels, Dict{Symbol, Any}(:f1_0 => Dict{Symbol, Any}(:vcyc => [[[1, -1, 0], 1], [[1, -1, 0], 1], [[1, 0, -1], 1], [[1, 0, -1], 1], [[3, -2, -1], 1], [[3, -1, -2], 1], [[5, -2, -3], 1], [[5, -3, -2], 1], [[4, -3, -1], 2], [[4, -1, -3], 2], [[2, -1, -1], 2], [[2, -1, -1], 2], [[1, -1, 0], 6], [[1, 0, -1], 6], [[3, -2, -1], 6], [[3, -1, -2], 6], [[2, -1, -1], 6], [[2, -1, -1], 4], [[1, -1, 0], 4], [[1, 0, -1], 4], [[2, -1, -1], 3], [[1, -1, 0], 10], [[1, 0, -1], 10], [[2, -1, -1], 5]]), :f4_1 => Dict{Symbol, Any}(:vcyc => [[[4, -1, -3], 1], [[3, -1, -2], 1], [[3, -2, -1], 1], [[2, 1, -3], 1], [[-1, 1, 0], 1], [[0, 1, -1], 1], [[1, 0, -1], 1], [[1, 0, -1], 1], [[5, -1, -4], 2], [[3, 1, -4], 2], [[3, -1, -2], 2], [[2, -1, -1], 2], [[1, 0, -1], 2], [[1, 1, -2], 2], [[1, 0, -1], 6], [[1, -1, 0], 6], [[1, 0, -1], 4], [[2, -1, -1], 3], [[1, -1, 0], 10], [[1, 0, -1], 15]]), :f5_4 => Dict{Symbol, Any}(:vcyc => [[[3, 2, -5], 1], [[2, 1, -3], 1], [[1, 0, -1], 1], [[1, 0, -1], 1], [[-1, 1, 0], 1], [[-1, 1, 0], 1], [[0, 1, -1], 1], [[0, 1, -1], 1], [[3, -1, -2], 2], [[1, 2, -3], 2], [[0, 1, -1], 2], [[2, -1, -1], 2], [[1, 1, -2], 2], [[4, 1, -5], 2], [[1, 0, -1], 2], [[1, 0, -1], 2], [[1, 0, -1], 6], [[1, 0, -1], 6], [[1, -1, 0], 6], [[1, -1, 0], 4], [[1, 1, -2], 3], [[1, 0, -1], 12]]), :f6_8 => Dict{Symbol, Any}(:factor => [2, -2, 0], :vcyc => [[[-1, 1, 0], 1], [[1, -1, 0], 1], [[0, 1, -1], 1], [[1, 0, -1], 1], [[0, 1, -1], 1], [[1, 0, -1], 1], [[2, 1, -3], 1], [[1, 2, -3], 1], [[2, 1, -3], 2], [[1, 2, -3], 2], [[-1, 2, -1], 2], [[2, -1, -1], 2], [[1, 1, -2], 2], [[1, 1, -2], 2], [[1, 0, -1], 2], [[0, 1, -1], 2], [[1, 1, -2], 6], [[0, 1, -1], 6], [[1, 0, -1], 6], [[-1, 1, 0], 10], [[1, 1, -2], 5]]), :f10_2 => Dict{Symbol, Any}(:vcyc => [[[2, 1, -3], 1], [[3, -1, -2], 1], [[0, 1, -1], 1], [[0, 1, -1], 1], [[-1, 1, 0], 1], [[-1, 0, 1], 1], [[1, 0, -1], 1], [[1, 0, -1], 1], [[4, -3, -1], 2], [[3, -1, -2], 2], [[1, 1, -2], 2], [[1, -2, 1], 2], [[1, 0, -1], 2], [[1, 0, -1], 2], [[0, 1, -1], 2], [[2, -1, -1], 2], [[2, 1, -3], 6], [[1, 0, -1], 6], [[1, -1, 0], 6], [[1, 0, -1], 4], [[2, -1, -1], 3]]), :f15_6 => Dict{Symbol, Any}(:vcyc => [[[3, -2, -1], 1], [[3, -1, -2], 1], [[1, 0, -1], 1], [[1, 0, -1], 1], [[0, 1, -1], 1], [[0, 1, -1], 1], [[-1, 1, 0], 1], [[1, -1, 0], 1], [[3, 1, -4], 2], [[3, -4, 1], 2], [[-1, -1, 2], 2], [[1, -2, 1], 2], [[1, -1, 0], 2], [[1, 0, -1], 2], [[2, -1, -1], 2], [[2, -1, -1], 2], [[2, -1, -1], 6], [[1, 0, -1], 6], [[1, -1, 0], 6], [[2, -1, -1], 4]]), :f15_8 => Dict{Symbol, Any}(:vcyc => [[[2, -3, 1], 1], [[-3, 2, 1], 1], [[0, 1, -1], 1], [[0, 1, -1], 1], [[1, 0, -1], 1], [[1, 0, -1], 1], [[1, -1, 0], 1], [[-1, 1, 0], 1], [[1, -2, 1], 2], [[-2, 1, 1], 2], [[1, 1, -2], 2], [[1, 1, -2], 2], [[1, 0, -1], 2], [[1, 0, -1], 2], [[0, 1, -1], 2], [[0, 1, -1], 2], [[0, 1, -1], 6], [[1, 0, -1], 6], [[1, 1, -2], 4]]), :f20_3 => Dict{Symbol, Any}(:vcyc => [[[2, -3, 1], 1], [[1, -1, 0], 1], [[1, -1, 0], 1], [[-1, 0, 1], 1], [[1, 0, -1], 1], [[4, -1, -3], 1], [[3, -1, -2], 1], [[0, 1, -1], 1], [[1, 2, -3], 2], [[-1, 2, -1], 2], [[2, -1, -1], 2], [[1, 1, -2], 2], [[1, 0, -1], 2], [[-1, 0, 1], 2], [[3, -2, -1], 6], [[1, 0, -1], 6], [[1, 0, -1], 4], [[1, 1, -2], 3]]), :f20_5 => Dict{Symbol, Any}(:coeff => -1, :vcyc => [[[3, -2, -1], 1], [[-2, 3, -1], 1], [[2, 1, -3], 1], [[1, 2, -3], 1], [[-1, 0, 1], 1], [[-1, 0, 1], 1], [[0, 1, -1], 1], [[0, 1, -1], 1], [[3, -1, -2], 2], [[-1, 3, -2], 2], [[1, 1, -2], 2], [[1, 1, -2], 2], [[1, 1, -2], 6], [[1, -1, 0], 6], [[1, 0, -1], 6], [[0, 1, -1], 6], [[1, 1, -2], 3]]), :f20_7 => Dict{Symbol, Any}(:vcyc => [[[3, 1, -4], 1], [[1, 2, -3], 1], [[-1, 1, 0], 1], [[-1, 1, 0], 1], [[-1, 0, 1], 1], [[1, 0, -1], 1], [[0, 1, -1], 1], [[0, 1, -1], 1], [[1, 0, -1], 2], [[-1, 0, 1], 2], [[3, -4, 1], 2], [[1, 2, -3], 2], [[1, 1, -2], 2], [[-1, 2, -1], 2], [[1, 0, -1], 6], [[1, 0, -1], 6], [[0, 1, -1], 6], [[2, -1, -1], 3]]), :f20_12 => Dict{Symbol, Any}(:coeff => 2, :vcyc => [[[0, 1, -1], 1], [[0, -1, 1], 1], [[-1, 1, 0], 1], [[-1, 0, 1], 1], [[-1, 1, 0], 1], [[-1, 0, 1], 1], [[1, -1, 0], 1], [[1, 0, -1], 1], [[1, -3, 2], 2], [[1, 2, -3], 2], [[2, -1, -1], 2], [[-2, 1, 1], 2], [[1, 0, -1], 2], [[1, -1, 0], 2], [[1, 0, -1], 2], [[1, -1, 0], 2], [[0, 1, -1], 6], [[0, -1, 1], 6], [[2, -1, -1], 3]]), :f24_6 => Dict{Symbol, Any}(:vcyc => [[[-2, -1, 3], 1], [[-2, 3, -1], 1], [[1, 0, -1], 1], [[1, -1, 0], 1], [[1, 0, -1], 1], [[1, -1, 0], 1], [[0, 1, -1], 1], [[0, -1, 1], 1], [[1, 0, -1], 2], [[1, -1, 0], 2], [[1, 1, -2], 2], [[1, -2, 1], 2], [[1, 0, -1], 6], [[1, -1, 0], 6], [[1, 0, -1], 4], [[1, -1, 0], 4], [[2, -1, -1], 5]]), :f30_4 => Dict{Symbol, Any}(:vcyc => [[[5, -3, -2], 1], [[1, 0, -1], 1], [[-1, 1, 0], 1], [[-1, 1, 0], 1], [[0, 1, -1], 1], [[0, 1, -1], 1], [[1, 0, -1], 1], [[1, 0, -1], 1], [[-1, 1, 0], 2], [[0, 1, -1], 2], [[-1, 0, 1], 2], [[5, -1, -4], 2], [[1, -3, 2], 2], [[1, 0, -1], 2], [[1, -2, 1], 2], [[2, -1, -1], 2], [[1, -1, 0], 6], [[0, 1, -1], 6], [[1, 0, -1], 6], [[1, 0, -1], 4]]), :f30_12p => Dict{Symbol, Any}(:vcyc => [[[2, -3, 1], 1], [[2, 1, -3], 1], [[-1, 1, 0], 1], [[-1, 1, 0], 1], [[1, -1, 0], 1], [[-1, 0, 1], 1], [[-1, 0, 1], 1], [[1, 0, -1], 1], [[0, 1, -1], 2], [[0, -1, 1], 2], [[-1, 2, -1], 2], [[-1, -1, 2], 2], [[1, 0, -1], 2], [[1, 0, -1], 2], [[1, -1, 0], 2], [[1, -1, 0], 2], [[0, 1, -1], 6], [[0, -1, 1], 6], [[1, -1, 0], 6], [[1, 0, -1], 6]]), :f36_5 => Dict{Symbol, Any}(:rootUnity => E(3), :vcyc => [[[0, 0, 0, -1], 1], [[1, -1, 0], 1], [[-1, 0, 1], 1], [[2, -1, -1, 1], 1], [[1, 1, -2, 2], 1], [[-1, 2, -1, -2], 1], [[-2, 1, 1], 2], [[2, 1, -3, -1], 2], [[2, -3, 1, 2], 2], [[2, -1, -1], 6], [[1, 0, -1], 6], [[1, -1, 0], 6], [[0, -1, 1], 6], [[1, -1, 0, 1], 5], [[1, 0, -1, 1], 5]]), :f40_8 => Dict{Symbol, Any}(:vcyc => [[[3, 2, -5], 1], [[-1, 1, 0], 1], [[1, -1, 0], 1], [[1, 0, -1], 1], [[-1, 0, 1], 1], [[1, 0, -1], 1], [[-3, 2, 1], 1], [[0, -1, 1], 1], [[1, -1, 0], 2], [[1, 1, -2], 2], [[2, -1, -1], 2], [[1, 0, -1], 2], [[1, -1, 0], 6], [[0, 1, -1], 6], [[1, -1, 0], 4], [[1, 0, -1], 4], [[1, -2, 1], 3]]), :f45_6 => Dict{Symbol, Any}(:rootUnity => E(3), :vcyc => [[[0, 0, 0, 1], 1], [[-1, 2, -1, 2], 1], [[-2, 1, 1, 1], 1], [[1, 1, -2, 1], 1], [[0, -1, 1], 1], [[1, 0, -1], 1], [[-3, 2, 1, 2], 2], [[2, -3, 1, 2], 2], [[0, 1, -1, -2], 2], [[1, 0, -1, 1], 2], [[1, 1, -2], 2], [[1, -1, 0], 6], [[1, 0, -1], 6], [[0, 1, -1], 6], [[1, 1, -2], 6], [[0, 1, -1, 1], 4], [[1, 0, -1, 1], 4]]), :f60_7 => Dict{Symbol, Any}(:vcyc => [[[1, 2, -3], 1], [[1, -1, 0], 1], [[1, -1, 0], 1], [[0, 1, -1], 1], [[0, 1, -1], 1], [[1, 0, -1], 1], [[1, 0, -1], 1], [[-3, 1, 2], 1], [[1, -1, 0], 2], [[4, 1, -5], 2], [[-1, 2, -1], 2], [[-2, 1, 1], 2], [[0, 1, -1], 2], [[0, 1, -1], 2], [[1, -1, 0], 6], [[0, -1, 1], 6], [[1, -1, 0], 4]]), :f60_11s => Dict{Symbol, Any}(:vcyc => [[[1, -4, 3], 1], [[-1, 1, 0], 1], [[-1, 1, 0], 1], [[1, 0, -1], 1], [[1, 0, -1], 1], [[0, -1, 1], 1], [[0, -1, 1], 1], [[-4, 1, 3], 1], [[2, -1, -1], 2], [[1, 1, -2], 2], [[1, 1, -2], 2], [[-1, 2, -1], 2], [[-1, 1, 0], 2], [[-1, 1, 0], 2], [[1, 1, -2], 6], [[1, -1, 0], 6]]), :f60_12 => Dict{Symbol, Any}(:coeff => 2, :vcyc => [[[1, 2, -3], 1], [[1, -3, 2], 1], [[-1, 0, 1], 1], [[-1, 0, 1], 1], [[-1, 0, 1], 1], [[-1, 1, 0], 1], [[-1, 1, 0], 1], [[-1, 1, 0], 1], [[0, 1, -1], 2], [[0, -1, 1], 2], [[2, -1, -1], 2], [[2, -1, -1], 2], [[2, -1, -1], 6], [[0, -1, 1], 6], [[0, 1, -1], 6], [[1, 0, -1], 4], [[1, -1, 0], 4]]), :f64_8 => Dict{Symbol, Any}(:coeff => 2, :root => [1, 1, 0] // 2, :vcyc => [[[1, 0, -2, 1], 1], [[0, -1, 2, -1], 1], [[0, 1, -1], 1], [[-1, 0, 1], 1], [[-1, 1, 0], 1], [[1, -1, 0], 1], [[-1, 3, -2], 1], [[-3, 1, 2], 1], [[-2, 2, -1, 1], 2], [[2, -2, -1, 1], 2], [[1, 1, -2], 3], [[0, 0, -1, 1], 10], [[0, -1, 0, 1], 15]]), :f80_9 => Dict{Symbol, Any}(:coeff => 2, :vcyc => [[[1, 2, -3], 1], [[1, -3, 2], 1], [[1, 0, -1], 1], [[1, 0, -1], 1], [[-1, 1, 0], 1], [[-1, 1, 0], 1], [[0, 1, -1], 1], [[0, 1, -1], 1], [[1, -1, 0], 2], [[1, 0, -1], 2], [[-2, 1, 1], 4], [[1, 0, -1], 4], [[1, -1, 0], 4], [[2, -1, -1], 3], [[0, -1, 1], 12]]), :f81_10 => Dict{Symbol, Any}(:coeff => 3, :root => [1, 1, 1] // 3, :vcyc => [[[-2, 0, 1, 1], 2], [[0, -2, 1, 1], 2], [[1, 0, -2, 1], 2], [[1, -2, 0, 1], 2], [[-2, 1, 0, 1], 2], [[0, 1, -2, 1], 2], [[1, 1, -2], 2], [[1, -2, 1], 2], [[-2, 1, 1], 2], [[0, 0, -1, 1], 2], [[-1, 0, 0, 1], 2], [[0, -1, 0, 1], 2], [[-1, -1, 0, 2], 4], [[-1, 0, -1, 2], 4], [[0, -1, -1, 2], 4], [[-1, 0, 0, 1], 5], [[0, 0, -1, 1], 5], [[0, -1, 0, 1], 5]])))
chevieset(:G32, :SchurData, [Dict{Symbol, Any}(:name => "f1_0", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f1_0", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f1_0", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f4_1", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f4_1", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f4_1", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f4_1", :order => [2, 3, 1]), Dict{Symbol, Any}(:name => "f4_1", :order => [3, 1, 2]), Dict{Symbol, Any}(:name => "f4_1", :order => [1, 2, 3]), Dict{Symbol, Any}(:name => "f5_4", :order => [3, 1, 2]), Dict{Symbol, Any}(:name => "f5_4", :order => [2, 3, 1]), Dict{Symbol, Any}(:name => "f5_4", :order => [1, 2, 3]), Dict{Symbol, Any}(:name => "f5_4", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f5_4", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f5_4", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f6_8", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f6_8", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f6_8", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f10_2", :order => [2, 3, 1]), Dict{Symbol, Any}(:name => "f10_2", :order => [1, 2, 3]), Dict{Symbol, Any}(:name => "f10_2", :order => [3, 1, 2]), Dict{Symbol, Any}(:name => "f10_2", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f10_2", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f10_2", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f15_8", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f15_6", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f15_8", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f15_8", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f15_6", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f15_6", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f20_5", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f20_12", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f20_3", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f20_3", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f20_3", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f20_3", :order => [3, 1, 2]), Dict{Symbol, Any}(:name => "f20_3", :order => [1, 2, 3]), Dict{Symbol, Any}(:name => "f20_3", :order => [2, 3, 1]), Dict{Symbol, Any}(:name => "f20_7", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f20_7", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f20_7", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f20_7", :order => [2, 3, 1]), Dict{Symbol, Any}(:name => "f20_7", :order => [3, 1, 2]), Dict{Symbol, Any}(:name => "f20_7", :order => [1, 2, 3]), Dict{Symbol, Any}(:name => "f20_5", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f20_5", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f20_12", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f20_12", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f24_6", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f24_6", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f24_6", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f30_12p", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f30_4", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f30_4", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f30_4", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f30_4", :order => [3, 1, 2]), Dict{Symbol, Any}(:name => "f30_4", :order => [1, 2, 3]), Dict{Symbol, Any}(:name => "f30_4", :order => [2, 3, 1]), Dict{Symbol, Any}(:name => "f30_12p", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f30_12p", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f36_5", :order => [1, 3, 2], :rootUnityPower => 2), Dict{Symbol, Any}(:name => "f36_5", :order => [3, 2, 1], :rootUnityPower => 2), Dict{Symbol, Any}(:name => "f36_5", :order => [2, 1, 3], :rootUnityPower => 2), Dict{Symbol, Any}(:name => "f36_5", :order => [1, 3, 2], :rootUnityPower => 1), Dict{Symbol, Any}(:name => "f36_5", :order => [2, 1, 3], :rootUnityPower => 1), Dict{Symbol, Any}(:name => "f36_5", :order => [3, 2, 1], :rootUnityPower => 1), Dict{Symbol, Any}(:name => "f40_8", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f40_8", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f40_8", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f40_8", :order => [2, 3, 1]), Dict{Symbol, Any}(:name => "f40_8", :order => [3, 1, 2]), Dict{Symbol, Any}(:name => "f40_8", :order => [1, 2, 3]), Dict{Symbol, Any}(:name => "f45_6", :order => [2, 1, 3], :rootUnityPower => 1), Dict{Symbol, Any}(:name => "f45_6", :order => [1, 3, 2], :rootUnityPower => 1), Dict{Symbol, Any}(:name => "f45_6", :order => [3, 2, 1], :rootUnityPower => 1), Dict{Symbol, Any}(:name => "f45_6", :order => [1, 3, 2], :rootUnityPower => 2), Dict{Symbol, Any}(:name => "f45_6", :order => [2, 1, 3], :rootUnityPower => 2), Dict{Symbol, Any}(:name => "f45_6", :order => [3, 2, 1], :rootUnityPower => 2), Dict{Symbol, Any}(:name => "f60_11s", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f60_12", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f60_7", :order => [1, 2, 3]), Dict{Symbol, Any}(:name => "f60_7", :order => [3, 1, 2]), Dict{Symbol, Any}(:name => "f60_7", :order => [2, 3, 1]), Dict{Symbol, Any}(:name => "f60_7", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f60_7", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f60_7", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f60_11s", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f60_11s", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f60_12", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f60_12", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f64_8", :order => [3, 2, 1], :rootPower => -1), Dict{Symbol, Any}(:name => "f64_8", :order => [3, 2, 1], :rootPower => 1), Dict{Symbol, Any}(:name => "f64_8", :order => [2, 1, 3], :rootPower => -1), Dict{Symbol, Any}(:name => "f64_8", :order => [1, 3, 2], :rootPower => -1), Dict{Symbol, Any}(:name => "f64_8", :order => [1, 3, 2], :rootPower => 1), Dict{Symbol, Any}(:name => "f64_8", :order => [2, 1, 3], :rootPower => 1), Dict{Symbol, Any}(:name => "f80_9", :order => [1, 3, 2]), Dict{Symbol, Any}(:name => "f80_9", :order => [2, 1, 3]), Dict{Symbol, Any}(:name => "f80_9", :order => [3, 2, 1]), Dict{Symbol, Any}(:name => "f81_10", :order => [1, 2, 3], :rootPower => 1), Dict{Symbol, Any}(:name => "f81_10", :order => [1, 2, 3], :rootPower => E(3, 2)), Dict{Symbol, Any}(:name => "f81_10", :order => [1, 2, 3], :rootPower => E(3))])
chevieset(:G32, :sparseFakeDegrees, [[1, 0], [1, 80], [1, 40], [1, 61, 1, 67, 1, 73, 1, 79], [1, 21, 1, 27, 1, 33, 1, 39], [1, 11, 1, 17, 1, 23, 1, 29], [1, 41, 1, 47, 1, 53, 1, 59], [1, 51, 1, 57, 1, 63, 1, 69], [1, 1, 1, 7, 1, 13, 1, 19], [1, 36, 1, 42, 1, 48, 1, 54, 1, 60], [1, 44, 1, 50, 1, 56, 1, 62, 1, 68], [1, 4, 1, 10, 1, 16, 1, 22, 1, 28], [1, 12, 1, 18, 1, 24, 1, 30, 1, 36], [1, 52, 1, 58, 1, 64, 1, 70, 1, 76], [1, 20, 1, 26, 1, 32, 1, 38, 1, 44], [1, 48, 1, 54, 2, 60, 1, 66, 1, 72], [1, 8, 1, 14, 2, 20, 1, 26, 1, 32], [1, 28, 1, 34, 2, 40, 1, 46, 1, 52], [1, 30, 1, 36, 2, 42, 2, 48, 2, 54, 1, 60, 1, 66], [1, 2, 1, 8, 2, 14, 2, 20, 2, 26, 1, 32, 1, 38], [1, 34, 1, 40, 2, 46, 2, 52, 2, 58, 1, 64, 1, 70], [1, 42, 1, 48, 2, 54, 2, 60, 2, 66, 1, 72, 1, 78], [1, 10, 1, 16, 2, 22, 2, 28, 2, 34, 1, 40, 1, 46], [1, 14, 1, 20, 2, 26, 2, 32, 2, 38, 1, 44, 1, 50], [1, 24, 1, 30, 2, 36, 2, 42, 3, 48, 2, 54, 2, 60, 1, 66, 1, 72], [1, 6, 2, 12, 3, 18, 3, 24, 3, 30, 2, 36, 1, 42], [1, 8, 1, 14, 2, 20, 2, 26, 3, 32, 2, 38, 2, 44, 1, 50, 1, 56], [1, 16, 1, 22, 2, 28, 2, 34, 3, 40, 2, 46, 2, 52, 1, 58, 1, 64], [1, 38, 2, 44, 3, 50, 3, 56, 3, 62, 2, 68, 1, 74], [1, 22, 2, 28, 3, 34, 3, 40, 3, 46, 2, 52, 1, 58], [1, 33, 2, 39, 3, 45, 4, 51, 4, 57, 3, 63, 2, 69, 1, 75], [1, 12, 1, 18, 3, 24, 3, 30, 4, 36, 3, 42, 3, 48, 1, 54, 1, 60], [1, 13, 2, 19, 3, 25, 4, 31, 4, 37, 3, 43, 2, 49, 1, 55], [1, 9, 2, 15, 3, 21, 4, 27, 4, 33, 3, 39, 2, 45, 1, 51], [1, 35, 2, 41, 3, 47, 4, 53, 4, 59, 3, 65, 2, 71, 1, 77], [1, 29, 2, 35, 3, 41, 4, 47, 4, 53, 3, 59, 2, 65, 1, 71], [1, 3, 2, 9, 3, 15, 4, 21, 4, 27, 3, 33, 2, 39, 1, 45], [1, 25, 2, 31, 3, 37, 4, 43, 4, 49, 3, 55, 2, 61, 1, 67], [1, 31, 2, 37, 3, 43, 4, 49, 4, 55, 3, 61, 2, 67, 1, 73], [1, 9, 2, 15, 3, 21, 4, 27, 4, 33, 3, 39, 2, 45, 1, 51], [1, 17, 2, 23, 3, 29, 4, 35, 4, 41, 3, 47, 2, 53, 1, 59], [1, 29, 2, 35, 3, 41, 4, 47, 4, 53, 3, 59, 2, 65, 1, 71], [1, 21, 2, 27, 3, 33, 4, 39, 4, 45, 3, 51, 2, 57, 1, 63], [1, 7, 2, 13, 3, 19, 4, 25, 4, 31, 3, 37, 2, 43, 1, 49], [1, 19, 2, 25, 3, 31, 4, 37, 4, 43, 3, 49, 2, 55, 1, 61], [1, 5, 2, 11, 3, 17, 4, 23, 4, 29, 3, 35, 2, 41, 1, 47], [1, 20, 1, 26, 3, 32, 3, 38, 4, 44, 3, 50, 3, 56, 1, 62, 1, 68], [1, 16, 1, 22, 3, 28, 3, 34, 4, 40, 3, 46, 3, 52, 1, 58, 1, 64], [1, 6, 2, 12, 3, 18, 4, 24, 4, 30, 4, 36, 3, 42, 2, 48, 1, 54], [1, 26, 2, 32, 3, 38, 4, 44, 4, 50, 4, 56, 3, 62, 2, 68, 1, 74], [1, 16, 2, 22, 3, 28, 4, 34, 4, 40, 4, 46, 3, 52, 2, 58, 1, 64], [1, 12, 2, 18, 4, 24, 5, 30, 6, 36, 5, 42, 4, 48, 2, 54, 1, 60], [1, 12, 2, 18, 4, 24, 5, 30, 6, 36, 5, 42, 4, 48, 2, 54, 1, 60], [1, 8, 2, 14, 4, 20, 5, 26, 6, 32, 5, 38, 4, 44, 2, 50, 1, 56], [1, 28, 2, 34, 4, 40, 5, 46, 6, 52, 5, 58, 4, 64, 2, 70, 1, 76], [1, 24, 2, 30, 4, 36, 5, 42, 6, 48, 5, 54, 4, 60, 2, 66, 1, 72], [1, 4, 2, 10, 4, 16, 5, 22, 6, 28, 5, 34, 4, 40, 2, 46, 1, 52], [1, 20, 2, 26, 4, 32, 5, 38, 6, 44, 5, 50, 4, 56, 2, 62, 1, 68], [1, 20, 2, 26, 4, 32, 5, 38, 6, 44, 5, 50, 4, 56, 2, 62, 1, 68], [1, 16, 2, 22, 4, 28, 5, 34, 6, 40, 5, 46, 4, 52, 2, 58, 1, 64], [1, 7, 3, 13, 5, 19, 7, 25, 7, 31, 6, 37, 4, 43, 2, 49, 1, 55], [1, 27, 3, 33, 5, 39, 7, 45, 7, 51, 6, 57, 4, 63, 2, 69, 1, 75], [1, 17, 3, 23, 5, 29, 7, 35, 7, 41, 6, 47, 4, 53, 2, 59, 1, 65], [1, 5, 2, 11, 4, 17, 6, 23, 7, 29, 7, 35, 5, 41, 3, 47, 1, 53], [1, 15, 2, 21, 4, 27, 6, 33, 7, 39, 7, 45, 5, 51, 3, 57, 1, 63], [1, 25, 2, 31, 4, 37, 6, 43, 7, 49, 7, 55, 5, 61, 3, 67, 1, 73], [1, 24, 3, 30, 5, 36, 7, 42, 8, 48, 7, 54, 5, 60, 3, 66, 1, 72], [1, 14, 3, 20, 5, 26, 7, 32, 8, 38, 7, 44, 5, 50, 3, 56, 1, 62], [1, 10, 3, 16, 5, 22, 7, 28, 8, 34, 7, 40, 5, 46, 3, 52, 1, 58], [1, 18, 3, 24, 5, 30, 7, 36, 8, 42, 7, 48, 5, 54, 3, 60, 1, 66], [1, 22, 3, 28, 5, 34, 7, 40, 8, 46, 7, 52, 5, 58, 3, 64, 1, 70], [1, 8, 3, 14, 5, 20, 7, 26, 8, 32, 7, 38, 5, 44, 3, 50, 1, 56], [1, 6, 2, 12, 5, 18, 7, 24, 9, 30, 8, 36, 7, 42, 4, 48, 2, 54], [1, 14, 2, 20, 5, 26, 7, 32, 9, 38, 8, 44, 7, 50, 4, 56, 2, 62], [1, 22, 2, 28, 5, 34, 7, 40, 9, 46, 8, 52, 7, 58, 4, 64, 2, 70], [2, 18, 4, 24, 7, 30, 8, 36, 9, 42, 7, 48, 5, 54, 2, 60, 1, 66], [2, 10, 4, 16, 7, 22, 8, 28, 9, 34, 7, 40, 5, 46, 2, 52, 1, 58], [2, 26, 4, 32, 7, 38, 8, 44, 9, 50, 7, 56, 5, 62, 2, 68, 1, 74], [1, 15, 3, 21, 6, 27, 9, 33, 11, 39, 11, 45, 9, 51, 6, 57, 3, 63, 1, 69], [2, 12, 4, 18, 8, 24, 10, 30, 12, 36, 10, 42, 8, 48, 4, 54, 2, 60], [1, 7, 3, 13, 6, 19, 9, 25, 11, 31, 11, 37, 9, 43, 6, 49, 3, 55, 1, 61], [1, 15, 3, 21, 6, 27, 9, 33, 11, 39, 11, 45, 9, 51, 6, 57, 3, 63, 1, 69], [1, 17, 3, 23, 6, 29, 9, 35, 11, 41, 11, 47, 9, 53, 6, 59, 3, 65, 1, 71], [1, 11, 3, 17, 6, 23, 9, 29, 11, 35, 11, 41, 9, 47, 6, 53, 3, 59, 1, 65], [1, 9, 3, 15, 6, 21, 9, 27, 11, 33, 11, 39, 9, 45, 6, 51, 3, 57, 1, 63], [1, 19, 3, 25, 6, 31, 9, 37, 11, 43, 11, 49, 9, 55, 6, 61, 3, 67, 1, 73], [1, 13, 3, 19, 6, 25, 9, 31, 11, 37, 11, 43, 9, 49, 6, 55, 3, 61, 1, 67], [1, 11, 3, 17, 6, 23, 9, 29, 11, 35, 11, 41, 9, 47, 6, 53, 3, 59, 1, 65], [2, 20, 4, 26, 8, 32, 10, 38, 12, 44, 10, 50, 8, 56, 4, 62, 2, 68], [2, 16, 4, 22, 8, 28, 10, 34, 12, 40, 10, 46, 8, 52, 4, 58, 2, 64], [1, 18, 3, 24, 6, 30, 10, 36, 12, 42, 12, 48, 10, 54, 6, 60, 3, 66, 1, 72], [2, 21, 5, 27, 8, 33, 11, 39, 12, 45, 11, 51, 8, 57, 5, 63, 2, 69], [1, 8, 3, 14, 6, 20, 10, 26, 12, 32, 12, 38, 10, 44, 6, 50, 3, 56, 1, 62], [2, 16, 5, 22, 8, 28, 11, 34, 12, 40, 11, 46, 8, 52, 5, 58, 2, 64], [1, 13, 3, 19, 6, 25, 10, 31, 12, 37, 12, 43, 10, 49, 6, 55, 3, 61, 1, 67], [2, 11, 5, 17, 8, 23, 11, 29, 12, 35, 11, 41, 8, 47, 5, 53, 2, 59], [1, 9, 4, 15, 8, 21, 12, 27, 15, 33, 15, 39, 12, 45, 8, 51, 4, 57, 1, 63], [1, 13, 4, 19, 8, 25, 12, 31, 15, 37, 15, 43, 12, 49, 8, 55, 4, 61, 1, 67], [1, 17, 4, 23, 8, 29, 12, 35, 15, 41, 15, 47, 12, 53, 8, 59, 4, 65, 1, 71], [1, 12, 4, 18, 7, 24, 12, 30, 14, 36, 15, 42, 12, 48, 9, 54, 5, 60, 2, 66], [2, 14, 5, 20, 9, 26, 12, 32, 15, 38, 14, 44, 12, 50, 7, 56, 4, 62, 1, 68], [1, 10, 2, 16, 6, 22, 10, 28, 14, 34, 15, 40, 14, 46, 10, 52, 6, 58, 2, 64, 1, 70]])
chevieset(:G32, :HeckeRepresentation, function (para, root, i)
        local u, v, w, f1, f4, f5, f6, f10, f15a, f15b, rep
        u = (para[1])[1]
        v = (para[1])[2]
        w = (para[1])[3]
        f1 = (u->begin
                    [[[u]], [[u]], [[u]], [[u]]]
                end)
        f4(w, v) = begin
                return WGraph2Representation([[[1], [2], [3], [4]], [[1, 2, w, -v], [2, 3, w, -v], [3, 4, w, -v]]], [w, v])
            end
        f5(u, w, v) = begin
                return u ^ 0 * v ^ 0 * w ^ 0 * WGraph2Representation([[[1, 3], [1, 4], [2], [2, 4], [3]], [[1, 2, u, -w], [1, 3, u, -w], [1, 5, u, 0], [2, 4, u, -w], [3, 4, 0, -w], [4, 5, -w, u]]], [u, w])
            end
        f6(v, w) = begin
                return map((x->begin
                                ExteriorPower(x, 2) // w
                            end), f4(v, w) + 0 * v * w)
            end
        f10(u, w, v) = begin
                return WGraph2Representation([[[[2], []], [[], [1, 2]], [[1], []], [[], [2, 3]], [[3], []], [[], [1, 3]], [[], [2, 4]], [[], [1, 4]], [[], [3, 4]], [[4], []]], [[1, 2, -1, u * v + w ^ 2], [1, 3, w, w], [1, 4, 1, -u * v - w ^ 2], [1, 5, w, w], [1, 6, v, 0], [2, 3, -u * v - w ^ 2, 1], [2, 6, -v * w, 1], [4, 5, u * v + w ^ 2, -1], [4, 6, v * w, -1], [4, 7, -v * w, 1], [5, 7, v, 0], [5, 9, -1, u * v + w ^ 2], [5, 10, -w, -w], [6, 8, v, -w], [7, 8, -v, w], [7, 9, 1, -v * w], [9, 10, u * v + w ^ 2, -1]]], [u, w, v])
            end
        f15a(v, u, w) = begin
                return WGraph2Representation([[[[2, 3], []], [[3], [1, 2]], [[1, 3], []], [[2], [1, 3, 4]], [[1], [2, 3, 4]], [[1, 2, 4], []], [[2], [3, 4]], [[3], [1, 2, 4]], [[1, 3], [4]], [[2, 4], [1]], [[1, 4], [2, 3]], [[], [1, 2, 3, 4]], [[2, 4], []], [[4], [1, 2, 3]], [[1, 3, 4], []]], [[1, 2, -v, v ^ -1 * w ^ 2 + u], [1, 3, w, w], [1, 7, v, -(v ^ -1) * w ^ 2 - u], [1, 13, w, w], [2, 3, -(v ^ -1) * w ^ 2 - u, v], [2, 4, v, [2, -w, 4, -u]], [2, 8, 0, -u], [2, 10, w, [2, 0, 4, w]], [2, 12, w, -w], [2, 14, 0, w], [3, 4, 0, [2, v ^ -1 * w ^ 2 + u, 4, 0]], [3, 5, v, -(v ^ -1) * w ^ 2 - u], [3, 6, w, w], [3, 9, 0, -(v ^ -1) * w ^ 2 - u], [3, 11, 0, [2, 0, 4, v ^ -1 * w ^ 2 + u]], [3, 15, 0, w], [4, 5, -w, v], [4, 7, u, 0], [4, 10, u, -v], [4, 12, w - u * v * w ^ -1, 0], [5, 6, v ^ -1 * w ^ 2 + u, -v], [5, 7, w, 0], [5, 11, 0, -w], [5, 12, w, 0], [6, 10, v, 0], [6, 13, w, 0], [7, 8, -v, [1, u, 3, w]], [7, 9, w, [1, w, 3, 0]], [7, 12, -w, w], [7, 13, v ^ -1 * w ^ 2 + u, -v], [8, 9, -u, v], [8, 12, w - u * v * w ^ -1, 0], [8, 13, [1, 0, 3, v ^ -1 * w ^ 2 + u], 0], [8, 14, w, -v], [9, 10, [1, 0, 3, w], [2, w, 4, 0]], [9, 11, v, [2, -u, 4, -w]], [9, 12, w, -w], [9, 15, 0, -v], [10, 11, -v, [1, w, 3, u]], [10, 12, -w, w], [10, 13, v ^ -1 * w ^ 2 + u, 0], [11, 12, w - u * v * w ^ -1, 0], [11, 13, [1, v ^ -1 * w ^ 2 + u, 3, 0], 0], [11, 14, w, 0], [12, 14, 0, -w], [13, 14, -v, v ^ -1 * w ^ 2 + u], [13, 15, w, w], [14, 15, -(v ^ -1) * w ^ 2 - u, v]]], [v, w, u])
            end
        f15b(v, w, u) = begin
                return WGraph2Representation([[[[2], []], [[], [1, 2]], [[1], []], [[2], []], [[], [2, 3]], [[3], [1]], [[3], []], [[1], [3]], [[], [3, 4]], [[1], [4]], [[4], [1]], [[2], [4]], [[4], [2]], [[3], []], [[4], []]], [[1, 2, -1, u * v + w ^ 2], [1, 3, w, w], [1, 5, -1, u * v + v * w], [1, 6, 0, [1, 0, 3, v * w - v ^ 2]], [1, 7, 1, v * w], [1, 8, 1, 0], [2, 3, -u * v - w ^ 2, 1], [2, 4, u, 0], [2, 6, 0, v], [2, 8, -w, [1, 0, 3, u]], [3, 8, 0, u * v - u * w], [4, 5, v - w, w], [4, 6, u, [1, 0, 3, -v]], [4, 7, -v + w, w], [4, 8, -v, [1, u, 3, 0]], [4, 12, 0, -w], [5, 6, -u, [1, w, 3, 0]], [5, 7, -w - u * v * w ^ -1, w], [5, 8, 0, u], [5, 12, u, [2, 0, 4, -w]], [5, 13, 0, w], [5, 14, -u * v * w ^ -1, 0], [6, 7, v - w, 0], [6, 11, -v, u], [6, 14, v, 0], [7, 9, -v, u + w], [7, 12, u, 0], [7, 13, 0, [2, 0, 4, v - w]], [7, 15, v, w], [8, 10, u, -w], [9, 12, 0, v], [9, 13, u, [2, -w, 4, 0]], [9, 14, w, v - w], [9, 15, -w - u * v * w ^ -1, w], [10, 12, u, -v], [11, 13, u, -w], [12, 14, [2, v, 4, 0], -u], [13, 14, [2, 0, 4, v], -u], [13, 15, -v + w, 0], [14, 15, -v + w, w]]], [v, w, u])
            end
        rep = [[f1, u], [f1, w], [f1, v], [f4, v, w], [f4, u, v], [f4, w, u], [f4, w, v], [f4, u, w], [f4, v, u], [f5, u, w, v], [f5, w, v, u], [f5, v, u, w], [f5, u, v, w], [f5, v, w, u], [f5, w, u, v], [f6, v, w], [f6, u, v], [f6, w, u], [f10, u, w, v], [f10, w, v, u], [f10, v, u, w], [f10, u, v, w], [f10, v, w, u], [f10, w, u, v], [f15a, v, u, w], [f15b, v, w, u], [f15a, v, w, u], [f15a, u, v, w], [f15b, u, v, w], [f15b, w, u, v]]
        if i <= length(rep)
            return ApplyFunc((rep[i])[1], (rep[i])[2:length(rep[i])]) + 0 * Product(para[1])
        else
            return false
        end
    end)
chevieset(:G32, :CachedRepresentations, Dict{Symbol, Any}())
chevieset(:G32, :Representation, function (i,)
        local para, r, f, J, cached
        J = E(3)
        r = (chevieget(:G32, :HeckeRepresentation))(map((i->begin
                            [1, J, J ^ 2]
                        end), 1:4), [], i)
        if r != false
            return r
        end
        cached = chevieget(:G32, :CachedRepresentations)
        f(i) = begin
                InfoChevie("#I calling rep(", i, ")\n")
                if !(haskey(cached, (i,)))
                    cached[Symbol(i)] = (chevieget(:G32, :Representation))(i)
                end
                return cached[Symbol(i)]
            end
        if i < 80
            if i == 31
                r = map(KroneckerProduct, f(4), f(15))
            elseif i == 32
                r = map((x->begin
                                SchurFunctor(x, [2, 2])
                            end), f(5))
            elseif i == 33
                r = J * f(34)
            elseif i == 34
                r = map((x->begin
                                SymmetricPower(x, 3)
                            end), f(4))
            elseif i == 35
                r = J ^ 2 * f(34)
            elseif i == 36
                r = conj(f(33))
            elseif i == 37
                r = J * f(36)
            elseif i == 38
                r = J ^ 2 * f(36)
            elseif i == 39
                r = map((x->begin
                                SchurFunctor(x, [2, 2, 1])
                            end), f(6))
            elseif i == 40
                r = J ^ 2 * f(39)
            elseif i == 41
                r = J * f(39)
            elseif i == 42
                r = conj(f(39))
            elseif i == 43
                r = J * f(42)
            elseif i == 44
                r = J ^ 2 * f(42)
            elseif i == 45
                r = J * f(31)
            elseif i == 46
                r = J ^ 2 * f(31)
            elseif i == 47
                r = J ^ 2 * f(32)
            elseif i == 48
                r = J * f(32)
            elseif i == 49
                r = map((x->begin
                                SchurFunctor(x, [2, 1, 1, 1])
                            end), f(10))
            elseif i == 50
                r = J ^ 2 * f(49)
            elseif i == 52
                r = ExpandRep(4, 30, [[-1, 157, 212, 337, 339, 354, 479, 736, 741, 749, 881, 889, 895, 1036, 1248, 1264, 1293, 1297, 1298, 1314, 1315, 1316, 1339, 1378, 1475, 1521, 1538, 1541, 1542, 1545, 1555, 1571, 1631, 1635, 1645, 1797, 1798, 1799, 1901, 1909, 1915, 1995, 2042, 2045, 2046, 2050, 2062, 2068, 2187, 2188, 2189, 2225, 2236, 2241, 2243, 2248, 2249, 2251, 2566, 2571, 2579, 2645, 2656, 2661, 2668, 2669, 2705, 2774, 2822, 2862, 2887, 2889, 2904, 3018, 3037, 3232, 3316, 3321, 3329, 3345, 3371, 3375, 3385, 3410, 3430, 3477, 3536], [1, 1, 34, 65, 96, 120, 193, 254, 286, 323, 342, 343, 345, 350, 352, 368, 393, 432, 499, 527, 560, 579, 626, 641, 682, 717, 722, 723, 728, 742, 746, 774, 798, 820, 868, 875, 876, 884, 888, 892, 902, 938, 969, 1000, 1064, 1086, 1111, 1147, 1170, 1217, 1295, 1306, 1311, 1318, 1319, 1350, 1351, 1353, 1354, 1356, 1358, 1362, 1363, 1364, 1367, 1368, 1370, 1372, 1376, 1392, 1413, 1462, 1535, 1536, 1539, 1540, 1546, 1547, 1548, 1553, 1557, 1558, 1559, 1603, 1625, 1626, 1629, 1634, 1636, 1637, 1638, 1649, 1675, 1706, 1737, 1769, 1771, 1777, 1778, 1795, 1796, 1803, 1836, 1862, 1895, 1896, 1904, 1908, 1912, 1933, 1955, 2017, 2044, 2051, 2059, 2064, 2065, 2096, 2109, 2142, 2161, 2167, 2168, 2185, 2186, 2219, 2220, 2222, 2223, 2228, 2232, 2235, 2240, 2242, 2246, 2298, 2327, 2363, 2390, 2427, 2444, 2488, 2506, 2545, 2552, 2553, 2558, 2572, 2576, 2590, 2629, 2643, 2647, 2648, 2664, 2665, 2666, 2674, 2737, 2801, 2892, 2893, 2895, 2900, 2902, 2918, 2941, 2989, 3034, 3043, 3047, 3049, 3050, 3057, 3059, 3060, 3111, 3124, 3165, 3189, 3264, 3286, 3302, 3303, 3308, 3322, 3326, 3331, 3335, 3336, 3346, 3347, 3348, 3353, 3365, 3366, 3369, 3374, 3376, 3377, 3378, 3389, 3505, 3568, 3599]])
            elseif i == 51
                r = J * f(49)
            elseif i == 53
                r = map(KroneckerProduct, f(10), f(16))
            elseif i == 54
                r = J ^ 2 * f(53)
            elseif i == 55
                r = J * f(53)
            elseif i == 56
                r = conj(f(53))
            elseif i == 57
                r = J * f(56)
            elseif i == 58
                r = J ^ 2 * f(56)
            elseif i == 59
                r = J ^ 2 * f(52)
            elseif i == 60
                r = J * f(52)
            elseif i == 61
                r = map((x->begin
                                SchurFunctor(x, [3, 1, 1])
                            end), f(7))
            elseif i == 62
                r = J ^ 2 * f(61)
            elseif i == 63
                r = J * f(61)
            elseif i == 64
                r = conj(f(61))
            elseif i == 65
                r = J * f(64)
            elseif i == 66
                r = J ^ 2 * f(64)
            elseif i == 67
                r = map((x->begin
                                SchurFunctor(x, [2, 1])
                            end), f(13))
            elseif i == 68
                r = J ^ 2 * f(67)
            elseif i == 69
                r = J * f(67)
            elseif i == 70
                r = conj(f(67))
            elseif i == 71
                r = J * f(70)
            elseif i == 72
                r = J ^ 2 * f(70)
            elseif i == 73
                r = map((x->begin
                                ExteriorPower(x, 2)
                            end), f(22))
            elseif i == 74
                r = J ^ 2 * f(73)
            elseif i == 75
                r = J * f(73)
            elseif i == 76
                r = conj(f(73))
            elseif i == 77
                r = J * f(76)
            elseif i == 78
                r = J ^ 2 * f(76)
            elseif i == 79
                r = map((x->begin
                                SchurFunctor(x, [3, 2])
                            end), f(5))
            end
        else
            if i == 80
                r = ExpandRep(4, 60, [[-3, 1313, 2813, 3173, 8508, 10008, 10368, 13616, 13976], [-2, 444, 504, 1610, 3867, 3897, 4093, 4157, 6396, 6756, 7709, 7740, 11078, 11098, 11336, 11816, 12056, 12116], [-1, 13, 60, 89, 125, 133, 135, 152, 208, 242, 253, 270, 272, 298, 299, 313, 366, 405, 410, 430, 476, 480, 509, 518, 533, 553, 600, 633, 658, 726, 729, 733, 770, 773, 804, 898, 915, 924, 949, 984, 1013, 1015, 1073, 1118, 1193, 1224, 1229, 1250, 1253, 1271, 1392, 1393, 1412, 1464, 1515, 1516, 1566, 1573, 1578, 1619, 1640, 1701, 1738, 1764, 1777, 1824, 1890, 1892, 1949, 1958, 1970, 1980, 1990, 2004, 2038, 2067, 2072, 2093, 2217, 2244, 2249, 2330, 2359, 2370, 2401, 2500, 2531, 2572, 2604, 2653, 2666, 2784, 2828, 2893, 2927, 2933, 2953, 2998, 2999, 3029, 3144, 3204, 3233, 3264, 3279, 3293, 3315, 3324, 3329, 3338, 3351, 3442, 3504, 3607, 3648, 3665, 3673, 3692, 3696, 3737, 3759, 3768, 3771, 3773, 3779, 3797, 3807, 3837, 3857, 3875, 3879, 3889, 3892, 3893, 3930, 3948, 4032, 4033, 4056, 4065, 4081, 4092, 4110, 4116, 4146, 4188, 4196, 4205, 4219, 4222, 4227, 4232, 4296, 4350, 4361, 4393, 4416, 4456, 4459, 4492, 4522, 4525, 4571, 4573, 4576, 4579, 4590, 4596, 4633, 4656, 4670, 4686, 4688, 4697, 4728, 4731, 4813, 4830, 4836, 4873, 4876, 4890, 4891, 4892, 4896, 4986, 5019, 5023, 5031, 5032, 5055, 5122, 5176, 5177, 5179, 5190, 5296, 5299, 5353, 5376, 5419, 5429, 5430, 5436, 5474, 5487, 5492, 5499, 5509, 5512, 5513, 5517, 5533, 5537, 5540, 5591, 5592, 5596, 5599, 5632, 5653, 5672, 5676, 5692, 5771, 5833, 5899, 5910, 5934, 5957, 5979, 5991, 5993, 6013, 6036, 6048, 6108, 6149, 6176, 6179, 6197, 6227, 6246, 6259, 6270, 6306, 6336, 6348, 6351, 6372, 6373, 6376, 6390, 6392, 6437, 6450, 6468, 6510, 6528, 6551, 6559, 6567, 6589, 6594, 6597, 6613, 6733, 6750, 6752, 6754, 6810, 6816, 6853, 6876, 6877, 6913, 6917, 6938, 6951, 7097, 7135, 7176, 7240, 7289, 7301, 7320, 7378, 7380, 7387, 7440, 7445, 7447, 7464, 7478, 7490, 7498, 7544, 7582, 7642, 7649, 7656, 7715, 7721, 7728, 7747, 7755, 7794, 7822, 7824, 7841, 7942, 7968, 8009, 8064, 8106, 8115, 8169, 8189, 8208, 8249, 8268, 8280, 8315, 8331, 8365, 8388, 8429, 8448, 8488, 8489, 8585, 8712, 8722, 8760, 8782, 8825, 8904, 8926, 8969, 9098, 9110, 9118, 9120, 9149, 9155, 9202, 9204, 9221, 9269, 9288, 9449, 9540, 9578, 9598, 9629, 9731, 9741, 9780, 9787, 9988, 9989, 10020, 10040, 10107, 10128, 10147, 10164, 10185, 10189, 10190, 10229, 10262, 10309, 10348, 10349, 10427, 10428, 10469, 10488, 10500, 10504, 10505, 10515, 10529, 10535, 10617, 10679, 10680, 10687, 10800, 10868, 10905, 10916, 10920, 10943, 10958, 10969, 10970, 10974, 10991, 11001, 11019, 11038, 11040, 11046, 11055, 11069, 11071, 11079, 11100, 11112, 11166, 11179, 11225, 11276, 11298, 11307, 11316, 11325, 11340, 11371, 11376, 11378, 11424, 11463, 11481, 11499, 11516, 11520, 11636, 11796, 11805, 11865, 11876, 11907, 11916, 11925, 11930, 12036, 12045, 12105, 12112, 12135, 12180, 12213, 12230, 12324, 12335, 12360, 12366, 12379, 12389, 12396, 12536, 12585, 12596, 12656, 12694, 12698, 12699, 12718, 12726, 12739, 12747, 12756, 12765, 12776, 12785, 12885, 12896, 12922, 12976, 13037, 13065, 13076, 13100, 13116, 13190, 13245, 13247, 13256, 13308, 13339, 13348, 13374, 13391, 13401, 13440, 13545, 13550, 13605, 13646, 13651, 13656, 13665, 13680, 13724, 13740, 13769, 13771, 13778, 13798, 13806, 13845, 13856, 13916, 13965, 14036, 14085, 14090, 14096, 14127, 14132, 14136, 14145, 14216, 14275, 14311, 14318, 14377], [1, 0, 7, 10, 24, 56, 73, 101, 110, 116, 120, 130, 144, 149, 158, 171, 178, 191, 240, 255, 304, 310, 315, 324, 329, 330, 338, 351, 360, 389, 433, 510, 512, 528, 536, 538, 546, 550, 563, 572, 593, 596, 598, 624, 659, 671, 720, 749, 750, 758, 771, 778, 793, 958, 973, 975, 990, 992, 1016, 1033, 1071, 1079, 1086, 1090, 1112, 1124, 1136, 1138, 1139, 1194, 1213, 1230, 1232, 1234, 1251, 1256, 1258, 1259, 1263, 1273, 1290, 1311, 1312, 1356, 1386, 1418, 1430, 1433, 1454, 1498, 1529, 1538, 1553, 1560, 1589, 1590, 1592, 1611, 1658, 1670, 1673, 1732, 1753, 1790, 1798, 1799, 1830, 1884, 1898, 1910, 1933, 1952, 1955, 1976, 2039, 2053, 2078, 2090, 2099, 2138, 2216, 2219, 2233, 2270, 2278, 2279, 2310, 2311, 2312, 2393, 2410, 2413, 2450, 2456, 2460, 2470, 2484, 2489, 2566, 2591, 2622, 2638, 2646, 2670, 2678, 2691, 2706, 2710, 2750, 2756, 2758, 2773, 2790, 2803, 2811, 2812, 2830, 2850, 2852, 2873, 2876, 2878, 2880, 2890, 2904, 2909, 2910, 2918, 2931, 2938, 2955, 2964, 3013, 3056, 3111, 3133, 3150, 3171, 3172, 3178, 3197, 3210, 3238, 3239, 3253, 3291, 3298, 3313, 3325, 3332, 3353, 3356, 3358, 3359, 3416, 3476, 3479, 3538, 3599, 3612, 3613, 3677, 3678, 3687, 3709, 3716, 3717, 3719, 3725, 3731, 3732, 3733, 3739, 3762, 3774, 3809, 3836, 3839, 3850, 3852, 3853, 3862, 3869, 3870, 3876, 3896, 3912, 3913, 3944, 3966, 4037, 4047, 4059, 4068, 4073, 4077, 4097, 4119, 4129, 4132, 4133, 4136, 4139, 4144, 4152, 4153, 4159, 4167, 4172, 4175, 4176, 4192, 4209, 4217, 4316, 4319, 4325, 4326, 4333, 4397, 4407, 4437, 4457, 4461, 4493, 4497, 4519, 4527, 4535, 4587, 4588, 4599, 4609, 4616, 4619, 4637, 4676, 4677, 4692, 4699, 4707, 4712, 4729, 4732, 4734, 4737, 4759, 4827, 4839, 4849, 4852, 4856, 4857, 4859, 4887, 4899, 4909, 4913, 4916, 4942, 4992, 4993, 5034, 5059, 5067, 5124, 5135, 5165, 5166, 5173, 5192, 5193, 5212, 5247, 5297, 5333, 5337, 5357, 5367, 5379, 5389, 5393, 5397, 5417, 5427, 5453, 5457, 5476, 5479, 5490, 5516, 5552, 5572, 5576, 5579, 5597, 5626, 5628, 5633, 5637, 5693, 5696, 5697, 5735, 5816, 5819, 5839, 5847, 5849, 5869, 5876, 5879, 5919, 5932, 5938, 5939, 5959, 5970, 5994, 6002, 6017, 6027, 6049, 6053, 6072, 6160, 6185, 6209, 6212, 6252, 6253, 6300, 6312, 6319, 6327, 6349, 6354, 6357, 6386, 6387, 6399, 6409, 6416, 6432, 6443, 6447, 6452, 6469, 6472, 6479, 6485, 6492, 6493, 6543, 6553, 6576, 6591, 6656, 6659, 6711, 6747, 6759, 6769, 6773, 6776, 6797, 6807, 6819, 6829, 6833, 6837, 6859, 6867, 6869, 6889, 6894, 6896, 6897, 6919, 6932, 6949, 6952, 6957, 6959, 7016, 7077, 7099, 7107, 7109, 7112, 7116, 7197, 7222, 7229, 7236, 7241, 7260, 7267, 7282, 7296, 7310, 7324, 7335, 7338, 7344, 7349, 7355, 7361, 7369, 7391, 7408, 7422, 7455, 7466, 7469, 7481, 7504, 7505, 7515, 7529, 7535, 7538, 7575, 7601, 7620, 7621, 7627, 7678, 7680, 7685, 7687, 7702, 7704, 7714, 7716, 7718, 7730, 7738, 7764, 7769, 7776, 7788, 7800, 7871, 7924, 7925, 7935, 7939, 7944, 7949, 7955, 7958, 7961, 7980, 7987, 8017, 8040, 8047, 8098, 8124, 8165, 8167, 8175, 8182, 8196, 8198, 8210, 8220, 8224, 8225, 8227, 8228, 8235, 8285, 8304, 8316, 8329, 8330, 8345, 8404, 8405, 8407, 8415, 8422, 8424, 8436, 8438, 8450, 8453, 8464, 8475, 8481, 8498, 8503, 8510, 8518, 8542, 8609, 8615, 8619, 8628, 8629, 8664, 8735, 8748, 8764, 8765, 8789, 8798, 8801, 8855, 8868, 8880, 8887, 8891, 8901, 8938, 8940, 8947, 8950, 8962, 8964, 8990, 8998, 9000, 9007, 9031, 9038, 9058, 9092, 9095, 9142, 9150, 9156, 9180, 9193, 9238, 9247, 9257, 9275, 9298, 9335, 9396, 9442, 9444, 9453, 9470, 9518, 9588, 9589, 9595, 9600, 9607, 9622, 9636, 9650, 9658, 9701, 9772, 9804, 9808, 9844, 9855, 9869, 9875, 9878, 9924, 9936, 9949, 9950, 9964, 9971, 9975, 9981, 9998, 10010, 10042, 10044, 10056, 10058, 10068, 10070, 10084, 10085, 10095, 10104, 10109, 10115, 10118, 10121, 10169, 10207, 10222, 10236, 10264, 10265, 10275, 10323, 10324, 10335, 10341, 10344, 10358, 10370, 10378, 10380, 10385, 10404, 10418, 10430, 10438, 10444, 10445, 10456, 10464, 10490, 10523, 10524, 10536, 10548, 10549, 10550, 10582, 10596, 10642, 10656, 10694, 10704, 10796, 10805, 10860, 10879, 10891, 10914, 10918, 10925, 10947, 10956, 10976, 10999, 11008, 11034, 11049, 11076, 11096, 11105, 11106, 11119, 11127, 11220, 11250, 11251, 11258, 11278, 11311, 11319, 11334, 11345, 11346, 11350, 11359, 11364, 11379, 11396, 11404, 11415, 11429, 11438, 11479, 11488, 11491, 11498, 11514, 11547, 11580, 11587, 11611, 11618, 11638, 11654, 11671, 11678, 11698, 11706, 11715, 11760, 11774, 11799, 11809, 11814, 11820, 11849, 11851, 11858, 11878, 11879, 11881, 11885, 11886, 11909, 11919, 11938, 11946, 12000, 12029, 12031, 12038, 12054, 12058, 12060, 12066, 12071, 12081, 12139, 12144, 12145, 12194, 12199, 12207, 12216, 12236, 12264, 12315, 12327, 12400, 12439, 12447, 12508, 12511, 12518, 12538, 12540, 12569, 12571, 12578, 12579, 12593, 12598, 12613, 12631, 12638, 12658, 12679, 12687, 12696, 12720, 12774, 12777, 12782, 12794, 12809, 12811, 12829, 12838, 12840, 12859, 12867, 12869, 12871, 12876, 12878, 12898, 12919, 12927, 12974, 12989, 12998, 13009, 13014, 13020, 13039, 13049, 13074, 13118, 13130, 13134, 13196, 13200, 13205, 13231, 13239, 13265, 13341, 13359, 13363, 13376, 13426, 13459, 13467, 13481, 13505, 13506, 13519, 13531, 13538, 13539, 13558, 13560, 13566, 13571, 13588, 13602, 13625, 13659, 13674, 13685, 13707, 13785, 13789, 13790, 13800, 13854, 13920, 13926, 13931, 13986, 14009, 14011, 14018, 14038, 14040, 14071, 14078, 14098, 14100, 14129, 14138, 14139, 14154, 14158, 14211, 14249, 14258, 14259, 14278, 14369, 14371, 14378, 14398], [2, 119, 264, 493, 539, 1019, 1319, 2459, 2759, 2819, 3179, 3299, 4107, 4137, 4577, 4613, 4617, 4917, 5657, 6057, 6413, 6777, 6927, 7762, 8160, 8218, 8302, 8465, 8467, 8775, 9240, 9922, 9965, 9967, 10018, 10325, 10327, 10455, 10522, 10889, 10898, 11280, 11309, 11318, 11338, 11789, 11791, 11818, 12089, 12091, 12098, 12118, 12818, 13229, 13238, 13258, 13529, 13589, 13949, 13951, 13958, 13978, 14069], [3, 4877, 6377, 6417, 6737, 8460, 9960, 10320, 11798, 13591, 13598, 13618]])
            elseif i == 81
                r = map(KroneckerProduct, f(4), f(25))
            elseif i == 82
                r = J ^ 2 * f(81)
            elseif i == 83
                r = J * f(81)
            elseif i == 84
                r = conj(f(81))
            elseif i == 85
                r = J * f(84)
            elseif i == 86
                r = J ^ 2 * f(84)
            elseif i == 87
                r = J * f(79)
            elseif i == 88
                r = J ^ 2 * f(79)
            elseif i == 89
                r = J ^ 2 * f(80)
            elseif i == 90
                r = J * f(80)
            elseif i == 91
                r = ExpandRep(4, 64, [[-4, 1829, 1830, 2917, 2918, 5920, 7008], [-3, 2981, 2982, 5943, 7031, 7072, 14134, 15222], [-2, 649, 997, 998, 1381, 1392, 1663, 1855, 1893, 1894, 2213, 2214, 2725, 2726, 2899, 2912, 2943, 3007, 3475, 3493, 3494, 3628, 3644, 3941, 3942, 3967, 5088, 5668, 5984, 6304, 6327, 6816, 7095, 7584, 7710, 7715, 8032, 8055, 8885, 9586, 9893, 10098, 11792, 11808, 14518, 15286, 15913, 16246], [-1, 73, 74, 83, 101, 102, 105, 109, 114, 117, 120, 121, 146, 147, 160, 172, 181, 182, 185, 188, 204, 252, 273, 319, 322, 325, 329, 357, 358, 361, 387, 393, 394, 425, 429, 434, 440, 441, 458, 467, 472, 485, 486, 501, 511, 549, 565, 620, 650, 681, 685, 690, 696, 718, 737, 745, 748, 761, 764, 785, 864, 886, 928, 951, 953, 956, 970, 971, 979, 992, 1005, 1040, 1043, 1046, 1050, 1072, 1077, 1087, 1097, 1098, 1125, 1126, 1129, 1133, 1138, 1144, 1161, 1170, 1193, 1196, 1209, 1212, 1264, 1333, 1340, 1382, 1407, 1422, 1441, 1445, 1446, 1461, 1522, 1525, 1532, 1549, 1550, 1564, 1568, 1569, 1573, 1574, 1589, 1590, 1610, 1614, 1629, 1637, 1638, 1648, 1673, 1690, 1712, 1714, 1720, 1727, 1747, 1765, 1766, 1776, 1781, 1787, 1791, 1802, 1811, 1820, 1824, 1840, 1870, 1884, 1889, 1904, 1919, 1953, 1968, 1999, 2008, 2039, 2080, 2103, 2135, 2160, 2162, 2204, 2208, 2239, 2270, 2275, 2284, 2300, 2313, 2352, 2366, 2423, 2464, 2514, 2540, 2579, 2592, 2613, 2614, 2620, 2638, 2657, 2672, 2720, 2751, 2771, 2800, 2906, 2908, 2928, 2933, 2954, 2972, 2976, 2995, 3036, 3040, 3045, 3046, 3104, 3109, 3110, 3111, 3127, 3155, 3162, 3178, 3185, 3186, 3189, 3192, 3199, 3232, 3243, 3255, 3311, 3327, 3349, 3368, 3380, 3383, 3401, 3406, 3425, 3433, 3436, 3449, 3488, 3504, 3509, 3510, 3539, 3557, 3558, 3568, 3598, 3602, 3617, 3625, 3634, 3637, 3641, 3667, 3685, 3686, 3701, 3737, 3752, 3760, 3762, 3775, 3790, 3809, 3810, 3817, 3872, 3895, 3914, 3918, 3932, 3937, 3952, 4016, 4018, 4023, 4028, 4029, 4089, 4110, 4140, 4153, 4192, 4217, 4224, 4227, 4260, 4272, 4336, 4351, 4448, 4525, 4576, 4599, 4674, 4688, 4700, 4716, 4746, 4781, 4795, 4848, 4857, 4902, 5040, 5069, 5111, 5180, 5216, 5241, 5296, 5316, 5331, 5447, 5472, 5495, 5517, 5532, 5536, 5540, 5555, 5598, 5603, 5616, 5645, 5647, 5656, 5660, 5664, 5683, 5687, 5721, 5728, 5751, 5770, 5805, 5819, 5820, 5837, 5852, 5856, 5860, 5875, 5879, 5901, 5904, 5916, 5965, 5968, 5980, 5988, 6003, 6006, 6007, 6064, 6069, 6078, 6116, 6131, 6158, 6285, 6288, 6300, 6311, 6328, 6332, 6566, 6595, 6605, 6608, 6609, 6628, 6631, 6651, 6692, 6704, 6741, 6772, 6773, 6797, 6800, 6812, 6820, 6835, 6839, 6840, 6896, 6907, 6926, 6956, 6969, 6989, 7004, 7012, 7036, 7053, 7056, 7068, 7096, 7131, 7136, 7151, 7159, 7200, 7292, 7332, 7420, 7504, 7525, 7541, 7547, 7588, 7595, 7607, 7648, 7683, 7694, 7714, 7724, 7728, 7737, 7776, 7886, 7923, 8013, 8025, 8094, 8099, 8109, 8112, 8154, 8185, 8203, 8262, 8272, 8285, 8316, 8336, 8352, 8375, 8410, 8411, 8428, 8440, 8441, 8479, 8572, 8582, 8605, 8636, 8646, 8690, 8700, 8712, 8734, 8784, 8787, 8790, 8794, 8800, 8821, 8831, 8835, 8838, 8861, 8868, 8869, 8876, 8889, 8892, 8894, 8912, 8925, 8928, 8956, 9009, 9010, 9019, 9036, 9102, 9104, 9121, 9158, 9253, 9265, 9266, 9286, 9309, 9340, 9360, 9376, 9379, 9404, 9457, 9458, 9461, 9502, 9514, 9527, 9528, 9566, 9585, 9589, 9655, 9672, 9728, 9750, 9778, 9783, 9786, 9798, 9822, 9836, 9840, 9842, 9845, 9882, 9886, 9898, 9900, 9909, 9910, 9912, 9913, 9970, 9990, 10003, 10006, 10014, 10034, 10047, 10067, 10070, 10078, 10097, 10106, 10111, 10142, 10189, 10226, 10234, 10341, 10353, 10354, 10357, 10387, 10390, 10418, 10431, 10464, 10467, 10481, 10485, 10532, 10533, 10547, 10549, 10704, 10707, 10720, 10726, 10741, 10751, 10807, 10808, 10825, 10846, 10857, 10899, 10902, 10930, 10943, 11030, 11034, 11094, 11102, 11122, 11142, 11155, 11158, 11186, 11199, 11230, 11250, 11365, 11442, 11506, 11557, 11600, 11603, 11616, 11622, 11637, 11644, 11678, 11698, 11742, 11756, 11814, 11831, 11832, 11836, 11941, 11942, 12016, 12026, 12102, 12126, 12146, 12197, 12207, 12222, 12380, 12392, 12401, 12418, 12442, 12480, 12483, 12556, 12624, 12661, 12668, 12700, 12712, 12721, 12752, 12770, 12790, 12839, 12840, 12873, 12927, 12944, 12956, 13020, 13032, 13045, 13052, 13068, 13234, 13237, 13244, 13275, 13295, 13297, 13302, 13330, 13404, 13416, 13425, 13493, 13500, 13608, 13648, 13686, 13688, 13731, 13736, 13749, 13756, 13801, 13859, 13869, 13878, 13903, 13912, 13937, 13942, 13970, 14051, 14070, 14077, 14129, 14155, 14179, 14189, 14198, 14229, 14248, 14307, 14322, 14323, 14325, 14386, 14389, 14396, 14580, 14581, 14706, 14709, 14739, 14758, 14786, 14793, 14804, 14888, 14952, 15011, 15030, 15063, 15148, 15161, 15186, 15261, 15281, 15350, 15410, 15413, 15420, 15442, 15521, 15538, 15541, 15665, 15666, 15740, 15760, 15784, 15798, 15848, 15851, 15874, 15881, 15910, 15925, 15932, 16031, 16049, 16099, 16117, 16124, 16178, 16216, 16241, 16263, 16297, 16306], [1, 4, 19, 53, 60, 64, 112, 118, 133, 137, 169, 176, 178, 191, 229, 230, 257, 300, 360, 368, 383, 428, 432, 438, 488, 505, 530, 556, 654, 668, 673, 680, 684, 693, 730, 735, 752, 774, 777, 812, 825, 839, 841, 873, 880, 882, 895, 904, 944, 946, 959, 973, 977, 1004, 1010, 1014, 1020, 1033, 1065, 1081, 1132, 1136, 1142, 1148, 1200, 1215, 1248, 1273, 1298, 1324, 1362, 1376, 1384, 1396, 1404, 1417, 1424, 1434, 1456, 1458, 1464, 1471, 1504, 1510, 1546, 1581, 1584, 1592, 1593, 1596, 1618, 1632, 1654, 1657, 1660, 1678, 1682, 1697, 1701, 1702, 1708, 1717, 1737, 1769, 1772, 1778, 1784, 1785, 1809, 1810, 1846, 1849, 1866, 1874, 1897, 1900, 1901, 1912, 1914, 1955, 1958, 1964, 1993, 2025, 2028, 2029, 2034, 2040, 2041, 2067, 2068, 2092, 2096, 2098, 2101, 2111, 2126, 2144, 2145, 2169, 2185, 2193, 2203, 2217, 2220, 2224, 2226, 2233, 2272, 2273, 2303, 2318, 2337, 2377, 2401, 2409, 2416, 2431, 2446, 2476, 2569, 2601, 2608, 2610, 2623, 2642, 2668, 2674, 2697, 2729, 2732, 2737, 2744, 2745, 2835, 2869, 2876, 2897, 2898, 2937, 2961, 2994, 2998, 3001, 3017, 3026, 3049, 3052, 3054, 3058, 3065, 3068, 3120, 3122, 3135, 3209, 3214, 3233, 3241, 3244, 3250, 3253, 3257, 3263, 3273, 3305, 3308, 3321, 3324, 3337, 3361, 3365, 3369, 3382, 3447, 3465, 3474, 3496, 3497, 3513, 3538, 3564, 3570, 3603, 3610, 3616, 3621, 3622, 3744, 3749, 3766, 3795, 3802, 3808, 3821, 3832, 3854, 3873, 3881, 3884, 3888, 3921, 3922, 3940, 3954, 3958, 3961, 3982, 3996, 4000, 4001, 4005, 4006, 4009, 4012, 4105, 4144, 4159, 4170, 4174, 4176, 4182, 4196, 4199, 4204, 4211, 4223, 4234, 4238, 4240, 4268, 4283, 4320, 4345, 4371, 4476, 4496, 4508, 4516, 4519, 4520, 4524, 4531, 4543, 4558, 4577, 4585, 4588, 4601, 4609, 4611, 4621, 4624, 4644, 4647, 4652, 4667, 4717, 4749, 4764, 4772, 4787, 4810, 4839, 4842, 4849, 4855, 4856, 4860, 4977, 4987, 4997, 5008, 5051, 5052, 5066, 5070, 5080, 5086, 5091, 5100, 5104, 5119, 5134, 5220, 5223, 5232, 5235, 5247, 5308, 5379, 5382, 5389, 5392, 5412, 5415, 5420, 5433, 5435, 5443, 5450, 5470, 5475, 5485, 5488, 5496, 5512, 5514, 5543, 5548, 5549, 5563, 5564, 5579, 5584, 5600, 5604, 5642, 5662, 5667, 5680, 5699, 5726, 5731, 5732, 5740, 5744, 5753, 5757, 5763, 5773, 5788, 5792, 5796, 5811, 5817, 5834, 5838, 5854, 5859, 5868, 5869, 5871, 5881, 5883, 5891, 5898, 5902, 5947, 5951, 5955, 5962, 6011, 6026, 6032, 6048, 6055, 6071, 6072, 6096, 6113, 6133, 6139, 6140, 6160, 6162, 6203, 6204, 6221, 6260, 6261, 6302, 6307, 6317, 6331, 6335, 6349, 6389, 6394, 6396, 6413, 6480, 6517, 6523, 6524, 6540, 6666, 6670, 6672, 6676, 6695, 6700, 6713, 6715, 6723, 6730, 6736, 6748, 6750, 6755, 6759, 6764, 6776, 6807, 6814, 6819, 6828, 6829, 6843, 6858, 6862, 6877, 6904, 6960, 6979, 7039, 7084, 7085, 7099, 7103, 7107, 7134, 7139, 7149, 7152, 7163, 7227, 7228, 7246, 7268, 7283, 7312, 7331, 7349, 7355, 7356, 7455, 7477, 7555, 7568, 7591, 7597, 7608, 7609, 7611, 7619, 7626, 7629, 7630, 7632, 7646, 7651, 7655, 7660, 7662, 7672, 7712, 7735, 7740, 7758, 7788, 7858, 7861, 7932, 7952, 7995, 8003, 8010, 8044, 8045, 8059, 8063, 8077, 8092, 8096, 8114, 8117, 8119, 8120, 8138, 8144, 8247, 8248, 8268, 8271, 8275, 8280, 8298, 8305, 8306, 8309, 8312, 8314, 8319, 8339, 8346, 8350, 8357, 8362, 8368, 8369, 8370, 8383, 8464, 8480, 8549, 8550, 8588, 8595, 8598, 8602, 8608, 8610, 8625, 8626, 8629, 8634, 8639, 8641, 8656, 8666, 8677, 8678, 8679, 8720, 8723, 8726, 8727, 8730, 8736, 8742, 8757, 8767, 8809, 8864, 8887, 8890, 8915, 8920, 8922, 8933, 8938, 8946, 8949, 8959, 8976, 8992, 9028, 9043, 9061, 9062, 9077, 9107, 9125, 9126, 9137, 9138, 9141, 9152, 9159, 9184, 9189, 9190, 9191, 9194, 9201, 9205, 9207, 9209, 9210, 9221, 9232, 9268, 9276, 9292, 9306, 9312, 9325, 9336, 9338, 9381, 9394, 9488, 9491, 9494, 9504, 9510, 9525, 9535, 9562, 9574, 9575, 9591, 9592, 9593, 9602, 9621, 9626, 9638, 9644, 9657, 9683, 9686, 9690, 9727, 9734, 9744, 9757, 9764, 9766, 9772, 9776, 9785, 9788, 9790, 9808, 9809, 9818, 9830, 9831, 9847, 9848, 9872, 9878, 9888, 9911, 9930, 9936, 9946, 9949, 9952, 9957, 9958, 9959, 9973, 9976, 9977, 9980, 9996, 10000, 10021, 10023, 10026, 10033, 10037, 10039, 10045, 10046, 10054, 10077, 10080, 10084, 10085, 10086, 10101, 10104, 10105, 10108, 10110, 10128, 10131, 10134, 10138, 10144, 10165, 10175, 10192, 10195, 10208, 10213, 10214, 10229, 10236, 10259, 10272, 10277, 10278, 10289, 10293, 10318, 10320, 10397, 10400, 10404, 10405, 10406, 10417, 10421, 10424, 10425, 10430, 10450, 10579, 10598, 10613, 10620, 10640, 10656, 10677, 10718, 10732, 10745, 10771, 10789, 10790, 10800, 10815, 10832, 10835, 10838, 10842, 10848, 10869, 10879, 10896, 10901, 10912, 10917, 10918, 10933, 10936, 10937, 10940, 10970, 10983, 10986, 10999, 11000, 11028, 11097, 11101, 11108, 11109, 11111, 11114, 11120, 11121, 11132, 11134, 11148, 11152, 11162, 11164, 11173, 11174, 11185, 11189, 11193, 11198, 11216, 11232, 11238, 11248, 11253, 11262, 11301, 11302, 11317, 11380, 11408, 11411, 11424, 11430, 11440, 11445, 11452, 11472, 11488, 11492, 11580, 11634, 11667, 11685, 11687, 11690, 11696, 11704, 11705, 11711, 11728, 11731, 11738, 11744, 11750, 11754, 11765, 11768, 11775, 11806, 11813, 11816, 11820, 11826, 11839, 11866, 11882, 11883, 11896, 11916, 11964, 12005, 12051, 12064, 12070, 12081, 12085, 12108, 12112, 12133, 12134, 12135, 12142, 12145, 12149, 12151, 12153, 12158, 12176, 12182, 12186, 12192, 12220, 12223, 12243, 12250, 12266, 12273, 12274, 12277, 12280, 12287, 12291, 12355, 12361, 12369, 12387, 12397, 12465, 12673, 12675, 12681, 12707, 12717, 12781, 12802, 12809, 12963, 12973, 13001, 13010, 13038, 13046, 13060, 13169, 13179, 13232, 13251, 13257, 13260, 13289, 13293, 13365, 13372, 13379, 13382, 13385, 13411, 13421, 13445, 13542, 13570, 13576, 13577, 13634, 13641, 13670, 13673, 13714, 13815, 13851, 13852, 13865, 13873, 13890, 13897, 13926, 13929, 13933, 13954, 13987, 14005, 14012, 14044, 14057, 14082, 14083, 14090, 14092, 14118, 14125, 14146, 14153, 14172, 14182, 14217, 14262, 14350, 14460, 14467, 14476, 14492, 14504, 14505, 14517, 14526, 14605, 14824, 14870, 14897, 14914, 14950, 14953, 15017, 15170, 15171, 15180, 15196, 15206, 15221, 15228, 15235, 15241, 15244, 15277, 15298, 15305, 15321, 15334, 15337, 15392, 15459, 15477, 15484, 15605, 15610, 15612, 15632, 15676, 15730, 15746, 15782, 15786, 15793, 15810, 15846, 15849, 15890, 15902, 15926, 15980, 16016, 16060, 16082, 16100, 16165, 16194, 16195, 16204, 16230, 16237, 16310, 16316, 16329], [2, 492, 767, 1388, 1401, 1577, 1586, 1644, 1836, 1842, 1865, 1906, 1913, 1916, 2236, 2738, 2748, 2889, 2921, 2924, 2988, 3500, 3506, 3632, 3647, 3948, 3964, 5677, 5691, 5932, 5933, 5982, 5987, 5997, 6000, 6320, 6832, 6986, 6990, 7020, 7021, 7035, 7070, 7075, 7562, 7566, 7582, 7587, 7596, 8030, 8035, 8048, 8080, 8282, 8373, 8672, 9178, 9208, 9552, 9568, 9637, 9653, 9765, 9824, 10010, 10016, 10022, 10041, 10064, 10805, 11088, 11098, 11104, 11129, 11168, 11192, 11664, 11674, 11680, 11686, 11701, 12122, 12128, 12152, 12179, 14089, 14185, 14921, 15177, 15273, 15753, 15785, 15817, 16201, 16233], [3, 1545, 1852, 2930, 2940, 3004, 5918, 5923, 5936, 7006, 7011, 7024, 7088, 9781, 10040, 11110, 11125, 11128, 14121, 15209]])
            elseif i == 92
                r = ExpandRep(4, 64, [[-2, 638, 4691, 8303, 8313, 12143, 12284, 12924], [-1, 22, 26, 41, 52, 69, 86, 116, 197, 210, 230, 262, 297, 300, 346, 381, 390, 436, 465, 534, 535, 564, 599, 621, 648, 658, 677, 678, 702, 782, 806, 906, 918, 948, 997, 1002, 1190, 1223, 1251, 1553, 1556, 1681, 1682, 1684, 1701, 1735, 1738, 1790, 1809, 1938, 1964, 2015, 2066, 2086, 2102, 2156, 2196, 2237, 2277, 2322, 2397, 2476, 2494, 2503, 2540, 2631, 2641, 2686, 2839, 2860, 2878, 2891, 2924, 2942, 2961, 3006, 3067, 3079, 3090, 3116, 3134, 3198, 3232, 3237, 3372, 3390, 3518, 3527, 3564, 3602, 3634, 3690, 3732, 3900, 3926, 3927, 3956, 4054, 4096, 4150, 4152, 4168, 4216, 4248, 4310, 4344, 4370, 4416, 4451, 4454, 4470, 4472, 4536, 4612, 4626, 4755, 4758, 4772, 4856, 4886, 4905, 4920, 5094, 5110, 5112, 5205, 5270, 5289, 5304, 5349, 5461, 5545, 5603, 5609, 5622, 5624, 5629, 5646, 5667, 5673, 5688, 5714, 5734, 5750, 5752, 5784, 5843, 5861, 5934, 5989, 6078, 6166, 6172, 6435, 6436, 6547, 6712, 6739, 6877, 6930, 6931, 6942, 6995, 7013, 7058, 7059, 7077, 7078, 7187, 7216, 7251, 7334, 7346, 7359, 7443, 7570, 7571, 7577, 7590, 7736, 7843, 7849, 8061, 8169, 8182, 8184, 8227, 8239, 8249, 8252, 8291, 8297, 8315, 8338, 8421, 8431, 8441, 8549, 8551, 8569, 8611, 8633, 8647, 8745, 8790, 8804, 8809, 8828, 8918, 8952, 8953, 8995, 9017, 9190, 9209, 9238, 9379, 9401, 9509, 9524, 9660, 9683, 9699, 9721, 9752, 9763, 9785, 9829, 9839, 9849, 10017, 10043, 10153, 10154, 10223, 10287, 10390, 10409, 10424, 10427, 10748, 10809, 10913, 10922, 10939, 10940, 11049, 11090, 11388, 11644, 11666, 11753, 11833, 11878, 11887, 11944, 11962, 12027, 12137, 12153, 12155, 12259, 12271, 12281, 12319, 12325, 12383, 12511, 12531, 12581, 12591, 12603, 12639, 12703, 12777, 12778, 12793, 12847, 12911, 12979, 12988, 13023, 13040, 13087, 13099, 13279, 13471, 13483, 13610, 13739, 13783, 13791, 13803, 13855, 13867, 13919, 14003, 14009, 14076, 14267, 14387, 14409, 14433, 14459, 14512, 14527, 14643, 14779, 14780, 14795, 14823, 14841, 14843, 14879, 14941, 14972, 15053, 15163, 15164, 15215, 15227, 15228, 15274, 15292, 15411, 15419, 15420, 15484, 15663, 15675, 15676, 15720, 15733, 15737, 15738, 15804, 15824, 15863, 15867, 15903, 15923, 16043, 16215, 16244, 16351, 16363], [1, 2, 7, 18, 37, 38, 44, 64, 101, 108, 129, 166, 169, 212, 215, 254, 343, 358, 364, 388, 391, 446, 526, 530, 549, 550, 617, 662, 713, 766, 775, 795, 830, 849, 903, 914, 933, 934, 940, 958, 982, 1004, 1058, 1065, 1066, 1159, 1196, 1214, 1254, 1303, 1332, 1361, 1426, 1427, 1452, 1470, 1479, 1516, 1580, 1623, 1649, 1652, 1662, 1667, 1686, 1705, 1746, 1764, 1766, 1894, 1937, 2001, 2045, 2089, 2167, 2316, 2387, 2462, 2529, 2537, 2580, 2769, 2833, 2897, 2900, 2914, 2921, 2922, 2962, 2982, 3097, 3113, 3114, 3133, 3154, 3184, 3222, 3238, 3410, 3474, 3494, 3506, 3508, 3519, 3537, 3559, 3646, 3857, 3941, 3966, 4050, 4069, 4076, 4094, 4101, 4118, 4246, 4280, 4300, 4307, 4325, 4353, 4387, 4393, 4438, 4483, 4499, 4564, 4630, 4664, 4707, 4728, 4773, 4819, 4840, 4858, 4870, 4883, 4901, 4935, 4965, 5011, 5014, 5018, 5095, 5097, 5174, 5266, 5267, 5285, 5334, 5353, 5389, 5457, 5477, 5523, 5541, 5650, 5669, 5715, 5778, 5826, 5846, 5865, 5880, 5937, 5942, 5944, 5974, 5993, 6162, 6182, 6198, 6245, 6262, 6309, 6312, 6410, 6501, 6582, 6584, 6645, 6646, 6691, 6867, 6885, 6954, 6968, 7030, 7032, 7062, 7072, 7096, 7141, 7206, 7209, 7222, 7224, 7288, 7318, 7337, 7397, 7420, 7478, 7480, 7574, 7608, 7699, 7705, 7721, 7845, 8019, 8023, 8038, 8082, 8108, 8147, 8178, 8377, 8417, 8443, 8483, 8545, 8681, 8697, 8699, 8741, 8805, 8825, 8867, 8879, 8891, 8892, 8910, 8914, 8929, 8956, 9042, 9185, 9224, 9228, 9254, 9308, 9340, 9459, 9468, 9505, 9513, 9529, 9531, 9554, 9618, 9693, 9746, 9825, 9980, 10046, 10099, 10108, 10147, 10339, 10386, 10395, 10479, 10492, 10531, 10578, 10659, 10681, 10723, 10808, 10810, 10863, 10873, 10910, 10962, 11043, 11045, 11084, 11110, 11128, 11129, 11177, 11299, 11302, 11311, 11321, 11324, 11385, 11451, 11555, 11577, 11705, 11747, 11809, 11835, 11879, 11922, 12065, 12091, 12133, 12177, 12339, 12347, 12394, 12411, 12447, 12453, 12540, 12587, 12601, 12655, 12667, 12732, 12831, 12842, 12851, 12879, 12895, 12897, 12901, 12906, 12920, 12927, 12975, 13031, 13048, 13052, 13116, 13235, 13243, 13244, 13291, 13295, 13307, 13349, 13367, 13368, 13375, 13499, 13500, 13547, 13747, 13755, 13756, 13807, 13819, 13821, 13871, 13883, 13948, 13989, 13999, 14047, 14059, 14067, 14111, 14151, 14187, 14250, 14265, 14373, 14506, 14639, 14751, 14808, 14821, 14896, 14901, 14904, 14931, 15135, 15146, 15161, 15199, 15205, 15216, 15225, 15231, 15263, 15283, 15391, 15397, 15403, 15455, 15475, 15531, 15535, 15647, 15704, 15731, 15743, 15775, 15795, 15832, 15850, 15853, 15915, 15932, 16121, 16234, 16252, 16371, 16379, 16380], [2, 62, 81, 126, 382, 1415, 1598, 3719, 3921, 4115, 4179, 4435, 5651, 11439, 11452, 12348, 12412, 12668, 12857, 13884, 14905], [-(J ^ 2) - 2J, 529, 1031, 1534, 1543, 5587, 7011, 9199, 9211, 9212, 9967, 9977, 11183, 11836, 12921, 13820], [-2J, 4049, 10095, 12409, 16249], [J ^ 2 - 2J, 10812], [-3 * J ^ 2 - J, 2577], [-2 * J ^ 2 - J, 2941, 4039, 4197, 5138, 6648, 8274, 10745, 14815], [-J, 17, 84, 151, 180, 445, 532, 593, 711, 976, 1022, 1068, 1239, 1425, 1833, 1879, 2004, 2375, 2513, 2622, 2705, 2729, 3153, 3365, 3399, 3409, 3436, 3607, 3749, 3794, 3814, 3822, 3902, 3924, 3946, 3965, 4643, 4649, 5075, 6057, 6094, 6115, 6121, 6246, 6325, 6629, 6630, 6675, 6697, 6889, 6953, 7142, 7462, 7525, 7653, 7654, 7823, 7846, 7894, 7913, 7955, 7973, 8214, 8248, 8278, 8312, 8335, 8342, 8353, 8402, 8419, 8444, 8534, 8707, 8726, 8760, 8834, 8850, 8869, 8978, 9061, 9110, 9144, 9188, 9193, 9234, 9430, 9449, 9455, 9467, 9507, 9533, 9573, 9637, 9889, 9925, 9942, 9961, 9979, 10041, 10070, 10105, 10200, 10209, 10297, 10405, 10486, 10597, 10747, 10785, 10857, 10875, 10961, 10981, 11028, 11193, 11305, 11323, 11365, 11375, 11433, 11508, 11695, 11771, 11798, 11817, 12050, 12134, 12152, 12261, 12280, 12336, 12345, 12400, 12440, 12536, 12537, 12824, 12843, 12848, 12966, 12984, 13098, 13112, 13202, 13232, 13308, 13371, 13738, 13802, 13930, 13945, 14040, 14117, 14251, 14315, 14329, 14392, 14393, 14399, 14770, 14783, 14891, 14906, 14908, 15013, 15018, 15083, 15128, 15147, 15150, 15233, 15256, 15365, 15423, 15448, 15524, 15739, 15758, 15768, 15971, 15993, 16042, 16107, 16115, 16188, 16240, 16255, 16362, 16368, 16377], [J ^ 2 - J, 1086, 2583, 2932, 3454, 5139, 7507, 7634, 10089, 10107, 10811, 11941, 13372, 15740], [-2 * J ^ 2, 14201], [-(J ^ 2), 71, 209, 618, 637, 692, 719, 726, 791, 820, 1085, 1559, 1567, 1799, 1834, 1852, 2025, 2183, 2191, 2198, 2597, 2601, 2621, 2695, 2917, 3242, 3251, 3774, 3783, 3818, 3911, 4517, 4710, 4726, 4837, 5067, 5158, 6059, 6181, 6827, 7014, 7081, 7215, 7526, 7717, 7827, 8037, 8083, 8210, 8225, 8481, 8546, 8594, 8686, 8687, 8700, 8722, 8739, 8803, 8806, 8955, 9106, 9257, 9273, 9788, 9865, 9903, 9916, 9957, 10022, 10044, 10213, 10595, 10619, 10735, 10876, 11109, 11196, 11301, 11410, 11430, 11539, 11625, 11631, 11643, 11794, 11986, 12006, 12114, 13561, 14309, 14378, 14885, 14890, 14911, 15275, 15296, 15481, 15576, 15801, 16060, 16090, 16120, 16127, 16152], [J ^ 2, 20, 42, 61, 125, 145, 199, 340, 404, 455, 510, 553, 573, 594, 614, 620, 647, 722, 741, 742, 893, 937, 957, 1015, 1041, 1042, 1062, 1268, 1287, 1297, 1405, 1449, 1469, 1597, 1751, 1780, 1908, 2007, 2036, 2193, 2213, 2409, 2429, 2582, 2598, 2600, 2612, 2681, 2813, 2902, 2903, 2985, 2991, 3095, 3124, 3131, 3177, 3178, 3183, 3197, 3207, 3345, 3445, 3473, 3562, 3591, 3636, 3665, 3753, 3770, 3773, 3847, 3882, 4052, 4073, 4074, 4083, 4093, 4131, 4195, 4201, 4255, 4453, 4563, 4694, 4711, 4713, 4822, 4969, 5027, 5090, 5136, 5142, 5413, 6185, 6310, 6313, 6665, 6678, 6757, 7021, 7091, 7283, 7521, 7670, 7671, 7739, 8035, 8041, 8163, 8203, 8230, 8272, 8379, 8429, 8452, 8495, 8523, 8547, 8582, 8801, 8997, 9084, 9086, 9187, 9249, 9490, 9596, 9759, 9765, 10159, 10171, 10172, 10211, 10235, 10236, 10263, 10273, 10281, 10299, 10706, 10721, 10774, 10787, 10793, 10834, 10871, 11004, 11055, 11067, 11068, 11105, 11119, 11131, 11132, 11297, 11366, 11576, 11602, 11707, 11730, 11750, 11772, 11960, 12015, 12070, 12092, 12262, 12395, 12729, 12796, 12837, 12888, 12907, 12915, 12923, 13043, 13049, 13113, 13163, 13221, 13354, 13363, 13393, 13497, 13653, 13733, 13753, 13812, 13817, 14228, 14379, 14415, 14456, 14457, 14463, 14507, 14521, 14693, 14840, 14847, 14895, 14996, 15269, 15352, 15353, 15359, 15461, 15564, 15608, 15609, 15664, 15673, 15679, 15722, 15736, 15864, 15871, 16037, 16048, 16063, 16066, 16088, 16134, 16235, 16357], [2 * J ^ 2, 3729, 8316, 8751, 10799, 12156, 16057], [-(J ^ 2) + J, 519, 583, 977, 2228, 3601, 3735, 3764, 7544, 9263, 9275, 9775, 9787, 10789, 11641, 13305, 14073, 14186, 15289, 15711], [J, 135, 189, 233, 318, 361, 574, 631, 657, 660, 663, 721, 745, 756, 788, 845, 855, 884, 1001, 1063, 1105, 1233, 1321, 1341, 1365, 1367, 1396, 1431, 1460, 1588, 1641, 1642, 1661, 1745, 1854, 1873, 1918, 1927, 1982, 1991, 2008, 2028, 2055, 2110, 2130, 2150, 2174, 2199, 2218, 2238, 2257, 2260, 2391, 2420, 2514, 2534, 2578, 2775, 2795, 2804, 2823, 2887, 2919, 3026, 3046, 3089, 3159, 3188, 3282, 3302, 3306, 3318, 3320, 3350, 3430, 3463, 3498, 3517, 3538, 3558, 3625, 3734, 3868, 3881, 4030, 4055, 4084, 4371, 4627, 4706, 4709, 4771, 5091, 5795, 5907, 5925, 5971, 5994, 6035, 6098, 6107, 6117, 6163, 6227, 6230, 6247, 6291, 6307, 6371, 6614, 6693, 6694, 7126, 7152, 7205, 7331, 7382, 7416, 7476, 7510, 7529, 7542, 7638, 7801, 7890, 7909, 7910, 7926, 7985, 7992, 8251, 8357, 8380, 8623, 8635, 8705, 8737, 8854, 8858, 8888, 8943, 8963, 8982, 9001, 9007, 9019, 9067, 9081, 9088, 9121, 9123, 9147, 9162, 9208, 9251, 9276, 9391, 9403, 9426, 9445, 9532, 9549, 9593, 9633, 9635, 9641, 9647, 9657, 9663, 9705, 9711, 9723, 9817, 9830, 9833, 9912, 9920, 9938, 10002, 10066, 10080, 10085, 10194, 10351, 10406, 10415, 10428, 10522, 10593, 10610, 10617, 10623, 10921, 10965, 11001, 11143, 11154, 11169, 11247, 11282, 11312, 11361, 11377, 11448, 11494, 11503, 11513, 11567, 11580, 11619, 11637, 11686, 11708, 11813, 11900, 11926, 11937, 11945, 12089, 12115, 12140, 12257, 12265, 12344, 12371, 12376, 12396, 12438, 12472, 12499, 12504, 12517, 12604, 12606, 12643, 12645, 12664, 12671, 12696, 12830, 12856, 12860, 12976, 12985, 13016, 13029, 13039, 13080, 13240, 13263, 13285, 13290, 13296, 13311, 13336, 13357, 13464, 13494, 13546, 13553, 13560, 13605, 13721, 13848, 13914, 13925, 13951, 13974, 14000, 14058, 14072, 14084, 14140, 14193, 14200, 14204, 14240, 14268, 14319, 14331, 14344, 14360, 14396, 14424, 14451, 14460, 14498, 14524, 14585, 14835, 14872, 14899, 14954, 14969, 15213, 15235, 15288, 15295, 15347, 15360, 15402, 15427, 15498, 15530, 15536, 15544, 15551, 15583, 15603, 15668, 15723, 15800, 15807, 15859, 15896, 15899, 15909, 15914, 16058, 16159, 16165, 16284, 16316, 16356], [2 * J ^ 2 + J, 967, 2558, 4261, 6611, 7589, 8763, 8764, 8815, 8827, 13369, 13881, 14844], [2J, 3217, 9659, 11951, 11963, 11964, 15545], [J ^ 2 + 2J, 1863, 2567, 5161, 12283, 13355]])
            elseif i == 93
                r = J ^ 2 * f(91)
            elseif i == 94
                r = J * f(91)
            elseif i == 95
                r = J * f(92)
            elseif i == 96
                r = J ^ 2 * f(92)
            elseif i == 97
                r = ExpandRep(4, 80, [[-2, 5553, 12433, 14622], [-1, 418, 898, 963, 966, 968, 1023, 1695, 1697, 1718, 1721, 1729, 1740, 1754, 1774, 1794, 1796, 1858, 1885, 2162, 2169, 2197, 2230, 2320, 2344, 2345, 2348, 2353, 2481, 2482, 2727, 2899, 3161, 3490, 3557, 3565, 3590, 3742, 3902, 4006, 4016, 4038, 4048, 4296, 4442, 4518, 4538, 4542, 4730, 4753, 4783, 4817, 5010, 5059, 5122, 5131, 5138, 5159, 5199, 5209, 5245, 5362, 5399, 5475, 5520, 5530, 5531, 5539, 5541, 5542, 5597, 5598, 5766, 5776, 5788, 5792, 5797, 5808, 5809, 5830, 5875, 6026, 6030, 6386, 6917, 7040, 7050, 7068, 7071, 7298, 7445, 7544, 7545, 7684, 7704, 7705, 7954, 8014, 8026, 8034, 8345, 8422, 8424, 8463, 9230, 9270, 9375, 9550, 9634, 9643, 9854, 9876, 9879, 10000, 10051, 10060, 10174, 10188, 10196, 10199, 10203, 10561, 10566, 10597, 10611, 10619, 10672, 10705, 10818, 10834, 10842, 10846, 10942, 11040, 11053, 11055, 11058, 11064, 11065, 11073, 11074, 11082, 11086, 11205, 11290, 11313, 11332, 11343, 11374, 11396, 11748, 11808, 11910, 11935, 11937, 11944, 11955, 11961, 11965, 11969, 11980, 11994, 12007, 12082, 12119, 12238, 12442, 12471, 12560, 12570, 12593, 12623, 12705, 12795, 13040, 13050, 13068, 13071, 13157, 13235, 13360, 13374, 13375, 13378, 13379, 13396, 13406, 13663, 13707, 14286, 14363, 14589, 14591, 14596, 14600, 14610, 14810, 14833, 14852, 14863, 14890, 14897, 14909, 14911, 14921, 14929, 14968, 14973, 14974, 14975, 14978, 14980, 15006, 15200, 15219, 15517, 15717, 16072, 16185, 16335, 16337, 16358, 16361, 16369, 16380, 16394, 16481, 16977, 17214, 17236, 17286, 17361, 17374, 17380, 17386, 17419, 17718, 17733, 17738, 17742, 17857, 17881, 17889, 17921, 17927, 17934, 17936, 17963, 18013, 18114, 18123, 18167, 18174, 18175, 18186, 18196, 18198, 18206, 18555, 18648, 18687, 18702, 19055, 19057, 19064, 19075, 19081, 19085, 19089, 19100, 19114, 19123, 19137, 19144, 19155, 19161, 19165, 19169, 19180, 19183, 19607, 20437, 20720, 21201, 21214, 21226, 21236, 21259, 21274, 21281, 21339, 21472, 21477, 21526, 21531, 21548, 21550, 21552, 21553, 21554, 21557, 21562, 21590, 21695, 21697, 21718, 21721, 21729, 21740, 21754, 21788, 22650, 22673, 22692, 22703, 22838, 23021, 23077, 23201, 23206, 23237, 23251, 23259, 23440, 23443, 23446, 23448, 23455, 23458, 23459, 23486, 23503, 23529, 23544, 23563, 23581, 23775, 23777, 23801, 23809, 23820, 23921, 23955, 23965, 23980, 23994, 24120, 24170, 24193, 24212, 24223, 24327, 24334, 24346, 24356, 24358, 24366, 24486, 24508, 24512, 24517, 24519, 24567, 24736, 24746, 24748, 24757, 24758, 24768, 24779, 24790, 24918, 24921, 25063, 25288, 25293, 25294, 25295, 25298, 25322, 25326, 25523], [1, 407, 887, 969, 972, 977, 996, 999, 1001, 1005, 1009, 1018, 1020, 1034, 1201, 1251, 1686, 1691, 1701, 1708, 1710, 1712, 1713, 1714, 1717, 1722, 1750, 1782, 1784, 1823, 1842, 1844, 1917, 2026, 2160, 2174, 2175, 2178, 2179, 2196, 2206, 2321, 2394, 2404, 2480, 2508, 3011, 3227, 3524, 3535, 3566, 3723, 3804, 3883, 3930, 4288, 4293, 4374, 4385, 4410, 4455, 4493, 4504, 4523, 4541, 4721, 4734, 4746, 4756, 4779, 4794, 5127, 5155, 5190, 5208, 5252, 5393, 5395, 5402, 5430, 5431, 5478, 5479, 5481, 5508, 5526, 5546, 5568, 5569, 5710, 5714, 5768, 5773, 5774, 5775, 5778, 5780, 5806, 5863, 5878, 5879, 5881, 5908, 6002, 6003, 6008, 6019, 6050, 6052, 6069, 6072, 6074, 6135, 6337, 6338, 6349, 6351, 6354, 6365, 6380, 6490, 6560, 6757, 6884, 6895, 7041, 7043, 7048, 7202, 7229, 7453, 7534, 7546, 7606, 7681, 7687, 7754, 8038, 8063, 8283, 8414, 8436, 9200, 9251, 9300, 9366, 9388, 9392, 9397, 9608, 9640, 9652, 9662, 9843, 9848, 9859, 9861, 9862, 9864, 9890, 9892, 9897, 9903, 9909, 9912, 9974, 10030, 10070, 10162, 10179, 10182, 10184, 10207, 10210, 10212, 10217, 10223, 10229, 10232, 10237, 10282, 10324, 10570, 10575, 10577, 10589, 10591, 10601, 10609, 10686, 10693, 10712, 10816, 10838, 10848, 10849, 11056, 11066, 11068, 11077, 11078, 11088, 11099, 11110, 11281, 11289, 11294, 11297, 11306, 11316, 11319, 11323, 11325, 11339, 11340, 11341, 11354, 11362, 11363, 11368, 11379, 11381, 11382, 11384, 11410, 11412, 11417, 11423, 11429, 11432, 11454, 11460, 11526, 11536, 11558, 11672, 11840, 11859, 11926, 11931, 11941, 11943, 11948, 11952, 11953, 11954, 11957, 11962, 11979, 11990, 11998, 12018, 12113, 12115, 12122, 12150, 12151, 12269, 12271, 12282, 12405, 12438, 12441, 12561, 12574, 12586, 12596, 12619, 12634, 13041, 13043, 13048, 13124, 13135, 13223, 13238, 13239, 13241, 13268, 13362, 13369, 13397, 13430, 13614, 13626, 13636, 13878, 14104, 14371, 14382, 14561, 14580, 14584, 14603, 14625, 14778, 14801, 14809, 14814, 14826, 14836, 14837, 14839, 14845, 14851, 14859, 14860, 14874, 14881, 14886, 14917, 14931, 14939, 14966, 14976, 14988, 14992, 14997, 15008, 15009, 15030, 15230, 15283, 15464, 15465, 15698, 15716, 15726, 16326, 16331, 16341, 16348, 16350, 16352, 16353, 16354, 16357, 16362, 16390, 16581, 17125, 17222, 17224, 17263, 17289, 17293, 17323, 17330, 17360, 17370, 17379, 17382, 17392, 17393, 17417, 17456, 17693, 17704, 17723, 17741, 17846, 17858, 17882, 17886, 17930, 17938, 17942, 17952, 17960, 17970, 17982, 17997, 18035, 18045, 18060, 18074, 18088, 18120, 18132, 18142, 18170, 18171, 18181, 18182, 18191, 18197, 18202, 18208, 18212, 18230, 18237, 18238, 18294, 18305, 18386, 18650, 18668, 18672, 18683, 18694, 18705, 18902, 19046, 19051, 19061, 19063, 19068, 19072, 19073, 19074, 19077, 19082, 19099, 19110, 19118, 19126, 19131, 19134, 19138, 19146, 19148, 19154, 19156, 19162, 19166, 19199, 19281, 19695, 19856, 20404, 20415, 21122, 21197, 21210, 21233, 21263, 21290, 21309, 21311, 21404, 21444, 21525, 21535, 21558, 21561, 21569, 21686, 21691, 21701, 21708, 21710, 21712, 21713, 21714, 21717, 21722, 21750, 22038, 22447, 22641, 22649, 22654, 22666, 22676, 22677, 22679, 22683, 22685, 22699, 22700, 22714, 22928, 23058, 23076, 23086, 23210, 23217, 23229, 23231, 23241, 23249, 23366, 23452, 23457, 23477, 23479, 23481, 23485, 23489, 23498, 23500, 23510, 23514, 23517, 23536, 23558, 23610, 23655, 23766, 23788, 23790, 23797, 23819, 23830, 23933, 24161, 24169, 24174, 24186, 24196, 24197, 24199, 24205, 24211, 24219, 24220, 24234, 24324, 24330, 24331, 24341, 24342, 24362, 24368, 24390, 24397, 24398, 24409, 24413, 24450, 24458, 24495, 24529, 24546, 24562, 24564, 24589, 24627, 24678, 24708, 24720, 24733, 24735, 24738, 24744, 24745, 24753, 24754, 24762, 24766, 24913, 24951, 25064, 25070, 25075, 25286, 25290, 25296, 25308, 25312, 25317, 25328, 25350, 25541, 25542, 25558, 25561, 25595], [2, 5536, 23449], [-(J ^ 2) - 3J, 17953], [-(J ^ 2) - 2J, 10163, 10168, 17962, 17972, 18193, 23442, 23526, 24353], [-3 * J ^ 2 - J, 17922, 17949], [-2 * J ^ 2 - J, 5558, 10193, 11046, 17951], [-J, 80, 271, 338, 405, 415, 438, 441, 449, 885, 918, 921, 962, 989, 991, 1010, 1022, 1037, 1237, 1377, 1863, 2143, 2187, 2241, 2322, 2349, 2494, 2506, 2511, 2516, 2734, 2746, 2754, 2997, 3318, 3321, 3409, 3520, 3539, 3564, 3750, 3936, 3969, 4009, 4013, 4050, 4058, 4301, 4449, 4536, 4624, 5125, 5265, 5367, 5525, 5587, 5596, 5615, 5686, 5708, 5712, 5717, 5719, 5761, 5815, 5832, 6152, 6319, 6335, 6353, 6355, 6362, 7114, 7210, 7263, 7372, 7696, 7718, 7721, 7728, 7729, 8020, 8024, 8025, 8407, 8572, 8830, 9158, 9219, 9659, 9666, 9731, 9906, 10226, 10495, 10529, 10562, 10593, 10610, 10612, 10637, 10774, 10867, 10889, 10904, 10923, 10941, 11033, 11089, 11116, 11217, 11260, 11274, 11284, 11350, 11392, 11988, 12011, 12033, 12042, 12070, 12087, 12250, 12273, 12292, 12303, 12402, 12421, 12422, 12439, 12475, 12544, 13114, 13753, 13802, 13934, 13940, 14015, 14320, 14339, 14586, 14597, 14630, 14862, 14906, 15036, 15262, 15375, 15440, 15468, 15560, 15928, 15972, 16435, 16445, 16526, 17096, 17141, 17336, 17363, 17410, 17423, 17736, 17860, 17903, 17920, 17931, 17939, 17941, 17983, 17984, 17998, 18139, 18146, 18224, 18419, 18677, 18710, 18875, 19108, 19139, 19151, 19152, 19153, 19188, 19200, 19251, 19328, 19331, 19395, 19461, 19929, 19978, 20963, 21203, 21224, 21225, 21282, 21313, 21357, 21455, 21522, 21549, 21845, 22710, 23202, 23233, 23250, 23252, 23277, 23469, 23471, 23490, 23568, 23573, 23786, 23966, 24222, 24383, 24384, 24462, 24509, 24594, 24679, 24681, 24723, 24728, 24739, 24742, 24770, 24777, 24789, 24792, 24915, 24922, 24950, 25036, 25113, 25183, 25329, 25356, 25405, 25522, 25531, 25538, 25559, 25599], [J ^ 2 - J, 5549, 10893, 11366, 11388, 11397, 12418, 14569, 17923, 17928, 18685, 23502], [-(J ^ 2), 435, 915, 974, 986, 1373, 1470, 1698, 1913, 2200, 2222, 2334, 2346, 2356, 2504, 2505, 2596, 2740, 2744, 2745, 3315, 3567, 3582, 3680, 3699, 3940, 4024, 4117, 4225, 4246, 4627, 4728, 4936, 4966, 5065, 5123, 5521, 5527, 5579, 5582, 5709, 5796, 5802, 6017, 6032, 6039, 6041, 6060, 6334, 6356, 6359, 7201, 7274, 7694, 7699, 7706, 7712, 7716, 7882, 8007, 8426, 9602, 9650, 9669, 9672, 9674, 9855, 9873, 9875, 9882, 10170, 10175, 10195, 10202, 10695, 10764, 10807, 10928, 10933, 11041, 11072, 11114, 11286, 11317, 11365, 11389, 11401, 11582, 11891, 11902, 11924, 11997, 12002, 12039, 12302, 12568, 13361, 13403, 13437, 13711, 13717, 13732, 13809, 14563, 14566, 14568, 14587, 14623, 14883, 14888, 14970, 15270, 15443, 15448, 15503, 16132, 16338, 16517, 17155, 17165, 17372, 17389, 17391, 17394, 17876, 17899, 17902, 17925, 18017, 18082, 18130, 18149, 18152, 18154, 18162, 18188, 18189, 18192, 18640, 18659, 18684, 19044, 19117, 19124, 19141, 19179, 19182, 19298, 20016, 20214, 20810, 21229, 21231, 21527, 21698, 22081, 22242, 22824, 23215, 23441, 23466, 23483, 23582, 23957, 24025, 24322, 24349, 24351, 24576, 24608, 24609, 24749, 24751, 24898, 25058, 25085, 25279, 25504, 25525], [J ^ 2, 402, 429, 594, 882, 919, 993, 1002, 1012, 1395, 1405, 1420, 1434, 1687, 1786, 1878, 1908, 2161, 2203, 2237, 2330, 2383, 2557, 2669, 2739, 2752, 2756, 2794, 3282, 3319, 3530, 3548, 3552, 3563, 3710, 4062, 4249, 4253, 4283, 4290, 4365, 4749, 4751, 5141, 5142, 5158, 5161, 5195, 5347, 5398, 5401, 5522, 5538, 5544, 5551, 5552, 5554, 5585, 5770, 6059, 6066, 6070, 6323, 6328, 6339, 6341, 6342, 6344, 6370, 6372, 6377, 6383, 6389, 6392, 6429, 6908, 6912, 7069, 7200, 7224, 7225, 7228, 7233, 7457, 7475, 7485, 7500, 7527, 7682, 7709, 7743, 8839, 9459, 9600, 9665, 9846, 9868, 9877, 9878, 9899, 10135, 10161, 10166, 10197, 10198, 10250, 10295, 10563, 10568, 10645, 10666, 10802, 10829, 10930, 10936, 11069, 11071, 11128, 11235, 11245, 11295, 11309, 11311, 11322, 11342, 11371, 11419, 11430, 11544, 11883, 11927, 11958, 12035, 12118, 12121, 12243, 12248, 12264, 12305, 12411, 12479, 12589, 12591, 13069, 13148, 13152, 13400, 13422, 13684, 13695, 13743, 13780, 14503, 14562, 14572, 14577, 14599, 14601, 14605, 14609, 14618, 14620, 14634, 14829, 14831, 14842, 14996, 15002, 15454, 15466, 15471, 15476, 15681, 15731, 15849, 15985, 16327, 16498, 16746, 17226, 17318, 17366, 17368, 17387, 17398, 17850, 17864, 17905, 17926, 17933, 17940, 17979, 17985, 18080, 18145, 18163, 18168, 18173, 18285, 18594, 18649, 18670, 18675, 18698, 18871, 18970, 19047, 19078, 19127, 19130, 19219, 19317, 19793, 20330, 20428, 20432, 20500, 20586, 21113, 21208, 21283, 21288, 21538, 21687, 21949, 22669, 22671, 22682, 22702, 22776, 23041, 23091, 23203, 23208, 23473, 23480, 23482, 23492, 23616, 23649, 23937, 23938, 24189, 24191, 24202, 24299, 24323, 24328, 24333, 24406, 24416, 24438, 24510, 24514, 24560, 24578, 24579, 24588, 24592, 24593, 24596, 24602, 24606, 24642, 24721, 24752, 24794, 25042, 25044, 25117, 25144, 25145, 25316, 25553], [2 * J ^ 2, 10219], [-(J ^ 2) + J, 6346, 10189, 10191, 10886, 11375, 11922, 12407, 17937, 17959, 17961, 17965, 17980, 17994, 19042], [J, 28, 162, 406, 411, 428, 430, 432, 433, 434, 437, 442, 470, 528, 648, 729, 810, 913, 922, 950, 980, 984, 1025, 1053, 1134, 1218, 1236, 1246, 1296, 1552, 1620, 1682, 1685, 1709, 1725, 1767, 1864, 1870, 1875, 1944, 2116, 2483, 2488, 2543, 2758, 2783, 2835, 3078, 3528, 3529, 3550, 3555, 3578, 3645, 3962, 4278, 4328, 4372, 4420, 4486, 4528, 4698, 4720, 4723, 4744, 4745, 5153, 5378, 5523, 5528, 5529, 5533, 5570, 5575, 5578, 5584, 5592, 5606, 5628, 5632, 5637, 5695, 5729, 5746, 5836, 5994, 6034, 6237, 6326, 6348, 6357, 6358, 6379, 6643, 6805, 6967, 7073, 7117, 7189, 7214, 7226, 7236, 7387, 7461, 7542, 7680, 7691, 7698, 7708, 7713, 7714, 7722, 7726, 7777, 8019, 8032, 8036, 8074, 8101, 8182, 8506, 8668, 8722, 8957, 8992, 9073, 9609, 9617, 9639, 9641, 9645, 9660, 9771, 9857, 9858, 9869, 9871, 9874, 9885, 9900, 10019, 10177, 10178, 10194, 10205, 10220, 10256, 10289, 10361, 10452, 10486, 10508, 10512, 10517, 10586, 10661, 10800, 10810, 10811, 10819, 10828, 10832, 10833, 10896, 10918, 11043, 11048, 11059, 11062, 11090, 11097, 11112, 11221, 11280, 11283, 11288, 11299, 11302, 11304, 11312, 11337, 11345, 11346, 11367, 11377, 11391, 11395, 11405, 11409, 11420, 11529, 11533, 11570, 11578, 11925, 11949, 11970, 11993, 12005, 12038, 12041, 12098, 12241, 12249, 12254, 12266, 12276, 12277, 12279, 12285, 12291, 12299, 12300, 12314, 12394, 12403, 12435, 12470, 12563, 12584, 12585, 12791, 12800, 12881, 12968, 13073, 13117, 13286, 13387, 13514, 13533, 13624, 13625, 13708, 13712, 13770, 13815, 14006, 14028, 14032, 14037, 14201, 14390, 14414, 14560, 14575, 14578, 14579, 14593, 14602, 14606, 14612, 14687, 14803, 14808, 14824, 14865, 14882, 14913, 14930, 14932, 14957, 14961, 15015, 15032, 15068, 15123, 15243, 15313, 15441, 15442, 15645, 15797, 15929, 15965, 16283, 16322, 16325, 16349, 16365, 16528, 16531, 16688, 16850, 16931, 17137, 17180, 17194, 17207, 17328, 17333, 17579, 17639, 17686, 17728, 17822, 17842, 17849, 17877, 17879, 17885, 17890, 17898, 17900, 17914, 17929, 17932, 17956, 17969, 17987, 18089, 18097, 18119, 18121, 18125, 18140, 18161, 18165, 18177, 18178, 18187, 18199, 18201, 18205, 18220, 18234, 18248, 18292, 18644, 18655, 18686, 18692, 18722, 19045, 19069, 19090, 19113, 19122, 19125, 19128, 19129, 19145, 19170, 19178, 19193, 19230, 19270, 19326, 19524, 19853, 20091, 20254, 20328, 20658, 20902, 21108, 21446, 21555, 21630, 21682, 21685, 21709, 21725, 22197, 22359, 22521, 22602, 22640, 22643, 22648, 22659, 22664, 22705, 23169, 23226, 23331, 23410, 23454, 23460, 23464, 23467, 23505, 23570, 23576, 23642, 23707, 23762, 23763, 23768, 23779, 23789, 23810, 23812, 23829, 23832, 23834, 23849, 23968, 23971, 24163, 24168, 24184, 24225, 24321, 24325, 24337, 24338, 24359, 24361, 24365, 24380, 24394, 24424, 24561, 24580, 24598, 24601, 24769, 24796, 24870, 24882, 24885, 24919, 25078, 25108, 25134, 25146, 25156, 25281, 25300, 25352, 25527, 25555, 25590], [2 * J ^ 2 + J, 5562, 9866, 10186, 11386, 24726], [J ^ 2 + 2J, 17946, 17958, 23533]])
            elseif i == 98
                r = J * f(97)
            elseif i == 99
                r = J ^ 2 * f(97)
            elseif i == 100
                r = ExpandRep(4, 81, [[-1, 81, 82, 156, 489, 492, 528, 571, 574, 607, 920, 925, 1341, 1367, 3051, 3297, 3461, 4287, 4302, 4308, 4311, 4319, 4321, 4329, 4338, 4346, 4428, 4437, 5036, 5044, 5467, 5631, 6110, 7608, 7651, 7700, 7709, 7712, 8545, 8845, 8857, 8890, 8986, 9004, 9016, 9018, 9515, 9524, 9533, 9841, 10005, 10167, 10285, 10359, 10394, 10415, 10420, 10854, 11096, 11175, 11603, 11638, 11649, 11874, 11891, 11895, 11956, 11973, 11974, 12711, 12793, 12991, 13365, 13368, 13369, 13384, 13402, 13413, 13609, 13614, 13615, 13622, 13629, 13630, 13637, 13860, 13866, 13869, 13877, 13879, 13887, 13896, 13904, 14007, 14773, 14788, 14796, 14865, 15571, 15589, 15600, 15743, 15748, 16161, 16386, 16562, 16645, 16950, 16958, 17137, 17142, 17348, 17356, 17540, 17555, 17564, 18267, 19099, 19108, 19109, 19276, 19404, 19430, 19550, 19555, 20117, 20122, 20782, 20787, 23990, 23998, 24129, 24724, 24742, 24753, 26136], [1, 1, 93, 98, 104, 108, 114, 116, 131, 133, 144, 145, 167, 249, 331, 418, 494, 527, 530, 535, 544, 545, 547, 548, 554, 555, 557, 559, 563, 565, 591, 601, 610, 618, 624, 627, 634, 637, 639, 641, 662, 744, 826, 967, 989, 1055, 1159, 1241, 1376, 1404, 1486, 1568, 1650, 1732, 1814, 1896, 1978, 2033, 2115, 2199, 2313, 2395, 2477, 2559, 2641, 2723, 2805, 2887, 2969, 3133, 3215, 3379, 3543, 3625, 3663, 3745, 3827, 3909, 3991, 4073, 4155, 4365, 4411, 4520, 4602, 4684, 4766, 4848, 4930, 5012, 5099, 5166, 5248, 5303, 5385, 5549, 5713, 5795, 5904, 5986, 6068, 6234, 6316, 6329, 6337, 6342, 6407, 6448, 6461, 6490, 6498, 6524, 6563, 6650, 6732, 6814, 6896, 6980, 7065, 7147, 7229, 7290, 7392, 7474, 7801, 7885, 7955, 8057, 8139, 8182, 8265, 8347, 8447, 8640, 8714, 8811, 9117, 9199, 9298, 9349, 9423, 9573, 9588, 9593, 9645, 9727, 9825, 9835, 9844, 9852, 9858, 9861, 9868, 9871, 9873, 9875, 9923, 9971, 10004, 10007, 10012, 10021, 10022, 10024, 10025, 10031, 10032, 10034, 10036, 10040, 10042, 10087, 10296, 10305, 10313, 10315, 10323, 10340, 10514, 10596, 10644, 10764, 10825, 10870, 10882, 10886, 10910, 10911, 10915, 10950, 11229, 11332, 11411, 11495, 11563, 11699, 11795, 12055, 12127, 12219, 12291, 12320, 12361, 12374, 12389, 12391, 12450, 12542, 12625, 12648, 12653, 12659, 12663, 12669, 12671, 12686, 12688, 12699, 12700, 12746, 12751, 12829, 12853, 12857, 12897, 12905, 12915, 13049, 13090, 13103, 13125, 13209, 13296, 13370, 13379, 13380, 13381, 13382, 13393, 13395, 13396, 13397, 13398, 13400, 13401, 13419, 13420, 13421, 13422, 13423, 13424, 13425, 13426, 13427, 13428, 13441, 13450, 13544, 13621, 13633, 13634, 13635, 13645, 13655, 13656, 13657, 13658, 13660, 13661, 13673, 13674, 13675, 13676, 13677, 13678, 13685, 13686, 13688, 13696, 13772, 13923, 14036, 14102, 14202, 14261, 14373, 14453, 14513, 14589, 14702, 14915, 15007, 15109, 15160, 15281, 15334, 15405, 15529, 15606, 15615, 15692, 15790, 15827, 15936, 16019, 16066, 16177, 16190, 16221, 16300, 16482, 16706, 16793, 16916, 16966, 17079, 17169, 17221, 17323, 17411, 17460, 17608, 17687, 17773, 17876, 17956, 18039, 18093, 18160, 18266, 18269, 18283, 18284, 18286, 18293, 18294, 18296, 18379, 18435, 18514, 18600, 18696, 18776, 18859, 18920, 19026, 19190, 19222, 19229, 19311, 19336, 19338, 19364, 19370, 19439, 19490, 19508, 19510, 19531, 19534, 19597, 19628, 19649, 19654, 19687, 19771, 19856, 19926, 20010, 20164, 20170, 20256, 20350, 20434, 20495, 20584, 20679, 20814, 20846, 20930, 20984, 21094, 21149, 21240, 21342, 21393, 21486, 21589, 21671, 21754, 21838, 21921, 21965, 22060, 22169, 22209, 22306, 22416, 22498, 22575, 22661, 22689, 22708, 22733, 22781, 22880, 22965, 23027, 23160, 23207, 23259, 23353, 23454, 23556, 23597, 23700, 23803, 23885, 23962, 24053, 24066, 24075, 24083, 24085, 24093, 24110, 24168, 24274, 24359, 24414, 24497, 24601, 24641, 24759, 24768, 24858, 24941, 24995, 25094, 25179, 25241, 25324, 25421, 25461, 25523, 25564, 25577, 25592, 25594, 25660, 25750, 25798, 25855, 25867, 25900, 25957, 26081, 26176, 26188, 26190]])
            elseif i == 101
                r = J ^ 2 * f(100)
            elseif i == 102
                r = J * f(100)
            end
        end
        cached[Symbol(i)] = r
        return r
    end)
chevieset(:G32, :Invariants, [function (a, b, c, d)
            return (((((((((220 * a ^ 3 * b ^ 3 * c ^ 6 - 220 * a ^ 3 * b ^ 3 * d ^ 6) - 220 * a ^ 3 * c ^ 3 * d ^ 6) - 220 * b ^ 3 * c ^ 3 * d ^ 6) + 220 * a ^ 3 * b ^ 6 * c ^ 3) - 220 * a ^ 3 * b ^ 6 * d ^ 3) + 220 * a ^ 3 * c ^ 6 * d ^ 3) - 220 * b ^ 3 * c ^ 6 * d ^ 3) + 220 * a ^ 6 * b ^ 3 * c ^ 3 + 220 * a ^ 6 * b ^ 3 * d ^ 3) - 220 * a ^ 6 * c ^ 3 * d ^ 3) + 220 * b ^ 6 * c ^ 3 * d ^ 3 + 22 * a ^ 6 * b ^ 6 + 22 * a ^ 6 * c ^ 6 + 22 * a ^ 6 * d ^ 6 + 22 * b ^ 6 * c ^ 6 + 22 * b ^ 6 * d ^ 6 + 22 * c ^ 6 * d ^ 6 + a ^ 12 + b ^ 12 + c ^ 12 + d ^ 12
        end, function (a, b, c, d)
            return (((((((((((((((((((((((((((((((((((((((((((((-170 * a ^ 3 * b ^ 3 * c ^ 12 + 170 * a ^ 3 * b ^ 3 * d ^ 12 + 170 * a ^ 3 * c ^ 3 * d ^ 12 + 170 * b ^ 3 * c ^ 3 * d ^ 12) - 1870 * a ^ 3 * b ^ 6 * c ^ 9) + 1870 * a ^ 3 * b ^ 6 * d ^ 9) - 1870 * a ^ 3 * c ^ 6 * d ^ 9) + 1870 * b ^ 3 * c ^ 6 * d ^ 9) - 1870 * a ^ 3 * b ^ 9 * c ^ 6) + 1870 * a ^ 3 * b ^ 9 * d ^ 6 + 1870 * a ^ 3 * c ^ 9 * d ^ 6 + 1870 * b ^ 3 * c ^ 9 * d ^ 6) - 170 * a ^ 3 * b ^ 12 * c ^ 3) + 170 * a ^ 3 * b ^ 12 * d ^ 3) - 170 * a ^ 3 * c ^ 12 * d ^ 3) + 170 * b ^ 3 * c ^ 12 * d ^ 3) - 1870 * a ^ 6 * b ^ 3 * c ^ 9) - 1870 * a ^ 6 * b ^ 3 * d ^ 9) + 1870 * a ^ 6 * c ^ 3 * d ^ 9) - 1870 * b ^ 6 * c ^ 3 * d ^ 9) - 7854 * a ^ 6 * b ^ 6 * c ^ 6) - 7854 * a ^ 6 * b ^ 6 * d ^ 6) - 7854 * a ^ 6 * c ^ 6 * d ^ 6) - 7854 * b ^ 6 * c ^ 6 * d ^ 6) - 1870 * a ^ 6 * b ^ 9 * c ^ 3) - 1870 * a ^ 6 * b ^ 9 * d ^ 3) + 1870 * a ^ 6 * c ^ 9 * d ^ 3) - 1870 * b ^ 6 * c ^ 9 * d ^ 3) - 17 * a ^ 6 * b ^ 12) - 17 * a ^ 6 * c ^ 12) - 17 * a ^ 6 * d ^ 12) - 17 * b ^ 6 * c ^ 12) - 17 * b ^ 6 * d ^ 12) - 17 * c ^ 6 * d ^ 12) - 1870 * a ^ 9 * b ^ 3 * c ^ 6) + 1870 * a ^ 9 * b ^ 3 * d ^ 6 + 1870 * a ^ 9 * c ^ 3 * d ^ 6 + 1870 * b ^ 9 * c ^ 3 * d ^ 6) - 1870 * a ^ 9 * b ^ 6 * c ^ 3) + 1870 * a ^ 9 * b ^ 6 * d ^ 3) - 1870 * a ^ 9 * c ^ 6 * d ^ 3) + 1870 * b ^ 9 * c ^ 6 * d ^ 3) - 170 * a ^ 12 * b ^ 3 * c ^ 3) - 170 * a ^ 12 * b ^ 3 * d ^ 3) + 170 * a ^ 12 * c ^ 3 * d ^ 3) - 170 * b ^ 12 * c ^ 3 * d ^ 3) - 17 * a ^ 12 * b ^ 6) - 17 * a ^ 12 * c ^ 6) - 17 * a ^ 12 * d ^ 6) - 17 * b ^ 12 * c ^ 6) - 17 * b ^ 12 * d ^ 6) - 17 * c ^ 12 * d ^ 6) + a ^ 18 + b ^ 18 + c ^ 18 + d ^ 18
        end, function (a, b, c, d)
            return ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((-230 * a ^ 3 * b ^ 3 * c ^ 6 * d ^ 12 + 230 * a ^ 3 * b ^ 3 * c ^ 12 * d ^ 6) - 230 * a ^ 3 * b ^ 6 * c ^ 3 * d ^ 12) + 230 * a ^ 3 * b ^ 6 * c ^ 12 * d ^ 3 + 46 * a ^ 3 * b ^ 6 * c ^ 15) - 46 * a ^ 3 * b ^ 6 * d ^ 15) + 46 * a ^ 3 * c ^ 6 * d ^ 15) - 46 * b ^ 3 * c ^ 6 * d ^ 15) + 230 * a ^ 3 * b ^ 9 * c ^ 12) - 230 * a ^ 3 * b ^ 9 * d ^ 12) - 230 * a ^ 3 * c ^ 9 * d ^ 12) - 230 * b ^ 3 * c ^ 9 * d ^ 12) + 230 * a ^ 3 * b ^ 12 * c ^ 3 * d ^ 6) - 230 * a ^ 3 * b ^ 12 * c ^ 6 * d ^ 3) + 230 * a ^ 3 * b ^ 12 * c ^ 9) - 230 * a ^ 3 * b ^ 12 * d ^ 9) + 230 * a ^ 3 * c ^ 12 * d ^ 9) - 230 * b ^ 3 * c ^ 12 * d ^ 9) + 46 * a ^ 3 * b ^ 15 * c ^ 6) - 46 * a ^ 3 * b ^ 15 * d ^ 6) - 46 * a ^ 3 * c ^ 15 * d ^ 6) - 46 * b ^ 3 * c ^ 15 * d ^ 6) - 230 * a ^ 6 * b ^ 3 * c ^ 3 * d ^ 12) - 230 * a ^ 6 * b ^ 3 * c ^ 12 * d ^ 3) + 46 * a ^ 6 * b ^ 3 * c ^ 15 + 46 * a ^ 6 * b ^ 3 * d ^ 15) - 46 * a ^ 6 * c ^ 3 * d ^ 15) + 46 * b ^ 6 * c ^ 3 * d ^ 15 + 1518 * a ^ 6 * b ^ 6 * c ^ 6 * d ^ 6 + 943 * a ^ 6 * b ^ 6 * c ^ 12 + 943 * a ^ 6 * b ^ 6 * d ^ 12 + 943 * a ^ 6 * c ^ 6 * d ^ 12 + 943 * b ^ 6 * c ^ 6 * d ^ 12 + 2530 * a ^ 6 * b ^ 9 * c ^ 9 + 2530 * a ^ 6 * b ^ 9 * d ^ 9) - 2530 * a ^ 6 * c ^ 9 * d ^ 9) + 2530 * b ^ 6 * c ^ 9 * d ^ 9 + 230 * a ^ 6 * b ^ 12 * c ^ 3 * d ^ 3 + 943 * a ^ 6 * b ^ 12 * c ^ 6 + 943 * a ^ 6 * b ^ 12 * d ^ 6 + 943 * a ^ 6 * c ^ 12 * d ^ 6 + 943 * b ^ 6 * c ^ 12 * d ^ 6 + 46 * a ^ 6 * b ^ 15 * c ^ 3 + 46 * a ^ 6 * b ^ 15 * d ^ 3) - 46 * a ^ 6 * c ^ 15 * d ^ 3) + 46 * b ^ 6 * c ^ 15 * d ^ 3 + 230 * a ^ 9 * b ^ 3 * c ^ 12) - 230 * a ^ 9 * b ^ 3 * d ^ 12) - 230 * a ^ 9 * c ^ 3 * d ^ 12) - 230 * b ^ 9 * c ^ 3 * d ^ 12) + 2530 * a ^ 9 * b ^ 6 * c ^ 9) - 2530 * a ^ 9 * b ^ 6 * d ^ 9) + 2530 * a ^ 9 * c ^ 6 * d ^ 9) - 2530 * b ^ 9 * c ^ 6 * d ^ 9) + 2530 * a ^ 9 * b ^ 9 * c ^ 6) - 2530 * a ^ 9 * b ^ 9 * d ^ 6) - 2530 * a ^ 9 * c ^ 9 * d ^ 6) - 2530 * b ^ 9 * c ^ 9 * d ^ 6) + 230 * a ^ 9 * b ^ 12 * c ^ 3) - 230 * a ^ 9 * b ^ 12 * d ^ 3) + 230 * a ^ 9 * c ^ 12 * d ^ 3) - 230 * b ^ 9 * c ^ 12 * d ^ 3) + 230 * a ^ 12 * b ^ 3 * c ^ 3 * d ^ 6 + 230 * a ^ 12 * b ^ 3 * c ^ 6 * d ^ 3 + 230 * a ^ 12 * b ^ 3 * c ^ 9 + 230 * a ^ 12 * b ^ 3 * d ^ 9) - 230 * a ^ 12 * c ^ 3 * d ^ 9) + 230 * b ^ 12 * c ^ 3 * d ^ 9) - 230 * a ^ 12 * b ^ 6 * c ^ 3 * d ^ 3) + 943 * a ^ 12 * b ^ 6 * c ^ 6 + 943 * a ^ 12 * b ^ 6 * d ^ 6 + 943 * a ^ 12 * c ^ 6 * d ^ 6 + 943 * b ^ 12 * c ^ 6 * d ^ 6 + 230 * a ^ 12 * b ^ 9 * c ^ 3 + 230 * a ^ 12 * b ^ 9 * d ^ 3) - 230 * a ^ 12 * c ^ 9 * d ^ 3) + 230 * b ^ 12 * c ^ 9 * d ^ 3 + 23 // 22 * a ^ 12 * b ^ 12 + 23 // 22 * a ^ 12 * c ^ 12 + 23 // 22 * a ^ 12 * d ^ 12 + 23 // 22 * b ^ 12 * c ^ 12 + 23 // 22 * b ^ 12 * d ^ 12 + 23 // 22 * c ^ 12 * d ^ 12 + 46 * a ^ 15 * b ^ 3 * c ^ 6) - 46 * a ^ 15 * b ^ 3 * d ^ 6) - 46 * a ^ 15 * c ^ 3 * d ^ 6) - 46 * b ^ 15 * c ^ 3 * d ^ 6) + 46 * a ^ 15 * b ^ 6 * c ^ 3) - 46 * a ^ 15 * b ^ 6 * d ^ 3) + 46 * a ^ 15 * c ^ 6 * d ^ 3) - 46 * b ^ 15 * c ^ 6 * d ^ 3) + 1 // 44 * a ^ 24 + 1 // 44 * b ^ 24 + 1 // 44 * c ^ 24 + 1 // 44 * d ^ 24
        end, function (a, b, c, d)
            return (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((-8700 * a ^ 3 * b ^ 3 * c ^ 6 * d ^ 18 + 8700 * a ^ 3 * b ^ 3 * c ^ 18 * d ^ 6) - 8700 * a ^ 3 * b ^ 6 * c ^ 3 * d ^ 18) + 73950 * a ^ 3 * b ^ 6 * c ^ 9 * d ^ 12) - 73950 * a ^ 3 * b ^ 6 * c ^ 12 * d ^ 9) + 8700 * a ^ 3 * b ^ 6 * c ^ 18 * d ^ 3) - 870 * a ^ 3 * b ^ 6 * c ^ 21) + 870 * a ^ 3 * b ^ 6 * d ^ 21) - 870 * a ^ 3 * c ^ 6 * d ^ 21) + 870 * b ^ 3 * c ^ 6 * d ^ 21 + 73950 * a ^ 3 * b ^ 9 * c ^ 6 * d ^ 12) - 73950 * a ^ 3 * b ^ 9 * c ^ 12 * d ^ 6) - 11600 * a ^ 3 * b ^ 9 * c ^ 18) + 11600 * a ^ 3 * b ^ 9 * d ^ 18 + 11600 * a ^ 3 * c ^ 9 * d ^ 18 + 11600 * b ^ 3 * c ^ 9 * d ^ 18 + 73950 * a ^ 3 * b ^ 12 * c ^ 6 * d ^ 9) - 73950 * a ^ 3 * b ^ 12 * c ^ 9 * d ^ 6) - 44370 * a ^ 3 * b ^ 12 * c ^ 15) + 44370 * a ^ 3 * b ^ 12 * d ^ 15) - 44370 * a ^ 3 * c ^ 12 * d ^ 15) + 44370 * b ^ 3 * c ^ 12 * d ^ 15) - 44370 * a ^ 3 * b ^ 15 * c ^ 12) + 44370 * a ^ 3 * b ^ 15 * d ^ 12 + 44370 * a ^ 3 * c ^ 15 * d ^ 12 + 44370 * b ^ 3 * c ^ 15 * d ^ 12 + 8700 * a ^ 3 * b ^ 18 * c ^ 3 * d ^ 6) - 8700 * a ^ 3 * b ^ 18 * c ^ 6 * d ^ 3) - 11600 * a ^ 3 * b ^ 18 * c ^ 9) + 11600 * a ^ 3 * b ^ 18 * d ^ 9) - 11600 * a ^ 3 * c ^ 18 * d ^ 9) + 11600 * b ^ 3 * c ^ 18 * d ^ 9) - 870 * a ^ 3 * b ^ 21 * c ^ 6) + 870 * a ^ 3 * b ^ 21 * d ^ 6 + 870 * a ^ 3 * c ^ 21 * d ^ 6 + 870 * b ^ 3 * c ^ 21 * d ^ 6) - 8700 * a ^ 6 * b ^ 3 * c ^ 3 * d ^ 18) + 73950 * a ^ 6 * b ^ 3 * c ^ 9 * d ^ 12 + 73950 * a ^ 6 * b ^ 3 * c ^ 12 * d ^ 9) - 8700 * a ^ 6 * b ^ 3 * c ^ 18 * d ^ 3) - 870 * a ^ 6 * b ^ 3 * c ^ 21) - 870 * a ^ 6 * b ^ 3 * d ^ 21) + 870 * a ^ 6 * c ^ 3 * d ^ 21) - 870 * b ^ 6 * c ^ 3 * d ^ 21) + 266220 * a ^ 6 * b ^ 6 * c ^ 6 * d ^ 12 + 266220 * a ^ 6 * b ^ 6 * c ^ 12 * d ^ 6) - 49590 * a ^ 6 * b ^ 6 * c ^ 18) - 49590 * a ^ 6 * b ^ 6 * d ^ 18) - 49590 * a ^ 6 * c ^ 6 * d ^ 18) - 49590 * b ^ 6 * c ^ 6 * d ^ 18) + 73950 * a ^ 6 * b ^ 9 * c ^ 3 * d ^ 12 + 73950 * a ^ 6 * b ^ 9 * c ^ 12 * d ^ 3) - 488070 * a ^ 6 * b ^ 9 * c ^ 15) - 488070 * a ^ 6 * b ^ 9 * d ^ 15) + 488070 * a ^ 6 * c ^ 9 * d ^ 15) - 488070 * b ^ 6 * c ^ 9 * d ^ 15) - 73950 * a ^ 6 * b ^ 12 * c ^ 3 * d ^ 9) + 266220 * a ^ 6 * b ^ 12 * c ^ 6 * d ^ 6) - 73950 * a ^ 6 * b ^ 12 * c ^ 9 * d ^ 3) - 1005720 * a ^ 6 * b ^ 12 * c ^ 12) - 1005720 * a ^ 6 * b ^ 12 * d ^ 12) - 1005720 * a ^ 6 * c ^ 12 * d ^ 12) - 1005720 * b ^ 6 * c ^ 12 * d ^ 12) - 488070 * a ^ 6 * b ^ 15 * c ^ 9) - 488070 * a ^ 6 * b ^ 15 * d ^ 9) + 488070 * a ^ 6 * c ^ 15 * d ^ 9) - 488070 * b ^ 6 * c ^ 15 * d ^ 9) + 8700 * a ^ 6 * b ^ 18 * c ^ 3 * d ^ 3) - 49590 * a ^ 6 * b ^ 18 * c ^ 6) - 49590 * a ^ 6 * b ^ 18 * d ^ 6) - 49590 * a ^ 6 * c ^ 18 * d ^ 6) - 49590 * b ^ 6 * c ^ 18 * d ^ 6) - 870 * a ^ 6 * b ^ 21 * c ^ 3) - 870 * a ^ 6 * b ^ 21 * d ^ 3) + 870 * a ^ 6 * c ^ 21 * d ^ 3) - 870 * b ^ 6 * c ^ 21 * d ^ 3) + 73950 * a ^ 9 * b ^ 3 * c ^ 6 * d ^ 12) - 73950 * a ^ 9 * b ^ 3 * c ^ 12 * d ^ 6) - 11600 * a ^ 9 * b ^ 3 * c ^ 18) + 11600 * a ^ 9 * b ^ 3 * d ^ 18 + 11600 * a ^ 9 * c ^ 3 * d ^ 18 + 11600 * b ^ 9 * c ^ 3 * d ^ 18 + 73950 * a ^ 9 * b ^ 6 * c ^ 3 * d ^ 12) - 73950 * a ^ 9 * b ^ 6 * c ^ 12 * d ^ 3) - 488070 * a ^ 9 * b ^ 6 * c ^ 15) + 488070 * a ^ 9 * b ^ 6 * d ^ 15) - 488070 * a ^ 9 * c ^ 6 * d ^ 15) + 488070 * b ^ 9 * c ^ 6 * d ^ 15) - 2637550 * a ^ 9 * b ^ 9 * c ^ 12) + 2637550 * a ^ 9 * b ^ 9 * d ^ 12 + 2637550 * a ^ 9 * c ^ 9 * d ^ 12 + 2637550 * b ^ 9 * c ^ 9 * d ^ 12) - 73950 * a ^ 9 * b ^ 12 * c ^ 3 * d ^ 6) + 73950 * a ^ 9 * b ^ 12 * c ^ 6 * d ^ 3) - 2637550 * a ^ 9 * b ^ 12 * c ^ 9) + 2637550 * a ^ 9 * b ^ 12 * d ^ 9) - 2637550 * a ^ 9 * c ^ 12 * d ^ 9) + 2637550 * b ^ 9 * c ^ 12 * d ^ 9) - 488070 * a ^ 9 * b ^ 15 * c ^ 6) + 488070 * a ^ 9 * b ^ 15 * d ^ 6 + 488070 * a ^ 9 * c ^ 15 * d ^ 6 + 488070 * b ^ 9 * c ^ 15 * d ^ 6) - 11600 * a ^ 9 * b ^ 18 * c ^ 3) + 11600 * a ^ 9 * b ^ 18 * d ^ 3) - 11600 * a ^ 9 * c ^ 18 * d ^ 3) + 11600 * b ^ 9 * c ^ 18 * d ^ 3) - 73950 * a ^ 12 * b ^ 3 * c ^ 6 * d ^ 9) - 73950 * a ^ 12 * b ^ 3 * c ^ 9 * d ^ 6) - 44370 * a ^ 12 * b ^ 3 * c ^ 15) - 44370 * a ^ 12 * b ^ 3 * d ^ 15) + 44370 * a ^ 12 * c ^ 3 * d ^ 15) - 44370 * b ^ 12 * c ^ 3 * d ^ 15) + 73950 * a ^ 12 * b ^ 6 * c ^ 3 * d ^ 9 + 266220 * a ^ 12 * b ^ 6 * c ^ 6 * d ^ 6 + 73950 * a ^ 12 * b ^ 6 * c ^ 9 * d ^ 3) - 1005720 * a ^ 12 * b ^ 6 * c ^ 12) - 1005720 * a ^ 12 * b ^ 6 * d ^ 12) - 1005720 * a ^ 12 * c ^ 6 * d ^ 12) - 1005720 * b ^ 12 * c ^ 6 * d ^ 12) - 73950 * a ^ 12 * b ^ 9 * c ^ 3 * d ^ 6) - 73950 * a ^ 12 * b ^ 9 * c ^ 6 * d ^ 3) - 2637550 * a ^ 12 * b ^ 9 * c ^ 9) - 2637550 * a ^ 12 * b ^ 9 * d ^ 9) + 2637550 * a ^ 12 * c ^ 9 * d ^ 9) - 2637550 * b ^ 12 * c ^ 9 * d ^ 9) - 1005720 * a ^ 12 * b ^ 12 * c ^ 6) - 1005720 * a ^ 12 * b ^ 12 * d ^ 6) - 1005720 * a ^ 12 * c ^ 12 * d ^ 6) - 1005720 * b ^ 12 * c ^ 12 * d ^ 6) - 44370 * a ^ 12 * b ^ 15 * c ^ 3) - 44370 * a ^ 12 * b ^ 15 * d ^ 3) + 44370 * a ^ 12 * c ^ 15 * d ^ 3) - 44370 * b ^ 12 * c ^ 15 * d ^ 3) - 145 * a ^ 12 * b ^ 18) - 145 * a ^ 12 * c ^ 18) - 145 * a ^ 12 * d ^ 18) - 145 * b ^ 12 * c ^ 18) - 145 * b ^ 12 * d ^ 18) - 145 * c ^ 12 * d ^ 18) - 44370 * a ^ 15 * b ^ 3 * c ^ 12) + 44370 * a ^ 15 * b ^ 3 * d ^ 12 + 44370 * a ^ 15 * c ^ 3 * d ^ 12 + 44370 * b ^ 15 * c ^ 3 * d ^ 12) - 488070 * a ^ 15 * b ^ 6 * c ^ 9) + 488070 * a ^ 15 * b ^ 6 * d ^ 9) - 488070 * a ^ 15 * c ^ 6 * d ^ 9) + 488070 * b ^ 15 * c ^ 6 * d ^ 9) - 488070 * a ^ 15 * b ^ 9 * c ^ 6) + 488070 * a ^ 15 * b ^ 9 * d ^ 6 + 488070 * a ^ 15 * c ^ 9 * d ^ 6 + 488070 * b ^ 15 * c ^ 9 * d ^ 6) - 44370 * a ^ 15 * b ^ 12 * c ^ 3) + 44370 * a ^ 15 * b ^ 12 * d ^ 3) - 44370 * a ^ 15 * c ^ 12 * d ^ 3) + 44370 * b ^ 15 * c ^ 12 * d ^ 3 + 8700 * a ^ 18 * b ^ 3 * c ^ 3 * d ^ 6 + 8700 * a ^ 18 * b ^ 3 * c ^ 6 * d ^ 3) - 11600 * a ^ 18 * b ^ 3 * c ^ 9) - 11600 * a ^ 18 * b ^ 3 * d ^ 9) + 11600 * a ^ 18 * c ^ 3 * d ^ 9) - 11600 * b ^ 18 * c ^ 3 * d ^ 9) - 8700 * a ^ 18 * b ^ 6 * c ^ 3 * d ^ 3) - 49590 * a ^ 18 * b ^ 6 * c ^ 6) - 49590 * a ^ 18 * b ^ 6 * d ^ 6) - 49590 * a ^ 18 * c ^ 6 * d ^ 6) - 49590 * b ^ 18 * c ^ 6 * d ^ 6) - 11600 * a ^ 18 * b ^ 9 * c ^ 3) - 11600 * a ^ 18 * b ^ 9 * d ^ 3) + 11600 * a ^ 18 * c ^ 9 * d ^ 3) - 11600 * b ^ 18 * c ^ 9 * d ^ 3) - 145 * a ^ 18 * b ^ 12) - 145 * a ^ 18 * c ^ 12) - 145 * a ^ 18 * d ^ 12) - 145 * b ^ 18 * c ^ 12) - 145 * b ^ 18 * d ^ 12) - 145 * c ^ 18 * d ^ 12) - 870 * a ^ 21 * b ^ 3 * c ^ 6) + 870 * a ^ 21 * b ^ 3 * d ^ 6 + 870 * a ^ 21 * c ^ 3 * d ^ 6 + 870 * b ^ 21 * c ^ 3 * d ^ 6) - 870 * a ^ 21 * b ^ 6 * c ^ 3) + 870 * a ^ 21 * b ^ 6 * d ^ 3) - 870 * a ^ 21 * c ^ 6 * d ^ 3) + 870 * b ^ 21 * c ^ 6 * d ^ 3 + a ^ 30 + b ^ 30 + c ^ 30 + d ^ 30
        end])
chevieset(:G32, :Discriminant, function ()
        return function (a, b, c, d)
                return (((((((((((((((((6388800 * a * b * d ^ 3 + 2662000000 * a * c ^ 2 * d ^ 2 + 45919500000 * a * b ^ 2 * c ^ 3) - 53240000000 * b * c ^ 3 * d) - 95832000 * a * b ^ 3 * c * d) + 1401543 // 20 * a * b ^ 6 + 59895000 * b ^ 2 * c * d ^ 2) - 3690500000 * a ^ 2 * b * c ^ 2 * d) - 5513970 * a ^ 2 * b ^ 2 * d ^ 2) - 544500000000 * a ^ 2 * c ^ 4) + 71628975 // 2 * a ^ 2 * b ^ 4 * c) - 21175000 * a ^ 3 * c * d ^ 2) + 1332966250 * a ^ 3 * b ^ 2 * c ^ 2 + 2108788 * a ^ 3 * b ^ 3 * d) - 2662000 * d ^ 4) + 26642000 * a ^ 4 * b * c * d + 22460625 * b ^ 4 * c ^ 2 + 10139250000 * a ^ 4 * c ^ 3 + -26003571 // 80 * a ^ 4 * b ^ 4 + 10648000000000 * c ^ 5) - 71874 * b ^ 5 * d) + 64570 * a ^ 5 * d ^ 2) - 9759475 * a ^ 5 * b ^ 2 * c) - 62764 * a ^ 6 * b * d) - 81614375 * a ^ 6 * c ^ 2) + 761263 // 40 * a ^ 7 * b ^ 2 + 5723475 // 22 * a ^ 8 * c + -2706867 // 9680 * a ^ 10
            end
    end)
chevieset(:G32, :UnipotentCharacters, function ()
        local i3, I, J, cuspidal
        J = E(3)
        i3 = J - J ^ 2
        I = E(4)
        cuspidal(arg...) = begin
                local res, n
                n = "G_{32}"
                if length(arg) > 2 && IsInt(arg[3])
                    n *= SPrint("^", arg[3])
                end
                n *= SPrint("[", FormatTeX(arg[2]), "]")
                res = Dict{Symbol, Any}(:relativeType => Dict{Symbol, Any}(:series => "A", :indices => [], :rank => 0), :levi => 1:4, :parameterExponents => [], :charNumbers => [arg[1]], :eigenvalue => arg[2], :cuspidalName => n)
                if length(arg) > 2 && !(IsInt(arg[length(arg)]))
                    res[:qEigen] = arg[length(arg)]
                end
                return res
            end
        return Dict{Symbol, Any}(:harishChandra => [Dict{Symbol, Any}(:relativeType => Dict{Symbol, Any}(:series => "ST", :indices => 1:4, :rank => 4, :ST => 32), :levi => [], :parameterExponents => [1, 1, 1, 1], :charNumbers => 1:102, :eigenvalue => 1, :cuspidalName => ""), Dict{Symbol, Any}(:relativeType => Dict{Symbol, Any}(:series => "ST", :indices => 2:4, :rank => 3, :ST => 26), :levi => [1], :parameterExponents => [3, 1, 1], :charNumbers => [103, 171, 240, 241, 121, 120, 242, 117, 234, 105, 233, 104, 108, 238, 199, 126, 162, 109, 235, 173, 200, 127, 163, 110, 236, 172, 130, 203, 161, 226, 119, 175, 131, 204, 160, 225, 118, 174, 152, 153, 177, 179, 178, 176, 201, 128, 202, 129], :eigenvalue => J ^ 2, :cuspidalName => ImprimitiveCuspidalName([[], [0, 1], [0, 1]])), Dict{Symbol, Any}(:relativeType => Dict{Symbol, Any}(:series => "ST", :indices => [4, 3], :rank => 2, :ST => 5), :levi => 1:2, :parameterExponents => [1, [0, 4, 4]], :charNumbers => [239, 113, 114, 246, 135, 132, 245, 133, 134, 136, 230, 229, 124, 208, 206, 123, 205, 207, 182, 181, 180], :eigenvalue => -1, :cuspidalName => "G_4"), Dict{Symbol, Any}(:relativeType => Dict{Symbol, Any}(:series => "ST", :indices => [2, 4], :rank => 2, :p => 6, :q => 1), :levi => [1, 3], :parameterExponents => [[3, 3, 2, 0, 0, 2], 3], :charNumbers => [188, 122, 137, 184, 190, 140, 187, 139, 189, 183, 138, 227, 212, 209, 164, 244, 237, 210, 243, 211, 228, 107, 106, 111, 185, 186, 112], :eigenvalue => J, :cuspidalName => Concatenation(ImprimitiveCuspidalName([[], [0, 1], [0, 1]]), "\\otimes ", ImprimitiveCuspidalName([[], [0, 1], [0, 1]]))), Dict{Symbol, Any}(:relativeType => Dict{Symbol, Any}(:series => "ST", :indices => [4], :rank => 1, :p => 6, :q => 1), :levi => 1:3, :parameterExponents => [[6, 4, 1, 0, 1, 4]], :charNumbers => [116, 143, 217, 232, 218, 144], :eigenvalue => J, :cuspidalName => "G_{25}[\\zeta_3]"), Dict{Symbol, Any}(:relativeType => Dict{Symbol, Any}(:series => "ST", :indices => [4], :rank => 1, :p => 6, :q => 1), :levi => 1:3, :parameterExponents => [[6, 1, 4, 0, 4, 1]], :charNumbers => [115, 216, 145, 231, 146, 215], :eigenvalue => -J, :cuspidalName => "G_{25}[-\\zeta_3]"), Dict{Symbol, Any}(:relativeType => Dict{Symbol, Any}(:series => "ST", :indices => [3], :rank => 1, :p => 6, :q => 1), :levi => [1, 2, 4], :parameterExponents => [[9, 8, 5, 0, 5, 8]], :charNumbers => [125, 142, 213, 247, 214, 141], :eigenvalue => -(J ^ 2), :cuspidalName => Concatenation("G_4\\otimes ", ImprimitiveCuspidalName([[], [0, 1], [0, 1]]))), cuspidal(147, 1), cuspidal(148, 1, 2), cuspidal(219, 1, 3), cuspidal(149, -1), cuspidal(191, -1, 2), cuspidal(192, -1, 3), cuspidal(220, -1, 4), cuspidal(151, E(4)), cuspidal(154, E(4), 2, 1 // 2), cuspidal(155, E(4), 3, 1 // 2), cuspidal(150, -(E(4))), cuspidal(156, -(E(4)), 2, 1 // 2), cuspidal(157, -(E(4)), 3, 1 // 2), cuspidal(193, J ^ 2), cuspidal(194, J ^ 2, 2), cuspidal(197, -J), cuspidal(198, -J, 2), cuspidal(195, -(J ^ 2)), cuspidal(196, -(J ^ 2), 2), cuspidal(221, E(5)), cuspidal(222, E(5, 2)), cuspidal(223, E(5, 3)), cuspidal(224, E(5, 4)), cuspidal(165, E(9, 5), 2 // 3), cuspidal(170, E(9, 5), 2, 1 // 3), cuspidal(166, E(9, 2), 1 // 3), cuspidal(168, E(9, 2), 2, 2 // 3), cuspidal(167, E(9, 8), 2 // 3), cuspidal(169, E(9, 8), 2, 1 // 3), cuspidal(158, E(12, 11), 1 // 2), cuspidal(159, E(12, 5), 1 // 2)], :families => [Family("C1", [1]), Family(((CHEVIE[:families])[:X])(3), [9, 6, 103], Dict{Symbol, Any}(:signs => [1, 1, -1], :ennola => 3)), Family(((CHEVIE[:families])[:QZ])(3, [Perm(), [E(3)]]), [20, 23, 26, 106, 104, 15, 105, 12, 107], Dict{Symbol, Any}(:signs => [1, 1, 1, 1, -1, 1, 1, 1, 1], :ennola => 8)), Family(((CHEVIE[:families])[:X])(3), [37, 34, 108], Dict{Symbol, Any}(:signs => [1, 1, -1], :ennola => -1)), Family(((CHEVIE[:families])[:X])(6), [57, 64, 49, 61, 54, 111, 113, 109, 115, 17, 116, 110, 18, 114, 112], Dict{Symbol, Any}(:signs => [1, 1, 1, 1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, -1], :ennola => 5)), Family(((CHEVIE[:families])[:X])(3) * Family("X5"), [46, 72, 123, 119, 41, 44, 69, 124, 118, 45, 120, 117, 125, 122, 121], Dict{Symbol, Any}(:signs => [1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, -1, 1, 1, -1], :ennola => -10)), Family(((CHEVIE[:families])[:G4])(), [73, 76, 147, 133, 132, 149, 80, 13, 10, 32, 43, 40, 97, 148, 52, 150, 136, 151, 126, 139, 27, 130, 138, 84, 128, 135, 144, 141, 74, 145, 143, 142, 77, 146, 129, 134, 137, 81, 127, 140, 28, 131], Dict{Symbol, Any}(:signs => [1, 1, 1, -1, -1, 1, 1, 1, 1, 1, -1, -1, -1, 1, 1, -1, -1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 1, 1, -1, 1, 1, 1], :ennola => 9)), Family(((CHEVIE[:families])[:X])(3) * ((CHEVIE[:families])[:TQZ])(2, -1, [1, -1]), [93, 96, 156, 154, 94, 95, 157, 155, 153, 152, 159, 158], Dict{Symbol, Any}(:signs => [1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 1, 1], :cospecial => 6, :ennola => 7)), Family(((CHEVIE[:families])[:X])(3) * ((CHEVIE[:families])[:X])(3), [85, 87, 161, 88, 82, 160, 163, 162, 164], Dict{Symbol, Any}(:signs => [1, 1, -1, 1, 1, -1, -1, -1, 1], :cospecial => 5, :ennola => -6)), Family(((CHEVIE[:families])[:TQZ])(3, E(3, 2), [1, E(3, 2)]), [102, 100, 101, 167, 168, 165, 170, 166, 169], Dict{Symbol, Any}(:ennola => 7)), Family(Family("X5") * ((CHEVIE[:families])[:QZ])(3), [53, 21, 59, 90, 185, 177, 47, 187, 193, 79, 33, 36, 98, 184, 179, 99, 183, 178, 180, 182, 181, 192, 198, 196, 191, 197, 195, 171, 172, 173, 174, 68, 189, 175, 71, 190, 56, 60, 24, 48, 188, 194, 89, 186, 176], Dict{Symbol, Any}(:signs => [-1, -1, 1, -1, 1, -1, -1, 1, -1, -1, 1, 1, -1, 1, -1, -1, 1, 1, 1, 1, 1, -1, 1, -1, -1, 1, -1, 1, 1, 1, 1, 1, -1, 1, -1, 1, -1, 1, -1, -1, 1, 1, -1, 1, 1], :ennola => 41)), Family(Dict{Symbol, Any}(:fourierMat => [[-1, -1, 1, 1, 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5, 5, 5, -1, -5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5, 5, -5 * E(3, 2), -5 * E(3), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 1, 5, -6, -6, -6, -6], [-1, -1, 1, 1, 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5, 5, 5, -1, -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), 5, 5, -5 * E(3), -5 * E(3, 2), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), -5 * E(3), 1, 5, -6, -6, -6, -6], [1, 1, -1, -1, -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), 5, 5, 5, 1, 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5, 5, -5 * E(3, 2), -5 * E(3), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), -1, 5, 6, 6, 6, 6], [1, 1, -1, -1, -5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5, 5, 5, 1, 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), -5 * E(3), 5, 5, -5 * E(3), -5 * E(3, 2), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), -1, 5, 6, 6, 6, 6], [5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5, 5, 5, 5, 5, 5, 5 * E(3), 5 * E(3, 2), 5, 5, -5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5, -5, 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3), 5 * E(3, 2), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), -5 * E(3), -5, 5, 0, 0, 0, 0], [5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5, 5, 5, 5, 5, 5, 5 * E(3, 2), 5 * E(3), 5, 5, -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5, -5, 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3, 2), 5 * E(3), 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5, 5, 0, 0, 0, 0], [5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5, 5, 5, 5, -5, -5, -5 * E(3), -5 * E(3, 2), -5, 5, -5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5, 5, -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3), -5 * E(3, 2), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5, -5, 0, 0, 0, 0], [5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5, 5, 5, 5, -5, -5, -5 * E(3, 2), -5 * E(3), -5, 5, -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5, 5, -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3, 2), -5 * E(3), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5, -5, 0, 0, 0, 0], [5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5, 5, -5, -5, 5, 5, 5 * E(3), 5 * E(3, 2), 5, 5, -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5, 5, 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3), -5 * E(3, 2), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), 5, -5, 0, 0, 0, 0], [5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5, 5, -5, -5, 5, 5, 5 * E(3, 2), 5 * E(3), 5, 5, -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), 5, 5, 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3, 2), -5 * E(3), -5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5, -5, 0, 0, 0, 0], [5, 5, 5, 5, 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5, 5, 5, 5, -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), -5 * E(3), -5, -5, 5 * E(3), 5 * E(3, 2), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), 5, -5, 0, 0, 0, 0], [5, 5, 5, 5, 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), 5, 5, 5, 5, -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5, -5, 5 * E(3, 2), 5 * E(3), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5, -5, 0, 0, 0, 0], [5, 5, 5, 5, 5, 5, -5, -5, 5, 5, 5, 5, 5, 5, -5, 5, 5, -5, 5, -5, -5, -5, 5, 5, 5, 5, 5, 5, 5, -5, -5, 5, -5, 5, 5, -5, 0, 0, 0, 0], [-1, -1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, -1, -5, 5, -5, 5, 5, -5, 5, 5, -5, -5, 5, 5, 5, 5, -5, 5, 5, -5, 5, -5, 1, 5, -6, -6, -6, -6], [-5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3, 2), -5 * E(3), -5, -5, 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), -5 * E(3, 2), -5 * E(3), 5 * E(3), 5 * E(3, 2), -5, -5, -5, -5, 5 * E(3), -5 * E(3, 2), -5, 5, -5, 5, 5, -5, 0, 0, 0, 0], [5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3), 5 * E(3, 2), 5, 5, -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3), 5 * E(3, 2), -5 * E(3, 2), -5 * E(3), 5, 5, 5, 5, -5 * E(3, 2), 5 * E(3), 5, -5, 5, -5, -5, 5, 0, 0, 0, 0], [-5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3, 2), 5 * E(3), 5, -5, 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3, 2), 5 * E(3), -5 * E(3), -5 * E(3, 2), 5, 5, -5, -5, -5 * E(3), 5 * E(3, 2), 5, -5, -5, 5, 5, 5, 0, 0, 0, 0], [5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3), -5 * E(3, 2), -5, 5, -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3), -5 * E(3, 2), 5 * E(3, 2), 5 * E(3), -5, -5, 5, 5, 5 * E(3, 2), -5 * E(3), -5, 5, 5, -5, -5, -5, 0, 0, 0, 0], [5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3, 2), 5 * E(3), 5, 5, -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3, 2), -5 * E(3), 5 * E(3), 5 * E(3, 2), 5, 5, 5, 5, 5 * E(3), -5 * E(3, 2), -5, 5, -5, 5, 5, -5, 0, 0, 0, 0], [-5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3), -5 * E(3, 2), -5, -5, 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3), 5 * E(3, 2), -5 * E(3, 2), -5 * E(3), -5, -5, -5, -5, -5 * E(3, 2), 5 * E(3), 5, -5, 5, -5, -5, 5, 0, 0, 0, 0], [5, 5, 5, 5, 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5, -5, -5, 5, -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5, 5, -5 * E(3), -5 * E(3, 2), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5, 5, 0, 0, 0, 0], [5, 5, 5, 5, 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5, -5, -5, 5, -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5, 5, -5 * E(3, 2), -5 * E(3), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5, 5, 0, 0, 0, 0], [-5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5, -5, 5, 5, 5, 5, 5 * E(3), 5 * E(3, 2), 5, -5, 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5, 5, 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3), -5 * E(3, 2), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5, -5, 0, 0, 0, 0], [-5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5, -5, 5, 5, 5, 5, 5 * E(3, 2), 5 * E(3), 5, -5, 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), 5, 5, 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3, 2), -5 * E(3), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5, -5, 0, 0, 0, 0], [5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5, 5, -5, 5, 5, -5, 5, -5, -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5, -5, -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), 5 * E(3), 5, -5, 0, 0, 0, 0], [5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5, 5, -5, 5, 5, -5, 5, -5, -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5, -5, -5 * E(3), 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5, -5, 0, 0, 0, 0], [5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5, 5, -5, 5, -5, 5, 5, -5, 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), -5, 5, 5 * E(3, 2), -5 * E(3), 5 * E(3, 2), -5 * E(3), -5, 5, 0, 0, 0, 0], [5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5, 5, -5, 5, -5, 5, 5, -5, 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5, 5, 5 * E(3), -5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5, 5, 0, 0, 0, 0], [-5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3, 2), 5 * E(3), 5, -5, 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3, 2), -5 * E(3), 5 * E(3), 5 * E(3, 2), 5, 5, -5, -5, 5 * E(3), -5 * E(3, 2), -5, 5, 5, -5, -5, -5, 0, 0, 0, 0], [5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3), -5 * E(3, 2), -5, 5, -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3), 5 * E(3, 2), -5 * E(3, 2), -5 * E(3), -5, -5, 5, 5, -5 * E(3, 2), 5 * E(3), 5, -5, -5, 5, 5, 5, 0, 0, 0, 0], [5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5, 5, -5, 5, 5, -5, -5, 5, 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5, 5, 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5, 5, 0, 0, 0, 0], [-5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5, -5, 5, -5, -5, 5, 5, -5, -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5, -5, -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5, -5, 0, 0, 0, 0], [5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5, 5, -5, 5, -5, 5, -5, 5, -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), 5, -5, -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5, -5, 0, 0, 0, 0], [-5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5 * E(3), -5 * E(3), -5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5 * E(3), 5 * E(3, 2), 5, -5, 5, -5, 5, -5, 5, -5, 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), 5 * E(3), 5 * E(3, 2), -5 * E(3), -5 * E(3, 2), -5, 5, 5 * E(3), -5 * E(3, 2), -5 * E(3), 5 * E(3, 2), 5, 5, 0, 0, 0, 0], [1, 1, -1, -1, -5, -5, -5, -5, 5, 5, 5, 5, 5, 1, 5, -5, 5, -5, 5, -5, 5, 5, -5, -5, 5, 5, -5, -5, -5, 5, 5, -5, -5, 5, -1, 5, 6, 6, 6, 6], [5, 5, 5, 5, 5, 5, -5, -5, -5, -5, -5, -5, -5, 5, -5, 5, 5, -5, -5, 5, 5, 5, -5, -5, -5, -5, 5, 5, -5, 5, 5, -5, -5, 5, 5, 5, 0, 0, 0, 0], [-6, -6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 9 - 3 * root(5), -6 - 6 * root(5), -6 + 6 * root(5), 9 + 3 * root(5)], [-6, -6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, -6 - 6 * root(5), 9 + 3 * root(5), 9 - 3 * root(5), -6 + 6 * root(5)], [-6, -6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, -6 + 6 * root(5), 9 - 3 * root(5), 9 + 3 * root(5), -6 - 6 * root(5)], [-6, -6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 9 + 3 * root(5), -6 + 6 * root(5), -6 - 6 * root(5), 9 - 3 * root(5)]] // 30, :eigenvalues => [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, J ^ 2, J ^ 2, J ^ 2, J ^ 2, J ^ 2, J ^ 2, -1, -1, -1, -1, J, J, J, J, -(J ^ 2), -(J ^ 2), -J, -J, J, J, 1, -1, E(5), E(5, 2), E(5, 3), E(5, 4)], :explanation => "mystery G32", :name => "?40", :special => 3, :cospecial => 4, :ennola => 14), [8, 5, 65, 62, 86, 83, 66, 63, 51, 50, 67, 70, 91, 92, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224], Dict{Symbol, Any}(:signs => [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])), Family(((CHEVIE[:families])[:X])(6), [58, 75, 25, 78, 55, 227, 229, 225, 231, 30, 232, 226, 29, 230, 228], Dict{Symbol, Any}(:signs => [1, 1, 1, 1, 1, 1, -1, -1, 1, -1, 1, -1, 1, 1, -1], :ennola => -15)), Family(((CHEVIE[:families])[:X])(3) * ((CHEVIE[:families])[:X])(3), [38, 42, 234, 39, 35, 233, 236, 235, 237], Dict{Symbol, Any}(:signs => [1, 1, -1, 1, 1, -1, -1, -1, 1], :cospecial => 5, :ennola => 3)), Family("X5", [19, 31, 239, 238, 22], Dict{Symbol, Any}(:signs => [1, 1, -1, -1, 1], :ennola => -5)), Family(conj(((CHEVIE[:families])[:X])(6)), [14, 7, 16, 4, 11, 240, 246, 244, 247, 2, 242, 243, 3, 245, 241], Dict{Symbol, Any}(:signs => [1, 1, 1, 1, 1, 1, 1, -1, 1, 1, -1, 1, -1, -1, 1], :special => 13, :cospecial => 10, :ennola => 15))], :a => [0, 40, 40, 40, 15, 1, 40, 15, 1, 6, 40, 2, 6, 40, 2, 40, 4, 4, 30, 2, 12, 30, 2, 12, 20, 2, 6, 6, 20, 20, 30, 6, 12, 3, 25, 12, 3, 25, 25, 6, 5, 25, 6, 5, 5, 5, 12, 12, 4, 15, 15, 6, 12, 4, 20, 12, 4, 20, 12, 12, 4, 15, 15, 4, 15, 15, 15, 12, 5, 15, 12, 5, 6, 6, 20, 6, 6, 20, 12, 6, 6, 9, 15, 6, 9, 15, 9, 9, 12, 12, 15, 15, 8, 8, 8, 8, 6, 12, 12, 10, 10, 10, 1, 2, 2, 2, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 20, 20, 20, 20, 20, 20, 20, 20, 25, 25, 25, 25, 25, 30, 30, 40, 40, 40, 40, 40, 40, 40, 40], :A => [0, 80, 80, 80, 75, 29, 80, 75, 29, 66, 80, 46, 66, 80, 46, 80, 56, 56, 78, 46, 72, 78, 46, 72, 76, 46, 66, 66, 76, 76, 78, 66, 72, 51, 77, 72, 51, 77, 77, 66, 61, 77, 66, 61, 61, 61, 72, 72, 56, 75, 75, 66, 72, 56, 76, 72, 56, 76, 72, 72, 56, 75, 75, 56, 75, 75, 75, 72, 61, 75, 72, 61, 66, 66, 76, 66, 66, 76, 72, 66, 66, 69, 75, 66, 69, 75, 69, 69, 72, 72, 75, 75, 67, 67, 67, 67, 66, 72, 72, 70, 70, 70, 29, 46, 46, 46, 46, 51, 56, 56, 56, 56, 56, 56, 56, 56, 61, 61, 61, 61, 61, 61, 61, 61, 61, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 67, 67, 67, 67, 67, 67, 67, 67, 69, 69, 69, 69, 69, 70, 70, 70, 70, 70, 70, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 76, 76, 76, 76, 76, 76, 76, 76, 77, 77, 77, 77, 77, 78, 78, 80, 80, 80, 80, 80, 80, 80, 80])
    end)
