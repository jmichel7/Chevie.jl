# tbl/cmplxg29.jl      CHEVIE library           Gunter Malle and Jean Michel
# Copyright (C) 1998-  The CHEVIE Team

# of interest is the alternate presentation of the braid group
chevieset(:G29, :AltPres, [Dict{Symbol, Any}(
:gens => [[1], [-4, 2, 4], [3], [4]], 
:rels => [[[1, 2, 1], [2, 1, 2]], [[2, 4, 2], [4, 2, 4]],
     [[3, 4, 3], [4, 3, 4]], [[2, 3, 2], [3, 2, 3]], [[1, 3], [3, 1]],
     [[1, 4], [4, 1]], [[4, 2, 3, 4, 2, 3, 4, 2], [3, 4, 2, 3, 4, 2, 3, 4]]])])
# Our G29 is equal to reflection_subgroup(G31,[234,13,3,5])
# This is also the subgroup which leaves invariant the Φ₁ of Maschke

chevieset(:G29, :simpleroots, [0 0 0 -2;
                               -E(4) E(4) 1 1;
                               1-E(4) -1+E(4) 0 0;
                               0 1-E(4) -1+E(4) 0]//2)

chevieset(:G29, :ordergens, fill(2,4))

chevieset(:G29, :BraidRelations, [[[1, 2, 1], [2, 1, 2]], [[2, 4,2], [4, 2, 4]],
  [[3, 4, 3], [4, 3, 4]], [[2, 3, 2, 3], [3, 2, 3, 2]], [[1, 3], [3, 1]],
  [[1, 4], [4, 1]], [[4, 3, 2, 4, 3, 2], [3, 2, 4, 3, 2, 4]]])

chevieset(:G29, :ReflectionDegrees, [4, 8, 12, 20])

chevieset(:G29, :NrConjugacyClasses, 37)

chevieset(:G29, :ParabolicRepresentatives,s->[[Int[]],[[1]],[[1,2],[1,3],[2,3]],
  [1:3,[1,2,4],[1,3,4],[1,3,9],2:4],[1:4]][s+1])

chevieset(:G29, :ClassNames, [".", "1", "12", "23", "31", "234", "341", "123",
 "243", "124", "3232", "c", "ccc", "124z", "43232", "32321", "12zzz", "3123cc",
 "cc", "12z", "342342", "432432", "123z", "341z", "323123121", "12zz", "234zz",
 "234z","cccc","31z","3232z","1z","323123121z", "432432z", "z", "zzz", "zz"])

chevieset(:G29, :WordsClassRepresentatives, map(x->
     collect(replace(x, "."=>"", "z"=>"1243"^5,"c"=>"1243")).-'0',
     chevieget(:G29, :ClassNames)))

chevieset(:G29, :PowerMaps, [nothing, [1, 1, 3, 11, 1, 21, 3, 3, 22, 5, 1, 19, 19, 5, 11, 11, 26, 31, 29, 26, 11, 11, 26, 26, 1, 3, 21, 22, 29, 37, 37, 37, 37, 11, 37, 37, 1], [1, 2, 1, 4, 5, 9, 2, 25, 6, 10, 11, 13, 12, 14, 15, 16, 35, 18, 19, 36, 22, 21, 32, 33, 25, 37, 28, 27, 29, 30, 31, 33, 32, 34, 36, 35, 37], nothing, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 35, 36, 14, 15, 16, 17, 18, 37, 20, 21, 22, 23, 24, 25, 26, 27, 28, 1, 30, 31, 32, 33, 34, 35, 36, 37], nothing, [1, 2, 3, 4, 5, 9, 7, 8, 6, 10, 11, 13, 12, 14, 15, 16, 20, 18, 19, 17, 22, 21, 24, 23, 25, 26, 28, 27, 29, 30, 31, 33, 32, 34, 36, 35, 37], nothing, nothing, nothing, [1, 2, 3, 4, 5, 9, 7, 8, 6, 10, 11, 13, 12, 14, 15, 16, 20, 18, 19, 17, 22, 21, 24, 23, 25, 26, 28, 27, 29, 30, 31, 33, 32, 34, 36, 35, 37], nothing, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], nothing, nothing, nothing, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], nothing, [1, 2, 3, 4, 5, 9, 7, 8, 6, 10, 11, 13, 12, 14, 15, 16, 20, 18, 19, 17, 22, 21, 24, 23, 25, 26, 28, 27, 29, 30, 31, 33, 32, 34, 36, 35, 37]])

chevieset(:G29, :ClassInfo, Dict{Symbol, Any}(
  :classtext => chevieget(:G29, :WordsClassRepresentatives),
  :classnames => chevieget(:G29, :ClassNames),
  :classparams => chevieget(:G29, :ClassNames),
  :orders=>[1, 2, 3, 4, 2, 8, 6, 6, 8, 4, 2, 20, 20, 4, 4, 4, 12, 8, 10, 12,
              4, 4, 12, 12, 2, 6, 8, 8, 5, 4, 4, 4, 4, 4, 4, 4, 2],
  :classes=>[1,40,320,60,120,240,320,320,240,480,30,384,384,480,240,240,320,
          480,384,320,60,60,320,320,40,320,240,240,384,120,30,40,40,60,1,1,1]))

chevieset(:G29, :CharInfo, function ()
  res=Dict{Symbol, Any}(:charparams => [[1, 0], [1, 40], [4, 4], [4, 24],
    [4, 1], [4, 21], [4, 3], [4, 23], [5, 8], [5, 16], [6, 12], [6, 10, 1],
    [6, 10, 2], [6, 10, 3], [6, 10, 4], [10, 18], [10, 2], [10, 14], [10, 6],
    [15, 4, 1], [15, 4, 2], [15, 12, 1], [15, 12, 2], [16, 15], [16, 5],
    [16, 13], [16, 3], [20, 6], [20, 10], [20, 9], [20, 5], [20, 11], [20, 7],
    [24, 6], [24, 9], [24, 7], [30, 8]],
# here the labelling is as follows: phi_15,4'' occurs in the tensor product
# of phi_{4,1} and phi_{4,3}.
# The tensor by sign of phi_{15,4}'' is phi_{15,12}''.
# phi_{6,10}' occurs in the permutation representation on the parabolic
# A_3=reflection_subgroup(W,[1,2,4])
# phi_{6,10}''' occurs in the tensor square of the phi_{4,1}, and
# phi_{6,10''''} is the complex conjugate.
   :hgal => perm"(24,26)(25,27)", :extRefl => [1, 5, 14, 8, 2])
  res[:b]=map(x->x[2], res[:charparams])
  res[:charnames] = exceptioCharName.(res[:charparams])
  res
end)

chevieset(:G29, :CycPolSchurElements, [
  [1, 0, 2, 2, 2, 2, 3, 4, 4, 4, 4, 5, 6, 8, 10, 12, 20], 
  [1, -40, 2, 2, 2, 2, 3, 4, 4, 4, 4, 5, 6, 8, 10, 12, 20], 
  [2, -1, 2, 2, 2, 2, 3, 4, 5, 6, 8, 10], 
  [2, -21, 2, 2, 2, 2, 3, 4, 5, 6, 8, 10], 
  [-2*E(4)+2,-1,2,2,3,4,4,1//4,1//4,5,3//8,7//8,7//12,11//12,1//20,9//20,13//20,17//20],
  [2*E(4)+2,-21,2,2,3,4,4,3//4,3//4,5,1//8,5//8,1//12,5//12,3//20,7//20,11//20,19//20],
  [2*E(4)+2,-1,2,2,3,4,4,3//4,3//4,5,1//8,5//8,1//12,5//12,3//20,7//20,11//20,19//20],
  [-2*E(4)+2,-21,2,2,3,4,4,1//4,1//4,5,3//8,7//8,7//12,11//12,1//20,9//20,13//20,17//20],
  [2,-4,2,2,2,2,3,4,4,4,4,6],[2,-12,2,2,2,2,3,4,4,4,4,6],[4,-6,2,2,2,2,4,4,5],
  [5,-6,2,2,2,2,4,4,4,4],[5,-6,2,2,2,2,4,4,4,4],
  [-20,-6,2,2,2,2,3//4,3//4,3//4,3//4,1//20,9//20,13//20,17//20],
  [-20,-6,2,2,2,2,1//4,1//4,1//4,1//4,3//20,7//20,11//20,19//20],
  [1,-18,2,2,2,2,3,4,4,4,4,6,12],[1,-2,2,2,2,2,3,4,4,4,4,6,12],
  [2,-12,2,2,2,2,3,4,4,6,8],[2,-4,2,2,2,2,3,4,4,6,8],[1,-4,2,2,2,2,4,4,4,4,8],
  [2,-4,2,2,2,2,4,4,4,4,12],[1,-12,2,2,2,2,4,4,4,4,8],
  [2,-12,2,2,2,2,4,4,4,4,12],[2,-13,2,2,2,2,3,5,6,10],[2,-3,2,2,2,2,3,5,6,10],
  [2,-13,2,2,2,2,3,5,6,10],[2,-3,2,2,2,2,3,5,6,10],[2,-5,2,2,2,2,3,4,6,8],
  [2,-9,2,2,2,2,3,4,6,8],
  [-2*E(4)+2,-9,2,2,3,4,4,3//4,3//4,3//8,7//8,1//12,5//12],
  [2*E(4)+2,-5,2,2,3,4,4,1//4,1//4,1//8,5//8,7//12,11//12],
  [2*E(4)+2,-9,2,2,3,4,4,1//4,1//4,1//8,5//8,7//12,11//12],
  [-2*E(4)+2,-5,2,2,3,4,4,3//4,3//4,3//8,7//8,1//12,5//12],
  [20,-6,4,4,4,4,10],[4,-6,2,2,4,5,8],[4,-6,2,2,4,5,8],[4,-6,2,2,2,2,4,4,10]])

chevieset(:G29,:sparseFakeDegrees,[[1,0],[1,40],[1,4,1,8,1,12,1,16],
  [1,24,1,28,1,32,1,36],[1,1,1,9,1,13,1,17],[1,21,1,29,1,33,1,37],
  [1,3,1,7,1,11,1,19],[1,23,1,27,1,31,1,39],[1,8,1,12,1,16,1,20,1,24],
  [1,16,1,20,1,24,1,28,1,32],[1,12,1,16,2,20,1,24,1,28],
  [1,10,1,14,1,18,1,22,1,26,1,30],[1,10,1,14,1,18,1,22,1,26,1,30],
  [1,10,1,14,1,18,1,22,1,26,1,30],[1,10,1,14,1,18,1,22,1,26,1,30],
  [1,18,2,22,2,26,2,30,2,34,1,38],[1,2,2,6,2,10,2,14,2,18,1,22],
  [1,14,2,18,2,22,2,26,2,30,1,34],[1,6,2,10,2,14,2,18,2,22,1,26],
  [1,4,2,8,3,12,3,16,3,20,2,24,1,28],[1,4,2,8,3,12,3,16,3,20,2,24,1,28],
  [1,12,2,16,3,20,3,24,3,28,2,32,1,36],[1,12,2,16,3,20,3,24,3,28,2,32,1,36],
  [2,15,3,19,3,23,3,27,3,31,2,35],[2,5,3,9,3,13,3,17,3,21,2,25],
  [1,13,2,17,3,21,4,25,3,29,2,33,1,37],[1,3,2,7,3,11,4,15,3,19,2,23,1,27],
  [1,6,3,10,4,14,4,18,4,22,3,26,1,30],[1,10,3,14,4,18,4,22,4,26,3,30,1,34],
  [1,9,2,13,4,17,4,21,4,25,3,29,2,33],[1,5,2,9,4,13,4,17,4,21,3,25,2,29],
  [2,11,3,15,4,19,4,23,4,27,2,31,1,35],[2,7,3,11,4,15,4,19,4,23,2,27,1,31],
  [1,6,2,10,4,14,5,18,5,22,4,26,2,30,1,34],[2,9,4,13,5,17,5,21,4,25,3,29,1,33],
  [1,7,3,11,4,15,5,19,5,23,4,27,2,31],[2,8,4,12,6,16,6,20,6,24,4,28,2,32]])

LaurentPolynomials.root(f::Frac)=root(numerator(f))//root(denominator(f))

# Computed JM oct. 2005. Completed 18th column nov. 2012 using:
# The  representative  w=3123cc  of  18th  class satisfies w^2=z2323 in BW,
# which  can be  checked by  adding this  relation to the presentation then
# simplifying. The eigenvalues of w^2 for missing lines are
#28[ 6 x  -q^13,  8 x   q^13, 2 x  -q^11, 4 x  -q^15 ]
#30[ 4 x  Iq^11, 10 x -Iq^11, 4 x   Iq^9, 2 x  Iq^13 ]
#34[ 4 x  -q^12, 16 x   q^12, 2 x  -q^10, 2 x  -q^14 ]
#35[ 8 x  Iq^12, 12 x -Iq^12, 2 x  Iq^10, 2 x  Iq^14 ]
#37[ 8 x   q^12, 16 x  -q^12, 3 x   q^10, 3 x   q^14 ]
# For rationality reasons the character has to vanish on w for 28,30,35 and
# has to be an integral multiple of q^6 for 34 so by specialization is 0.
# It has to be aq^6+bq^5+cq^7 for 37. By specialization a+b+c=2.
# By Schur relations a=0 and b=1.
chevieset(:G29, :HeckeCharTable, function (para, rt)
  q=-para[1][1]//para[1][2]
  r,p=para[1]
  tbl = Dict{Symbol, Any}(:identifier=>"H(G29)", :size => 7680,:order=>7680,
                          :powermap => chevieget(:G29, :PowerMaps))
  merge!(tbl, chevieget(:G29, :ClassInfo))
  f3(x,y)=[4, 3x+y, 2x^2+x*y, 2x^2+2x*y, 2x^2+2x*y, x^3+x^2*y,
    x^3+2x^2*y, x^3+2x^2*y, x^3+x^2*y, x^3+x^2*y, 2x^4+2x^2*y^2, x^3*y, x^9*y^3,
    -x^18*y^5-x^17*y^6, x^5-x^4*y, x^5+x^3*y^2, -2x^47*y^15-x^46*y^16,
    0, -x^6*y^2, -2x^17*y^5-x^16*y^6, x^6-x^4*y^2, x^6-x^4*y^2,
    -x^18*y^5-2x^17*y^6, -x^18*y^5-2x^17*y^6, x^9-x^6*y^3, 2x^32*y^10+x^31*y^11,
    x^33*y^10+x^32*y^11, -x^18*y^5-x^17*y^6, -x^12*y^4, -2x^17*y^5-2x^16*y^6,
    -2x^19*y^5-2x^17*y^7, -3x^16*y^5-x^15*y^6, -x^24*y^5+x^21*y^8,
    -x^21*y^5+x^19*y^7, -4x^15*y^5, -4x^45*y^15, 4x^30*y^10]
  f1(r)=r.^length.(tbl[:classtext])
  adj(p,x)=x.*f1(-p)
  f5(x,y,I)=[4, 3x+y, 2x^2+x*y, 2x^2, 2x^2+2x*y, I*x*y^2+x^3-x^2*y-x*y^2,
 x^3+2x^2*y, x^3, I*x^2*y+x^3, x^3+x^2*y, 2x^4-2x^2*y^2, I*x^3*y, -I*x^9*y^3,
 -I*x^18*y^5-I*x^17*y^6, I*x^4*y+I*x^3*y^2+x^5-x^3*y^2, x^5-x^3*y^2,
 2I*x^47*y^15+I*x^46*y^16, 0, x^6*y^2, -2I*x^17*y^5-I*x^16*y^6,
 2I*x^5*y-2I*x^3*y^3-2I*x^2*y^4+x^6+2x^5*y+3x^4*y^2+2x^3*y^3,
 2I*x^4*y^2+x^6-x^4*y^2, -I*x^18*y^5, -I*x^18*y^5-2I*x^17*y^6, x^9+3x^6*y^3,
 -2x^32*y^10-x^31*y^11, -I*x^31*y^12-x^33*y^10+x^32*y^11+x^31*y^12,
 -I*x^18*y^5+I*x^17*y^6+I*x^16*y^7+x^16*y^7, -x^12*y^4,
 -2I*x^17*y^5-2I*x^16*y^6, -2I*x^19*y^5+2I*x^17*y^7, -3I*x^16*y^5-I*x^15*y^6,
 -I*x^24*y^5-3I*x^21*y^8, -I*x^21*y^5+I*x^19*y^7+2x^19*y^7, -4I*x^15*y^5,
 4I*x^45*y^15, -4x^30*y^10]
  f9(x,y)=[5, 3x+2y, x^2+2x*y, 2x^2+2x*y+y^2, 2x^2+2x*y+y^2, x^2*y,
 x^3+x^2*y+x*y^2, x^3+x^2*y+x*y^2, x^2*y, x^2*y, 2x^4+2x^2*y^2+y^4,
 0, 0, x^14*y^9, -x^4*y-x^3*y^2-x^2*y^3, x^5,
 x^38*y^24+2x^37*y^25, x^6*y^6, 0, x^14*y^8+2x^13*y^9,
 -x^4*y^2-2x^3*y^3, -x^4*y^2-2x^3*y^3, x^15*y^8+x^14*y^9+x^13*y^10,
 x^15*y^8+x^14*y^9+x^13*y^10, x^9-2x^6*y^3-2x^3*y^6, x^26*y^16+2x^25*y^17,
 x^26*y^17, x^14*y^9, 0, 2x^14*y^8+2x^13*y^9+x^12*y^10,
 2x^16*y^8+2x^14*y^10+x^12*y^12, 3x^13*y^8+2x^12*y^9,
 x^21*y^8-2x^18*y^11-2x^15*y^14, -x^16*y^10-2x^15*y^11, 5x^12*y^8, 5x^36*y^24,
 5x^24*y^16]
  f11(x,y)= [6, 3x+3y, x^2+2x*y+y^2, x^2+4x*y+y^2, x^2+4x*y+y^2,
 x^2*y+x*y^2, 2x^2*y+2x*y^2, 2x^2*y+2x*y^2, x^2*y+x*y^2, x^2*y+x*y^2,
 x^4+4x^2*y^2+y^4, x^2*y^2, x^6*y^6, x^12*y^11+x^11*y^12, -x^4*y-x*y^4,
 x^3*y^2+x^2*y^3, x^32*y^30+2x^31*y^31+x^30*y^32, x^7*y^5+x^5*y^7, x^4*y^4,
 x^12*y^10+2x^11*y^11+x^10*y^12, -x^4*y^2-x^2*y^4, -x^4*y^2-x^2*y^4,
 2x^12*y^11+2x^11*y^12, 2x^12*y^11+2x^11*y^12, -x^6*y^3-x^3*y^6,
 x^22*y^20+2x^21*y^21+x^20*y^22, x^22*y^21+x^21*y^22, x^12*y^11+x^11*y^12,
 x^8*y^8, x^12*y^10+4x^11*y^11+x^10*y^12, x^14*y^10+4x^12*y^12+x^10*y^14,
 3x^11*y^10+3x^10*y^11, -x^16*y^13-x^13*y^16, -x^14*y^12-x^12*y^14,
 6x^10*y^10, 6x^30*y^30, 6x^20*y^20]
  f12(x,y)= [6, 3x+3y, x^2+2x*y+y^2, 2x*y, 2x^2+2x*y+2y^2,
 -x^3-x^2*y-x*y^2-y^3, x^3+x^2*y+x*y^2+y^3, 0, 
 0, x^3+x*y^2, -2x^2*y^2, -x^2*y^2, -x^6*y^6, -x^13*y^10-x^11*y^12,
 -x^3*y^2-x^2*y^3, -x^3*y^2-x^2*y^3, -x^32*y^30-2x^31*y^31-x^30*y^32,
 0, x^4*y^4, -x^12*y^10-2x^11*y^11-x^10*y^12,
 x^6+2x^5*y+3x^4*y^2+2x^3*y^3+3x^2*y^4+2x*y^5+y^6, -2x^3*y^3,
 0, -x^13*y^10-x^12*y^11-x^11*y^12-x^10*y^13, 3x^5*y^4+3x^4*y^5,
 x^22*y^20+2x^21*y^21+x^20*y^22, -x^23*y^20-x^22*y^21-x^21*y^22-x^20*y^23,
 x^13*y^10+x^12*y^11+x^11*y^12+x^10*y^13, x^8*y^8,
 -2x^12*y^10-2x^11*y^11-2x^10*y^12, 2x^12*y^12, -3x^11*y^10-3x^10*y^11,
 -3x^15*y^14-3x^14*y^15, 2x^13*y^13, -6x^10*y^10, -6x^30*y^30, 6x^20*y^20]
  function f14(r,p,I)
    q=-r//p
    adj(p,[6,-3+3q,(1-2q)+q^2,1+q^2,(1-4q)+q^2,(I-2)*q+(I+2)*q^2,2q-2*q^2,0,-I*q-I*q^2,q-q^2,(1-4*q^2)+q^4,-q^2,-q^6,-q^11+q^12,(-I*q+(I+1)*q^2+(I-1)*q^3)-I*q^4,q^2-q^3,(-q^30+2*q^31)-q^32,-I*q^7+I*q^5,q^4,(-q^10+2*q^11)-q^12,(((2I-2)*q+(-2I+3)*q^2)-4*q^3)+(2I+3)*q^4+(-2I-2)*q^5,(-2I-1)*q^2+(2I-1)*q^4,0,-2*q^11+2*q^12,3*q^3-3*q^6,(q^20-2*q^21)+q^22,(I-2)*q^21+(I+2)*q^22,(-I+2)*q^11+(-I-2)*q^12,q^8,(-q^10+4*q^11)-q^12,(-q^10+4*q^12)-q^14,3*q^10-3*q^11,-3*q^13+3*q^16,(2I+1)*q^12+(-2I+1)*q^14,-6*q^10,-6*q^30,6*q^20])
  end
  function f17(r, p)
    q=-r//p
    adj(p,[10,-7+3q,4-3q,4-2q,(5-4q)+q^2,(-1-q)+2*q^2,(-3+3q)-q^2,-2+q,-1+q,-2+2q,4-2*q^2,0,0,2*q^6-2*q^7,(-1-q)+2*q^2,-2+2*q^2,-4*q^18+3*q^19,0,0,-4*q^6+3*q^7,((1-4q)+5*q^2)-4*q^3,1-3*q^2,2*q^6-q^7,(3*q^6-3*q^7)+q^8,(-2+q^3)-3*q^4,4*q^12-3*q^13,(-q^12-q^13)+2*q^14,(q^6+q^7)-2*q^8,0,(-5*q^6+4*q^7)-q^8,-4*q^6+2*q^8,7*q^6-3*q^7,(2*q^6-q^9)+3*q^10,-q^6+3*q^8,-10*q^6,-10*q^18,10*q^12])
  end
  function f18(r,p)
    q=-r//p
    adj(p,[10,-6+4q,(3-3q)+q^2,2-4q,(3-6q)+q^2,q^2-q^3,(-1+4q)-2*q^2,2q-q^2,-1+q,(-1+2q)-q^2,2,0,0,(q^8-2*q^9)+q^10,((-1-q)+q^2)-q^3,q^2+q^3,(-3*q^24+3*q^25)-q^26,0,0,(-3*q^8+3*q^9)-q^10,(((((2-2q)+2*q^2)-2*q^3)+3*q^4)-2*q^5)+q^6,(1-q^2)+2*q^3,-2*q^9+q^10,(q^8-4*q^9)+2*q^10,(2*q^3-3*q^4)-q^6,(3*q^16-3*q^17)+q^18,q^18-q^19,-q^10+q^11,0,(-3*q^8+6*q^9)-q^10,-2*q^8,6*q^8-4*q^9,-2*q^11+3*q^12+q^14,(-q^8+q^10)-2*q^11,-10*q^8,-10*q^24,10*q^16])
  end
  function f22(r,p)
    q=-r//p
    adj(p,[15,-6+9q,(1-5q)+4*q^2,-4q+3*q^2,(3-6q)+6*q^2,((1-3q)+2*q^2)-q^3,((-1+2q)-4*q^2)+3*q^3,-q^2+q^3,-q^2,(q-2*q^2)+2*q^3,-4*q^2+3*q^4,0,0,(q^13-2*q^14)+2*q^15,(q^2-3*q^3)+q^4,(q^2-3*q^3)+q^5,(q^36-5*q^37)+4*q^38,-q^8,0,(q^12-5*q^13)+4*q^14,(((((1-2q)+3*q^2)-6*q^3)+8*q^4)-6*q^5)+q^6,2*q^3-3*q^4,-q^14+q^15,((-q^12+2*q^13)-4*q^14)+3*q^15,((-3*q^4+6*q^5)-q^6)+q^9,(q^24-5*q^25)+4*q^26,((q^24-3*q^25)+2*q^26)-q^27,((q^12-3*q^13)+2*q^14)-q^15,0,(3*q^12-6*q^13)+6*q^14,-4*q^14+3*q^16,-6*q^12+9*q^13,((-3*q^16+6*q^17)-q^18)+q^21,2*q^15-3*q^16,15*q^12,15*q^36,15*q^24])
  end
  function f23(r,p)
    q=-r//p
    adj(p,[15,-6+9q,(1-5q)+4*q^2,(1-2q)+4*q^2,(2-8q)+5*q^2,(1-3q)+3*q^2,(3q-5*q^2)+2*q^3,-q^2+q^3,q^3,(q-3*q^2)+q^3,(1-6*q^2)+4*q^4,0,0,(q^13-3*q^14)+q^15,(2*q^2-4*q^3)+q^5,(q^2-3*q^3)+q^5,(q^36-5*q^37)+4*q^38,-q^6,0,(q^12-5*q^13)+4*q^14,(((((1-2q)+3*q^2)-4*q^3)+9*q^4)-6*q^5)+2*q^6,(4*q^3-2*q^4)+q^6,-q^14+q^15,(3*q^13-5*q^14)+2*q^15,((3*q^3+3*q^5)-4*q^6)+q^9,(q^24-5*q^25)+4*q^26,(q^24-3*q^25)+3*q^26,(q^12-3*q^13)+3*q^14,0,(2*q^12-8*q^13)+5*q^14,(q^12-6*q^14)+4*q^16,-6*q^12+9*q^13,((3*q^15+3*q^17)-4*q^18)+q^21,(4*q^15-2*q^16)+q^18,15*q^12,15*q^36,15*q^24])
  end
  function f24(x, y, sgn)
    v=sgn*root(x*y)
    [16,6x+10y,5*x*y+x^2+5*y^2,4*x*y+4*y^2,8*x*y+2*x^2+6*y^2,(-2*x*y^2-3*x^2*y)-x^3,5*x*y^2+3*x^2*y+3*y^3,2*x*y^2+y^3,x*y^2+y^3,3*x*y^2+x^2*y+2*y^3,-4*x^2*y^2+4*y^4,-v*x*y^2,-v*x^4*y^7,(-2*v*x^7*y^15-3*v*x^8*y^14)-v*x^9*y^13,((-x*y^4-3*x^2*y^3)-x^3*y^2)+y^5,(-2*x^2*y^3-x^3*y^2)+y^5,(-5*v*x^22*y^39-5*v*x^23*y^38)-v*x^24*y^37,0,x^3*y^5,(-5*v*x^7*y^14-5*v*x^8*y^13)-v*x^9*y^12,6*x*y^5+8*x^2*y^4+6*x^3*y^3+3*x^4*y^2+2*x^5*y+x^6+2*y^6,(-3*x^2*y^4-2*x^3*y^3)+y^6,-v*x^7*y^15-2*v*x^8*y^14,(-3*v*x^7*y^15-5*v*x^8*y^14)-3*v*x^9*y^13,5*x^3*y^6+3*x^4*y^5+3*x^5*y^4+y^9,5*x^15*y^27+5*x^16*y^26+x^17*y^25,(-2*x^16*y^27-3*x^17*y^26)-x^18*y^25,2*v*x^8*y^14+3*v*x^9*y^13+v*x^10*y^12,x^6*y^10,(-6*v*x^7*y^14-8*v*x^8*y^13)-2*v*x^9*y^12,-4*v*x^7*y^16+4*v*x^9*y^14,-10*v*x^7*y^13-6*v*x^8*y^12,((-v*x^7*y^21-5*v*x^10*y^18)-3*v*x^11*y^17)-3*v*x^12*y^16,-v*x^7*y^18+3*v*x^9*y^16+2*v*x^10*y^15,-16*v*x^7*y^12,-16*v*x^22*y^37,16*x^15*y^25]
  end
  function f28(r, p)
    q=-r//p
    adj(p,[20,-9+11q,(2-7q)+4*q^2,(2-6q)+4*q^2,(4-10q)+6*q^2,((1-2q)+2*q^2)-q^3,((-1+4q)-6*q^2)+2*q^3,(q-3*q^2)+q^3,q-q^2,(2q-3*q^2)+q^3,(2-2*q^2)+4*q^4,0,0,(-2*q^12+3*q^13)-q^14,((-q+2*q^2)-4*q^3)+q^4,(2*q^2-q^3)+q^5,(-2*q^33+7*q^34)-4*q^35,0,0,(-2*q^11+7*q^12)-4*q^13,(((((1-2q)+2*q^2)-4*q^3)+8*q^4)-6*q^5)+q^6,(-q^2+4*q^3)-3*q^4,(-q^12+3*q^13)-q^14,((q^11-4*q^12)+6*q^13)-2*q^14,(q^3-3*q^4)+3*q^5+q^9,(2*q^22-7*q^23)+4*q^24,((q^22-2*q^23)+2*q^24)-q^25,((-q^11+2*q^12)-2*q^13)+q^14,0,(-4*q^11+10*q^12)-6*q^13,(-2*q^11+2*q^13)-4*q^15,9*q^11-11*q^12,((-q^14+3*q^15)-3*q^16)-q^20,(q^13-4*q^14)+3*q^15,-20*q^11,-20*q^33,20*q^22])
  end
  function f30(r,p,I)
    q=-r//p
    adj(p,[20,-11+9q,(4-7q)+2*q^2,(4-4q)+2*q^2,(6-10q)+4*q^2,(1+(I-3)*q+4*q^2)-q^3,((-2+6q)-4*q^2)+q^3,(-1+q)-q^2,q-I*q^2,(-1+3q)-2*q^2,(4-6*q^2)+2*q^4,0,0,(-I*q^9+3*I*q^10)-2*I*q^11,(-q+4*q^2+(I-3)*q^3)-I*q^4,(-1+3*q^2)-2*q^3,(-4*I*q^27+7*I*q^28)-2*I*q^29,0,0,(4*I*q^9-7*I*q^10)+2*I*q^11,(1-6q)+(-2I+8)*q^2+(2I-6)*q^3+6*q^4+(-2I-4)*q^5+q^6,-3*q^2+4*q^3+(2I-1)*q^4,(-I*q^9+I*q^10)-I*q^11,((-2*I*q^9+6*I*q^10)-4*I*q^11)+I*q^12,(((-1+4*q^3)-3*q^4)+3*q^5)-q^6,(-4*q^18+7*q^19)-2*q^20,((-q^18+(-I+3)*q^19)-4*q^20)+q^21,(I*q^9+(-3I-1)*q^10+4*I*q^11)-I*q^12,0,(6*I*q^9-10*I*q^10)+4*I*q^11,(4*I*q^9-6*I*q^11)+2*I*q^13,-11*I*q^9+9*I*q^10,(((-I*q^9+4*I*q^12)-3*I*q^13)+3*I*q^14)-I*q^15,-3*I*q^11+4*I*q^12+(-I-2)*q^13,20*I*q^9,-20*I*q^27,-20*q^18])
  end
  function f34(r,p)
    q=-r//p
    adj(p,[24,-12+12q,(4-8q)+4*q^2,(2-4q)+2*q^2,(6-12q)+6*q^2,((2-6q)+6*q^2)-2*q^3,((-2+6q)-6*q^2)+2*q^3,0,0,((-1+3q)-3*q^2)+q^3,(2-12*q^2)+2*q^4,q^2,q^6,((q^10-3*q^11)+3*q^12)-q^13,4*q^2-4*q^3,4*q^2-4*q^3,(-4*q^30+8*q^31)-4*q^32,0,-q^4,(-4*q^10+8*q^11)-4*q^12,(((((2-8q)+12*q^2)-12*q^3)+12*q^4)-8*q^5)+2*q^6,(-2*q^2+4*q^3)-2*q^4,0,((2*q^10-6*q^11)+6*q^12)-2*q^13,((6*q^3-6*q^4)+6*q^5)-6*q^6,(4*q^20-8*q^21)+4*q^22,((2*q^20-6*q^21)+6*q^22)-2*q^23,((-2*q^10+6*q^11)-6*q^12)+2*q^13,-q^8,(-6*q^10+12*q^11)-6*q^12,(-2*q^10+12*q^12)-2*q^14,12*q^10-12*q^11,((-6*q^13+6*q^14)-6*q^15)+6*q^16,(2*q^12-4*q^13)+2*q^14,-24*q^10,-24*q^30,24*q^20])
  end
  function f35(r,p,I)
    q=-r//p
    adj(p,[24,-12+12q,(4-8q)+4*q^2,(2-8q)+2*q^2,(6-12q)+6*q^2,(2+(-I-3)*q+(I+3)*q^2)-2*q^3,((-2+6q)-6*q^2)+2*q^3,2q-2*q^2,(-I+1)*q+(I-1)*q^2,((-1+3q)-3*q^2)+q^3,(2-4*q^2)+2*q^4,-I*q^2,I*q^6,((-I*q^10+3*I*q^11)-3*I*q^12)+I*q^13,(-I-1)*q+(I+3)*q^2+(-I-3)*q^3+(I+1)*q^4,2*q^2-2*q^3,(-4*I*q^30+8*I*q^31)-4*I*q^32,0,q^4,(4*I*q^10-8*I*q^11)+4*I*q^12,2+(2I-6)*q+(2I+8)*q^2+(-4I-8)*q^3+(2I+8)*q^4+(2I-6)*q^5+2*q^6,(-2I-2)*q^2+4*q^3+(-2I-2)*q^4,2*I*q^11-2*I*q^12,((-2*I*q^10+6*I*q^11)-6*I*q^12)+2*I*q^13,((2*q^3-6*q^4)+6*q^5)-2*q^6,(-4*q^20+8*q^21)-4*q^22,-2*q^20+(I+3)*q^21+(-I-3)*q^22+2*q^23,(2*I*q^10+(-3I+1)*q^11+(3I-1)*q^12)-2*I*q^13,-q^8,(6*I*q^10-12*I*q^11)+6*I*q^12,(2*I*q^10-4*I*q^12)+2*I*q^14,-12*I*q^10+12*I*q^11,((2*I*q^13-6*I*q^14)+6*I*q^15)-2*I*q^16,(-2I+2)*q^12+4*I*q^13+(-2I+2)*q^14,24*I*q^10,-24*I*q^30,-24*q^20])
  end
  function f37(r, p)
    q=-r//p
    adj(p,[30,-15+15q,(5-10q)+5*q^2,(3-8q)+3*q^2,(7-16q)+7*q^2,((2-5q)+5*q^2)-2*q^3,((-2+8q)-8*q^2)+2*q^3,2q-2*q^2,q-q^2,((-1+4q)-4*q^2)+q^3,(3-8*q^2)+3*q^4,0,0,((-q^10+4*q^11)-4*q^12)+q^13,((-q+4*q^2)-4*q^3)+q^4,3*q^2-3*q^3,(5*q^30-10*q^31)+5*q^32,q^5+q^7,0,(5*q^10-10*q^11)+5*q^12,(((((2-8q)+11*q^2)-12*q^3)+11*q^4)-8*q^5)+2*q^6,(-3*q^2+4*q^3)-3*q^4,2*q^11-2*q^12,((-2*q^10+8*q^11)-8*q^12)+2*q^13,((5*q^3-6*q^4)+6*q^5)-5*q^6,(5*q^20-10*q^21)+5*q^22,((2*q^20-5*q^21)+5*q^22)-2*q^23,((2*q^10-5*q^11)+5*q^12)-2*q^13,0,(7*q^10-16*q^11)+7*q^12,(3*q^10-8*q^12)+3*q^14,-15*q^10+15*q^11,((5*q^13-6*q^14)+6*q^15)-5*q^16,(-3*q^12+4*q^13)-3*q^14,30*q^10,30*q^30,30*q^20])
  end
  tbl[:irreducibles]=toM([f1(r), f1(p), f3(r, p), f3(p, r), f5(r, p, E(4)), 
    f5(p, r, E(4)), f5(r, p, -E(4)), f5(p, r, -E(4)), f9(r, p), f9(p, r),
    f11(r, p), f12(r, p), f12(p, r), f14(r, p, E(4)), f14(r, p, -E(4)),
    f17(r, p), f17(p, r), f18(r, p), f18(p, r), f22(r, p), f23(r, p),
    f22(p, r), f23(p, r), f24(r, p, 1), f24(p, r, 1), f24(r, p, -1),
    f24(p, r, -1), f28(r, p), f28(p, r), f30(r, p, E(4)), f30(p, r, E(4)),
    f30(r, p, -E(4)), f30(p, r, -E(4)), f34(r, p), f35(r, p, E(4)),
    f35(r, p, -E(4)), f37(r, p)])*q^0
  tbl[:centralizers]=div.(tbl[:order],tbl[:classes])
  tbl[:irredinfo] = chevieget(:G29, :IrredInfo)
  tbl
end)

chevieset(:G29,:galomorphisms,perm"(6,9)(12,13)(17,20)(21,22)(23,24)(27,28)(32,33)(35,36)")

# Completed JM dec. 2014 using Marin-Pfeiffer
chevieset(:G29, :HeckeRepresentation, function (para, rt, i)
  f1(x)=[[x;;],[x;;],[x;;],[x;;]]
  f3(x,y)=WGraph2Representation([[[1,2,3],[1,2,4],[1,3,4],[2,3,4]],
        [[1,2,-x,y],[1,3,-x,y],[3,4,-x,y]]],[x,y])*x^0*y^0
  f5(x,y,I)=WGraph2Representation([[[1,2,3],[1,2,4],[1,3,4],[2,3,4]],
    [[1,2,-x,y],[1,3,-x,y],[2,3,(-I-1)*x,(-I+1)*y],[3,4,-x,y]]],[x,y])*x^0*y^0
  f9(x,y)=WGraph2Representation([[[1,3],[4],[2],[2,3],[1,4]],[[1,4,-y,x],
     [1,5,-y,x],[2,4,x,-y],[2,5,0,-y],[3,4,0,x],[3,5,-y,x]]],[y,x])*x^0*y^0
  function f12(x, y)
    R=WGraph2Representation([[[2],[1,3,4],[1,3],[1,2,4],[2,3],[4]],
      [[1,2,x,-y],[1,4,0,-y],[1,5,0,-y],[2,3,x,0],[2,6,-y,0],[3,4,-y,x],
       [3,5,-y,x],[4,6,-y,0],[5,6,-y,x]]],[x,y])*x^0*y^0
    [R[1], R[2],inv(R[4])*R[3]*R[4],R[4]]
  end
  function f17(x,y)
    R=WGraph2Representation([[[1,2,3],[1,3,4],[1,2,4],[2,3],[1,3,4],[2,4],
      [2,3,4],[1,3,4],[1,2,4],[1,2,3]],[[1,2,y,-x],[1,3,y,-x],[1,4,-y,0],
      [2,6,y,-x],[3,5,-y,x],[3,6,y,0],[3,8,-y,0],[4,5,x,-y],[4,6,-y,x],
      [4,7,0,x-y],[4,10,0,x-y],[5,9,-y,0],[6,7,0,-x+y],[6,9,0,x-y],[7,8,x,-y],
      [8,9,y,-x],[8,10,-y,x],[9,10,x,-y]]],[x,y])*x^0*y^0
    ir4=comatrix(R[4])//det_bareiss(R[4])
    [R[1], R[2],ir4*R[3]*R[4],R[4]]
  end
  function f18(x,y)
    R=WGraph2Representation([[[1,3,4],[1,2,4],[1,2,3],[1,4],[1,3],[1,2],
      [2,3,4],[3,4],[2,4],[2,3]],[[1,4,-y,0],[1,5,-y,0],[1,6,-y,x],[1,7,-y,x],
      [1,8,-y,0],[2,4,x,0],[2,5,x,-y],[2,6,x,0],[2,9,-x,0],[3,4,-y,x],
      [3,5,-y,0],[3,6,-y,0],[3,10,-y,0],[4,9,-y,x],[5,10,-x,y],[7,8,-y+x,0],
      [7,9,-y-x,0],[8,9,x,-y],[8,10,-x,y],[9,10,x,-y]]],[x,y])*y^0*x^0
    [R[1], R[2],inv(R[4])*R[3]*R[4],R[4]]
  end
  f21(x,y)=expandrep(4,15,Tuple{typeof(0+x*y),Vector{Int64}}[
    (x^3*y+x^2*y^2, [172, 176,352, 356]), (-x^3-x^2*y, [532, 536]),
    (x^3+2x^2*y+x*y^2, [178, 358]),
 (-x^3*y^-1-x^2-x*y-y^2, [538]), (x^2*y^3+x*y^4, [77]), (x^2*y^3+2x*y^4+y^5,
 [97]), (-x^2*y^2-x*y^3, [106]), (x^2*y^2+x*y^3, [158, 338]),
 (-x^2*y-2x*y^2-y^3, [478, 518]), (x^2*y+x*y^2, [166, 346, 398, 638]),
 (-x^2-x*y, [526]), (x^2+x*y, [91, 154, 334, 892, 896]), (x^2+2x*y+y^2, [238,
 418, 658]), (-x^2*y^-1, [514]), (x^2*y^-1+x+y, [898]), (-x*y^4-y^5, [98]),
 (x*y^4+y^5, [112, 115, 116]), (-x*y^3-y^4, [337, 458, 476]), (x*y^3, [437]),
 (x*y^3+y^4, [37, 52, 56, 108, 117, 137]), (-x*y^2, [199]), (-x*y^2-y^3, [168,
 177, 348, 357, 466]), (x*y^2, [637]), (x*y^2+y^3, [48, 57, 218, 232, 236,
 412, 416, 656]), (-x*y, [64, 540]), (-x*y-y^2, [81, 454]), (x*y, [69, 314,
 879]), (x*y+y^2, [134, 226, 878]), (-x, [312, 376, 430, 507, 626]), (-x-y,
 [278]), (x, [2, 3, 143, 193, 257, 301, 323, 385, 451, 513, 560, 577, 578,
 706, 708, 717, 770, 771, 772, 773, 798, 835, 836, 886, 897]), (x+y, [68, 121,
 129, 151, 194, 214, 259, 321, 324, 388, 394, 442, 450, 515, 580, 634, 642,
 644, 707, 769, 818, 834, 899, 900]), (x*y^-1, [632, 703, 874]), (y^5, [110,
 111]), (y^4, [175]), (-y^2, [62, 63, 464, 647]), (y^2, [433]), (-y, [21, 280,
 294, 625, 829]), (y, [66, 67, 131, 144, 150, 208, 395, 402, 449, 641, 705]),
 (-1, [125, 202, 599]), (1, [8, 693, 876]), (y^-1, [255])])
  function f22(x,y)
    R=WGraph2Representation([[[1,3,4],[1,2,4],[1,2,3],[1,4],[1,3],[2],[1,2,3],
      [1,3,4],[1,2,4],[2,3],[1,3,4],[2,4],[3,4],[2,4],[2,3]],[[1,4,-1,0],
      [1,5,-1,0],[1,6,-1,y*x],[1,13,-1,0],[2,4,-x,0],[2,5,-x,y],[2,6,-x,0],
      [2,12,y,0],[2,14,-1,0],[3,4,-y,x],[3,5,-y,0],[3,6,-y,0],[3,8,0,-x],
      [3,9,0,-x^2],[3,10,-y,0],[3,15,-x,0],[4,7,0,y],[4,8,0,-y],
      [4,9,0,-2*y*x],[4,11,0,-y],[4,14,-1,y*x],[5,7,0,-y],[5,8,0,-x],
      [5,11,0,-x],[5,15,x,-y],[6,9,0,-y*x],[6,10,0,x],[6,12,0,x],[6,14,0,y*x],
      [6,15,0,-y],[7,8,y,-x],[7,9,y*x^-1,-x^2],[7,15,y,0],[8,12,y,-x],
      [8,13,-y,0],[9,11,-y*x,1],[9,12,y^2,0],[9,14,-y+x,0],[10,11,x,-y],
      [10,12,-y,x],[10,14,0,y*x],[11,13,-x,0],[12,15,0,y^2*x^-1],
      [13,14,-1,y*x],[13,15,x,-y],[14,15,x^2,-y*x^-1]]],[x,y])*y^0*x^0
    [R[1], R[2],inv(R[4])*R[3]*R[4],R[4]]
  end
  function f27(x,y,sgn)
    v=sgn*root(x*y,2)
    R=WGraph2Representation([[[1,3,4],[1,2,4],[1,2,3],[1,4],[1,3],[1,2],[1,2,3],
      [1,3,4],[1,2,4],[2,3],[1,3,4],[2,4],[3,4],[2,4],[2,3],[2,3,4]],
      [[1,4,-y,0],[1,5,-y,0],[1,6,-y,x],[1,16,-v,v],[2,4,-v,0],[2,5,-v,v],
      [2,6,-v,0],[2,12,v,0],
      [2,14,v,0],[3,4,-y,x],[3,5,-y,0],[3,6,-y,0],[3,15,v,0],[4,8,0,-v+y],
      [4,9,0,v-x],[4,11,0,-v+y],[4,14,-v,v],[5,7,0,y^2//v-y],[5,8,0,-v+y],
      [5,10,-x,0],[5,11,0,-v+y],[5,15,x,-y],[7,8,v,-v],[7,9,y,-x],[7,10,-y,0],
      [7,15,-x+y,0],[8,12,v,-v],[8,13,-v+y,0],[9,11,-v,v],[9,12,y,0],
      [9,14,-x+y,0],[10,11,v,-v],[10,12,-y,x],[10,13,0,v],[10,16,0,-v],
      [11,13,-v+x,0],[11,15,0,v],[13,14,-v,v],[13,15,-v,v],[14,15,-x,y],
      [14,16,0,-y],[15,16,0,v]]],[x,y])*x^0*y^0
    ir4=comatrix(R[4])//det_bareiss(R[4])
    [R[1], R[2],ir4*R[3]*R[4],R[4]]
  end
  f28(x,y)=expandrep(4,20,Tuple{typeof(0+x*y),Vector{Int64}}[(-x^2*y^-1,[1596]),
 (-x^2*y^-1-x, [1222, 1234]), (x^2*y^-1, [822, 834, 1303, 1315, 1556]),
 (x^2*y^-1+x, [1313, 1393, 1544]), (x^2*y^-1+2x+y, [1301]), (x^2*y^-1+3x+y,
 [1381]), (-3x-2y, [1462]), (-2x-3y-x^-1*y^2, [503]), (-2x-2y-x^-1*y^2,
 [1304]), (-2x-y, [1474]), (-x, [22, 34, 81, 90, 177, 223, 247, 303, 348, 379,
 429, 435, 494, 518, 523, 543, 744, 752, 763, 810, 856, 862, 890, 898, 911,
 913, 918, 1030, 1098, 1155, 1252, 1257, 1291, 1316, 1337, 1343, 1367, 1371,
 1373, 1397, 1417, 1450, 1463, 1473, 1475, 1482, 1502, 1521, 1542, 1562, 1568,
 1582]), (-x-3y-x^-1*y^2, [1063]), (-x-2y-x^-1*y^2, [263, 983]), (-x-y, [251,
 275, 487, 511, 515, 806, 901, 995, 1074, 1075, 1090, 1110, 1143, 1287, 1288,
 1289, 1292, 1297, 1324, 1325, 1336, 1364, 1383, 1405, 1446, 1461, 1490, 1510,
 1526]), (-x+x^-1*y^2, [1344]), (x, [2, 176, 265, 343, 351, 363, 383, 483,
 502, 506, 507, 510, 598, 664, 676, 760, 802, 852, 860, 866, 928, 1011, 1013,
 1070, 1094, 1095, 1106, 1158, 1180, 1186, 1206, 1210, 1221, 1229, 1241, 1261,
 1262, 1283, 1345, 1347, 1348, 1356, 1375, 1385, 1389, 1429, 1432, 1442, 1506,
 1513, 1514, 1515, 1522, 1538, 1541, 1553, 1578, 1597]), (x+y, [85, 170, 255,
 256, 337, 338, 499, 505, 508, 539, 589, 591, 669, 675, 758, 843, 925, 1012,
 1093, 1096, 1179, 1263, 1296, 1340, 1346, 1430, 1454, 1516, 1566, 1598]),
 (-y, [252, 311, 326, 493, 551, 750, 912, 967, 971, 1031, 1071, 1089, 1100,
 1111, 1284, 1317, 1338, 1372, 1464, 1476, 1549, 1565]), (-y-x^-1*y^2, [1047,
 1062, 1384, 1447]), (y, [3, 4, 5, 87, 88, 166, 254, 329, 350, 366, 422, 424,
 495, 500, 519, 581, 592, 607, 644, 663, 674, 685, 757, 830, 839, 841, 846,
 878, 888, 975, 1024, 1043, 1054, 1055, 1059, 1064, 1072, 1079, 1084, 1099,
 1104, 1131, 1139, 1142, 1144, 1152, 1159, 1167, 1177, 1211, 1302, 1310, 1311,
 1327, 1328, 1359, 1360, 1376, 1410, 1444, 1470, 1471, 1485, 1486, 1487, 1518,
 1519, 1525, 1550, 1599]), (y+x^-1*y^2, [1332]), (-x^-1*y^2, [1448]),
 (x^-1*y^2, [1443, 1472, 1488, 1520])])
  f30(x,y,i)=expandrep(4, 20, Tuple{typeof(0+x*y*i),
 Vector{Int64}}[(i*x^7*y^-1-i*x^6+i*x^5*y-i*x^3*y^3+x^4*y^2, [883]),
 (-i*x^6+x^6+x^5*y+x^4*y^2, [884]),
 (-i*x^6*y^-1+i*x^5+i*x^4*y-x^5+x^4*y+x^3*y^2, [1283]),
 (i*x^6*y^-1-i*x^5+i*x^4*y+x^3*y^2, [931]),
 (-i*x^5+i*x^4*y+3i*x^3*y^2+i*x^2*y^3+x^5-x^4*y+x^3*y^2+x^2*y^3, [802]),
 (-i*x^5+x^5+x^4*y+x^3*y^2, [932]),
 (i*x^5-i*x^4*y+i*x^3*y^2+2i*x^2*y^3+i*x*y^4-x^3*y^2, [899]),
 (i*x^5-i*x^3*y^2-x^5+x^4*y+x^3*y^2, [1284]),
 (i*x^5+2i*x^3*y^2+i*x^2*y^3-x^5-x^4*y-x^3*y^2-x*y^4, [891]),
 (i*x^5+x^5-x^3*y^2, [1362]), (-i*x^5*y^-1+i*x^4+i*x^3*y-x^4, [1331]),
 (-i*x^4*y-i*x^3*y^2-i*x^2*y^3-i*x*y^4-i*y^5+2x^4*y+x^3*y^2-x^2*y^3-x*y^4,
 [892]), (-i*x^4*y+i*x^2*y^3+x^4*y+x^3*y^2+x^2*y^3, [900]),
 (i*x^4*y+i*x^3*y^2, [1441]), (2i*x^4*y+i*x^3*y^2-x^5-x^4*y+x^3*y^2, [887]),
 (-i*x^4, [721]), (-i*x^4-2i*x^3*y-i*x^2*y^2-i*x*y^3-x^3*y-x^2*y^2, [1453]),
 (-i*x^4-2i*x^3*y+i*x*y^3-2x^2*y^2-x*y^3-y^4, [810]),
 (-i*x^4+i*x^3*y+i*x^2*y^2-2x^3*y-x^2*y^2, [1299]),
 (-i*x^4+i*x^3*y+i*x^2*y^2-x^3*y, [1291]), (-i*x^4+i*x^2*y^2+x^4-x^3*y,
 [850]), (-i*x^4+i*x^2*y^2-x^3*y-x*y^3, [806]), (i*x^4-i*x^3*y+x^3*y, [903]),
 (i*x^4-i*x^2*y^2-x^4+x^3*y+x^2*y^2, [1332]), (i*x^4+x^4, [1410]),
 (-i*x^3*y^2-i*x^2*y^3-i*x*y^4+x^5+2x^4*y+3x^3*y^2+x^2*y^3, [888]),
 (-i*x^3*y^2-x^5, [1521]), (i*x^3*y^2-i*x*y^4-x^3*y^2+x^2*y^3, [896]),
 (i*x^3*y^2+x^5, [484]), (3i*x^3*y^2+i*x^2*y^3-x^5-2x^4*y-2x^3*y^2-x*y^4,
 [895]), (-i*x^3*y-i*x^2*y^2-i*x*y^3, [1457]), (-i*x^3*y-i*x^2*y^2+x^3*y,
 [818]), (-i*x^3*y+x^3*y, [904]), (i*x^3*y, [1489]), (i*x^3*y+i*x^2*y^2,
 [1445]), (i*x^3*y-i*x*y^3-x^4-2x^3*y, [1292]), (i*x^3*y+x^4+2x^3*y+x^2*y^2,
 [1370]), (i*x^3*y-x^3*y, [1300]), (i*x^3*y+x^3*y+2x^2*y^2+x*y^3, [1378]),
 (i*x^3*y+x^2*y^2, [1295]), (2i*x^3*y-x^4+x^2*y^2, [935]), (-i*x^3, [769]),
 (-i*x^3-2i*x^2*y-i*x*y^2-i*y^3, [729]), (-i*x^3-i*x^2*y-i*x*y^2, [725]),
 (-i*x^3+i*x^2*y+i*x*y^2-2x^2*y-x*y^2, [1303]), (-i*x^3-x^2*y, [854, 919]),
 (-i*x^3*y^-1+i*x^2-x^2, [959]), (-2i*x^2*y^3+x^2*y^3-2x*y^4, [911]),
 (-i*x^2*y^2-x^4, [1525, 1569]), (-i*x^2*y^2+x^4+2x^3*y+x^2*y^2, [1374]),
 (-i*x^2*y^2+x^4+2x^3*y+2x^2*y^2, [936]), (i*x^2*y^2+x^4, [488, 532]),
 (2i*x^2*y^2+i*x*y^3-x^3*y-x^2*y^2+x*y^3, [943]), (-i*x^2*y, [1501]),
 (-i*x^2*y-i*x*y^2, [862]), (-i*x^2*y-i*x*y^2+x^2*y, [822]), (-i*x^2*y+x^3,
 [939]), (i*x^2*y, [1493]), (i*x^2*y-x^2*y, [1304]),
 (i*x^2*y+x^2*y+2x*y^2+y^3, [1382]), (-i*x^2, [773]), (-i*x^2+i*x*y-x*y,
 [915]), (-i*x^2-x*y, [955]), (i*x^2-x^2, [960]), (i*x^2+x*y, [858, 1319]),
 (i*x^2*y^-1-i*x+x, [1359]), (-i*x*y^3-x^3*y, [1537]), (i*x*y^3-i*y^4+y^4,
 [1390]), (i*x*y^3+x^4+2x^3*y+x^2*y^2, [1372, 1376, 1392]), (i*x*y^3+x^3*y,
 [500, 814]), (i*x*y^3+x^3*y+x^2*y^2+x*y^3, [944]), (i*x*y^3-x*y^3+y^4,
 [1311]), (-i*x*y^2-x^3, [1573]), (i*x*y^2+x^3, [536]), (i*x*y^2-x^2*y,
 [940]), (-i*x*y+x^3*y^-1+2x^2+x*y, [1398]), (i*x*y-x^2, [951]),
 (i*x*y-x^2-x*y, [907, 923]), (i*x*y-x*y, [916, 924]), (-i*x, [826, 1438,
 1509]), (-i*x+x, [1360]), (i*x, [777]), (i*x+i*y, [866]), (i*x-x, [1315]),
 (i*x+y, [1355]), (-i*y^4+x^3*y-x^2*y^2-x*y^3, [492]), (-i*y^4-x^2*y^2,
 [496]), (-i*y^4+x*y^3-y^4, [830]), (-i*y^4-y^4, [512]),
 (i*y^4-x^3*y+x^2*y^2+x*y^3, [1529]), (i*y^4+x^2*y^2, [1533]), (i*y^4+y^4,
 [1549]), (-i*y^3-x^2*y, [1581]), (i*y^3+x^2*y, [544]), (i*y^2+x^2, [838]),
 (-i*y, [1394, 1434]), (i, [846]), (-x^6*y^-1, [1444]), (x^5, [1364]),
 (-x^5*y^-1, [1492]), (-x^4, [1452, 1460]), (-x^4-x^3*y-x^2*y^2, [1288]),
 (x^4, [1412]), (x^4+x^3*y, [1366]), (x^4+x^3*y+x^2*y^2, [1368]),
 (-x^3*y-2x^2*y^2-x*y^3-y^4, [1472]), (-x^3*y-x^2*y^2, [1535]), (x^3*y,
 [1287]), (x^3*y+x^2*y^2, [672]), (x^3*y+x^2*y^2-y^4, [1380]),
 (x^3*y-x*y^3-y^4, [1456]), (-x^3, [1336, 1464]), (x^3, [1414, 1416]),
 (x^2*y^3+x*y^4, [1363]), (-x^2*y^2, [1449]), (-x^2*y^2-x*y^3, [832, 1531]),
 (x^2*y^2+x*y^3, [656, 1121, 1367]), (-x^2*y, [1343, 1344, 1541]),
 (-x^2*y-x*y^2, [1126, 1130]), (x^2*y, [504, 733, 1424]), (x^2*y+x*y^2, [752,
 1125, 1422]), (-x^2, [1418, 1420]), (x^2, [1340, 1480]), (x^2*y^-1, [1520]),
 (-2x*y^4, [912]), (-x*y^3, [1296]), (-x*y^3-y^4, [816]), (x*y^3+y^4, [1377]),
 (-x*y^2, [1342, 1544]), (-x*y^2-y^3, [1042, 1128, 1543]), (x*y^2, [501, 663,
 734, 920]), (x*y^2+y^3, [736, 1139, 1421]), (-x*y, [162, 323, 906, 1174,
 1207, 1419]), (-x*y-y^2, [1046, 1176]), (x*y, [81, 418, 945, 964, 1048, 1089,
 1217, 1479]), (x*y+y^2, [82, 962, 963, 1047, 1183]), (-x, [175, 272, 523,
 560, 681, 714, 878, 1545]), (-x-y, [90, 970, 979, 1103, 1426, 1555]), (x,
 [508, 757, 834, 842, 874, 927, 928, 1347, 1348, 1430, 1432, 1476, 1513, 1516,
 1597]), (x+y, [85, 170, 255, 339, 422, 505, 592, 675, 758, 841, 843, 925,
 926, 1012, 1093, 1096, 1178, 1261, 1263, 1346, 1431, 1514, 1515, 1600]),
 (-y^4, [1469]), (y^4, [1312]), (y^3, [749]), (-y^2, [1320]), (-y, [516,
 524]), (y, [86, 169, 172, 251, 253, 340, 576, 589, 590, 591, 676, 760, 827,
 833, 844, 1010, 1011, 1095, 1177, 1180, 1264, 1429, 1474, 1553, 1561, 1598,
 1599]), (-1, [5, 52, 136, 342, 381, 795, 1013, 1325]), (1, [10, 19, 143, 526,
 1098, 1191]), (-y^-1, [278, 425, 435]), (y^-1, [480, 1266])])
  f34(x,y)=expandrep(4,24,Tuple{typeof(0+x*y),Vector{Int64}}[
    (-x^5-2x^4*y+2x^2*y^3+x*y^4,[1643]),
    (x^5+3x^4*y+4x^3*y^2+4x^2*y^3+2x*y^4, [2123]),
 (x^5*y^-1+2x^4+2x^3*y+2x^2*y^2+x*y^3, [2135]), (-3x^4*y-x^3*y^2+x^2*y^3,
 [1637]), (-x^4*y-2x^3*y^2-x^2*y^3, [1640]), (-x^4*y-x^3*y^2+x^2*y^3+x*y^4,
 [1635]), (x^4*y, [1641]), (x^4*y+2x^3*y^2+x^2*y^3, [1644, 2115]),
 (x^4*y+3x^3*y^2+3x^2*y^3+x*y^4, [2119]), (2x^4*y+3x^3*y^2+3x^2*y^3+x*y^4,
 [2117]), (4x^4*y+6x^3*y^2-x^2*y^3-3x*y^4, [2113]),
 (-x^4-3x^3*y-3x^2*y^2-x*y^3, [1547, 1834]), (-x^4-2x^3*y-2x^2*y^2, [1932]),
 (-x^4-2x^3*y-x^2*y^2, [585, 1655, 1740, 1929, 2027]), (x^4, [1653, 1677]),
 (x^4+x^3*y, [871]), (x^4+x^3*y-x^2*y^2-x*y^3, [1691]), (x^4+2x^3*y+x^2*y^2,
 [1656]), (2x^4+3x^3*y+3x^2*y^2+x*y^3, [2216]), (4x^4+6x^3*y-x^2*y^2-3x*y^3,
 [2212]), (x^4*y^-1+2x^3+x^2*y, [1688]), (-x^3*y^2-2x^2*y^3-x*y^4, [2122]),
 (x^3*y^2+2x^2*y^3+x*y^4, [2118]), (2x^3*y^2+2x^2*y^3, [1636]),
 (2x^3*y^2-x*y^4, [2121]), (-3x^3*y-2x^2*y^2+x*y^3, [1924]),
 (-2x^3*y-2x^2*y^2, [1928]), (-x^3*y, [2026]), (-x^3*y-2x^2*y^2-x*y^3, [1539,
 1826, 2134]), (-x^3*y-x^2*y^2, [586, 2127]), (-x^3*y-x^2*y^2-x*y^3, [577,
 1732, 1734, 1921, 2019]), (-x^3*y+x*y^3, [1647]), (x^3*y+x^2*y^2, [875]),
 (x^3*y-x*y^3, [2157]), (2x^3*y+2x^2*y^2, [1648]), (2x^3*y+3x^2*y^2, [2024]),
 (2x^3*y-x*y^3, [2220]), (3x^3*y+x^2*y^2-2x*y^3, [2020]),
 (3x^3*y+x^2*y^2-x*y^3, [2022]), (-x^3, [2038, 2062]), (-x^3-2x^2*y-x*y^2,
 [1559, 1667, 1683, 1846, 2166]), (-x^3-x^2*y, [388, 775, 1941, 2167]),
 (-x^3-x^2*y-x*y^2, [2040]), (x^3+x^2*y, [599, 678, 2163]), (x^3+x^2*y+x*y^2,
 [1944]), (x^3+2x^2*y, [2064]), (x^3+2x^2*y+x*y^2, [1162, 1464]),
 (x^3+3x^2*y+3x*y^2+y^3, [2147]), (x^3-x*y^2, [2256]), (-2x^2*y^3-2x*y^4,
 [2114]), (-x^2*y^3-x*y^4, [1639]), (x^2*y^3, [1633]), (-3x^2*y^2-4x*y^3,
 [2125]), (-3x^2*y^2-x*y^3+2y^4, [1825]), (-2x^2*y^2-3x*y^3, [1829]),
 (-2x^2*y^2-2x*y^3, [2126]), (-x^2*y^2-x*y^3, [578, 1738, 2133, 2211]),
 (x^2*y^2, [1645, 2028, 2169]), (-3x^2*y-4x*y^2, [2224]), (-3x^2*y-x*y^2+2y^3,
 [675]), (-2x^2*y-3x*y^2, [679, 2129]), (-x^2*y, [636, 1775, 1785, 2131]),
 (-x^2*y-2x*y^2, [2032, 2145, 2161]), (-x^2*y-x*y^2, [392, 779, 1551, 1750,
 1774, 1838, 1848, 1933, 2141, 2165, 2232]), (x^2*y, [1649, 2268]),
 (x^2*y-x*y^2, [1652]), (x^2*y+x*y^2, [621, 1499, 1500, 1776, 2063]),
 (x^2*y+x*y^2+y^3, [1154, 1845]), (x^2*y+2x*y^2, [1936]), (-2x^2-3x*y,
 [2228]), (-x^2, [1670]), (-x^2-2x*y, [2052, 2068, 2244, 2260]),
 (-x^2-2x*y-y^2, [1571, 1858]), (-x^2-x*y, [1587, 1659, 1695, 1711, 1874,
 1953, 1969, 2240, 2264]), (x^2, [2048]), (x^2+x*y, [292, 1174, 1496]),
 (x^2+x*y+y^2, [695]), (x^2+2x*y, [1956, 1972]), (x^2+2x*y+y^2, [2139, 2175]),
 (-x*y^3, [1830, 1833, 2018]), (-x*y^2, [590, 683, 1665, 1786, 2030, 2076,
 2223]), (-x*y^2+y^3, [2130]), (x*y^2, [1968, 1980]), (x*y^2+y^3, [674]),
 (x*y^2+2y^3, [1837]), (-x*y, [610, 626, 1669, 1672, 1676, 1693, 1700, 1717,
 2034, 2036, 2072, 2137, 2149, 2153, 2185, 2259]), (-x*y-y^2, [1671, 1675]),
 (x*y, [290, 397, 490, 720, 897, 979, 1009, 1167, 1272, 1474, 1879, 1952,
 1976, 2179, 2180, 2193, 2197]), (x*y+y^2, [296, 593, 686, 1166, 1748, 1878,
 2035, 2151]), (x*y+2y^2, [687, 1857, 1873]), (2x*y+y^2, [1940]), (-x, [1724,
 1945, 1981, 2044, 2056, 2060, 2080, 2092, 2096, 2236, 2248, 2252, 2284]),
 (-x-y, [1563, 1599, 1850, 1886, 2091]), (x, [1, 3, 100, 101, 102, 199, 201,
 204, 304, 402, 404, 639, 725, 803, 820, 903, 908, 1077, 1102, 1302, 1367,
 1402, 1520, 1578, 1948, 1984, 2000, 2003, 2077, 2100, 2183, 2273, 2290, 2292,
 2296]), (x+y, [104, 203, 302, 401, 502, 603, 604, 613, 617, 690, 701, 704,
 804, 901, 904, 1001, 1003, 1101, 1186, 1202, 1203, 1304, 1403, 1502, 1504,
 1602, 1702, 1768, 1772, 1801, 1803, 1903, 2001, 2055, 2059, 2101, 2104, 2203,
 2204, 2291, 2301, 2302]), (x+2y, [707, 723]), (2x+y, [1960, 1964]), (-y^3,
 [1651]), (y^3, [682, 1869, 1881, 1882]), (-y^2, [1699]), (y^2, [694, 718,
 719, 731, 1555, 1841, 1853, 1877, 2050, 2150, 2154, 2177, 2178, 2205]), (-y,
 [8, 107, 525, 539, 1000, 1026, 1188, 1277, 1467, 1525, 1629, 1723, 1888,
 1905, 2014]), (-y-x^-1*y^2, [1852]), (y, [657, 661, 691, 702, 703, 726, 727,
 1579, 1603, 1701, 1704, 1802, 1812, 1816, 1849, 1861, 1865, 1885, 1901, 1902,
 2004, 2054, 2078, 2099, 2102, 2103, 2201, 2202, 2276, 2303, 2304]), (-1, [14,
 214, 305, 339, 427, 536, 755, 805, 830, 1088, 1193, 1327, 1628]), (1, [699,
 711, 715, 735, 751, 1178, 1214, 2300]), (-x^-1*y^2, [1897, 2182]), (-x^-1*y,
 [747, 2086]), (x^-1*y, [934]), (x^-1, [1131, 1372, 1417])])
  f35(x,y,i)=expandrep(4, 24, Tuple{typeof(x*y*i//2), Vector{Int64}}[
    (-2i*x^6-2i*x^4*y^2-2i*x^3*y^3-4x^4*y^2-2x^3*y^3, [1923]),
    (-i*x^6+4i*x^5*y-i*x^4*y^2-3i*x^3*y^3+
     2i*x^2*y^4+i*x*y^5-x^6+2x^5*y-x^4*y^2+x^3*y^3-x*y^5, [1636, 1921]),
    (-i*x^6+4i*x^5*y+i*x^4*y^2-i*x^3*y^3+2i*x^2*y^4+i*x*y^5-x^6+
     x^4*y^2+3x^3*y^3-x*y^5, [1540]),
    (-2i*x^5*y+-2i*x^4*y^2+2i*x^3*y^3-2i*x^2*y^4-2i*x*y^5+2x^6+
     -6x^5*y-2x^4*y^2+2x^3*y^3, [1538]),
    (-2i*x^5*y+-2x^4*y^2-2x^3*y^3, [1635]),
    (-2i*x^5-2i*x^4*y-2i*x^3*y^2-4x^5-2x^4*y+2x^3*y^2, [1562]),
    (-2i*x^5-2i*x^3*y^2-2i*x^2*y^3-4x^3*y^2-2x^2*y^3, [1931]),
    (-2i*x^5-2x^4*y-2x^3*y^2, [1251]),
    (-i*x^5+2i*x^4*y-i*x^3*y^2-2i*x^2*y^3-x^5+2x^4*y-x^3*y^2,[1548,1644,1929]),
    (2i*x^5+3i*x^4*y+3i*x^3*y^2+2i*x^2*y^3+2x^5+x^4*y-x^3*y^2, [1564]),
    (2i*x^5-i*x^3*y^2-x^3*y^2, [1640, 1925]),
    (-3i*x^4*y-4i*x^3*y^2-i*x^2*y^3-2x^5+x^4*y-x^2*y^3,[1544]),
    (-3i*x^4*y-2i*x^3*y^2+2i*x^2*y^3+i*x*y^4+
     -2x^5-3x^4*y+2x^3*y^2+4x^2*y^3+x*y^4, [1947]),
    (-3i*x^4*y-i*x^3*y^2+i*x^2*y^3-x^4*y+x^3*y^2+x^2*y^3, [1946]),
    (-2i*x^4*y-2i*x^3*y^2, [1691]),
 (-2i*x^4*y-2i*x^3*y^2+2x^5-2x^4*y-2x^3*y^2,
 [964]), (-2i*x^4*y+2i*x^3*y^2-2i*x*y^4-2x^4*y, [1630]),
 (-2i*x^4*y+i*x^2*y^3+x^2*y^3, [1660, 1945]),
 (-2i*x^4*y-2x^5+2x^3*y^2, [1659]), (-2i*x^4*y+
-2x^3*y^2-2x^2*y^3, [1643]), (-i*x^4*y-i*x^3*y^2+
-2x^4*y+x^2*y^3, [2018]), (i*x^4*y+i*x^3*y^2+
-i*x*y^4-i*y^5-x^4*y-x^3*y^2-6x^2*y^3+
-5x*y^4-y^5, [1596]), (i*x^4*y+2i*x^3*y^2+
-i*x*y^4-i*y^5+x^4*y+2x^3*y^2-4x^2*y^3+
-3x*y^4-y^5, [1692, 1977]), (i*x^4*y-2i*x^2*y^3+
-i*x*y^4+2x^5+x^4*y-4x^3*y^2-4x^2*y^3+
-x*y^4, [1927]), (2i*x^4*y-i*x^3*y^2+i*x*y^4+
x^3*y^2-x*y^4, [1728, 2013]), (2i*x^4*y+i*x^3*y^2+
2i*x^2*y^3+i*x*y^4-2x^4*y+3x^3*y^2+2x^2*y^3+
-x*y^4, [1632]), (2i*x^4*y+2x^5, [1542]), (3i*x^4*y+
i*x^3*y^2-i*x^2*y^3+x^4*y-x^3*y^2-x^2*y^3,
 [1926]), (-2i*x^4-3i*x^3*y-3i*x^2*y^2-i*x*y^3+
-2x^4+x^3*y+x^2*y^2-x*y^3, [988]), (-2i*x^4+
-2i*x^3*y, [1831]), (-2i*x^4-2i*x^3*y-2i*x^2*y^2+
-3i*x*y^3-i*y^4-2x^2*y^2-3x*y^3-y^4, [1939]),
 (-2i*x^4-2i*x^3*y-2i*x^2*y^2-4x^4-4x^3*y,
 [1582]), (-2i*x^4-2x^3*y-2x^2*y^2, [1255, 1259]),
 (-i*x^4-2i*x^3*y+2i*x^2*y^2+i*x*y^3-x^4+
2x^3*y+2x^2*y^2+x*y^3, [1556]), (-i*x^4-2i*x^3*y+
-x^4, [1652, 1937]), (-i*x^4-i*x^3*y-2x^4+
x^2*y^2, [2042]), (2i*x^4+i*x^3*y+x^3*y, [1648, 1933]),
 (2i*x^4+2i*x^3*y, [1851]), (2i*x^4+3i*x^3*y+
i*x^2*y^2+2x^4+3x^3*y-x^2*y^2, [1584]),
 (-2i*x^3*y^2+2x^5-4x^4*y-2x^3*y^2, [1546]),
 (i*x^3*y^2+x^3*y^2, [1978]), (2i*x^3*y^2-2i*x^2*y^3+
-2i*x*y^4-4x^3*y^2-4x^2*y^3-2x*y^4, [1594]),
 (3i*x^3*y^2+3i*x^2*y^3+3x^3*y^2+x^2*y^3, [1979]),
 (-3i*x^3*y-3i*x^2*y^2-2x^4-3x^3*y+x^2*y^2+
2x*y^3, [1967]), (-3i*x^3*y-2i*x^2*y^2-x^3*y, [1966]),
 (-3i*x^3*y-i*x^2*y^2+i*x*y^3-x^3*y+x^2*y^2+
x*y^3, [1832]), (-2i*x^3*y-2i*x^2*y^2-2x^4, [1552]),
 (-2i*x^3*y-2i*x^2*y^2+2x^4-2x^3*y-2x^2*y^2,
 [1056]), (-2i*x^3*y-i*x^2*y^2-x^2*y^2, [1680, 1965]),
 (-2i*x^3*y-2x^4-2x^3*y, [1679]), (-i*x^3*y+
-i*x^2*y^2+i*x*y^3+i*y^4-x^3*y+x^2*y^2+
5x*y^3+y^4, [1588]), (-i*x^3*y-i*x^2*y^2-2x^3*y+
-x^2*y^2, [2026]), (-i*x^3*y+i*x*y^3+i*y^4+
-x^3*y+3x*y^3+y^4, [1684, 1969]), (i*x^3*y+
i*x^2*y^2+2x^4+x^3*y-3x^2*y^2-2x*y^3, [1935]),
 (2i*x^3*y+4i*x^2*y^2+2x^3*y+2x^2*y^2, [1683]),
 (2i*x^3*y+2x^4, [1550]), (2i*x^3*y+2x^4-2x^3*y+
-6x^2*y^2-2x*y^3, [1554]), (3i*x^3*y+i*x^2*y^2+
-i*x*y^3+x^3*y-x^2*y^2-x*y^3, [1852]),
 (3i*x^3*y+2i*x^2*y^2+x^3*y, [1934]), (3i*x^3*y+
3i*x^2*y^2+i*x*y^3-x^3*y+x^2*y^2+x*y^3, [968]),
 (-2i*x^3, [1267]), (-2i*x^3-3i*x^2*y-2i*x*y^2+
-2x^3-x^2*y, [1008]), (-2i*x^3-2i*x^2*y, [1839]),
 (-2i*x^3-2i*x^2*y-2i*x*y^2-4x^3-4x^2*y+
-2x*y^2, [1598]), (-2i*x^3-2i*x^2*y-i*x*y^2+
-i*y^3-x*y^2-y^3, [1951]), (-2i*x^3-2x^2*y+
-2x*y^2, [1263]), (-i*x^3-i*x^2*y-2x^3-x^2*y,
 [2062]), (-i*x^3+i*x*y^2-x^3+x*y^2, [1568]),
 (-i*x^3-x^3, [1664, 1949]), (-i*x^3+x^2*y, [1943]),
 ((-1//2)i*x^3+(1//2)i*x*y^2+(-1//2)x^3+x^2*y+(1//2)x*y^2, [1560, 1656,
 1941]), (i*x^3-3i*x^2*y-2i*x*y^2-x^3-x^2*y,
 [1572]), (2i*x^3+i*x^2*y+3i*x*y^2+2i*y^3+2x^3+
x^2*y+x*y^2, [1955]), (2i*x^3+2i*x^2*y, [1871]),
 (2i*x^3+2i*x^2*y+2i*x*y^2+2x^3+2x^2*y, [1600]),
 (3i*x^3+x^3, [1668, 1953]), (-2i*x^2*y^2-i*x*y^3+
-2x^2*y^2-x*y^3, [1938]), (-i*x^2*y^2+i*x*y^3+
-x^2*y^2+x*y^3, [1576]), (-i*x^2*y^2-3x^2*y^2, [1672,
 1957]), (-i*x^2*y^2-x^2*y^2, [1884]), (i*x^2*y^2+
i*x*y^3+x^2*y^2+x*y^3, [1971]), (i*x^2*y^2+
x^3*y, [2074]), (i*x^2*y^2-x^2*y^2, [1020]),
 (i*x^2*y^2+x^2*y^2, [1970]), (2i*x^2*y^2, [1307, 1671]),
 (-3i*x^2*y-3i*x*y^2-2i*y^3-2x^3-3x^2*y+
-x*y^2, [1983]), (-3i*x^2*y-2i*x*y^2-x^2*y, [1840,
 1982]), (-3i*x^2*y-x^2*y, [1696, 1981]), (i*x^2*y+
x^3-x^2*y-x*y^2, [1558]), (2i*x^2*y+2i*x*y^2+
4x^2*y+2x*y^2, [1570]), (3i*x^2*y+2i*x*y^2+x^2*y,
 [976, 1872, 1954]), (-2i*x^2, [1279, 1719]), (-2i*x^2-3i*x*y+
-2i*y^2-2x^2-x*y, [1024]), (-2i*x^2-2i*x*y,
 [1859]), (-2i*x^2-2i*x*y-2x^2, [1612]), (-i*x^2,
 [1271, 1711]), (-i*x^2-i*x*y-i*y^2-2x^2-2x*y+
-y^2, [2078]), (-i*x^2-i*x*y+x*y+y^2, [1999]),
 (-i*x^2+x*y, [1963]), ((-1//2)i*x^2+(1//2)i*x*y+(-1//2)x^2+
(-1//2)x*y, [1592, 1688, 1973]), ((-1//2)i*x^2+(1//2)i*x*y+(-1//2)x^2+
(1//2)x*y, [1580, 1676, 1961]), ((-1//2)i*x^2+(1//2)i*y^2+(-1//2)x^2+
x*y+(1//2)y^2, [1628, 1724, 2009]), (i*x^2, [1723]), (i*x^2+
-i*x*y-x^2-x*y, [1624]), (i*x^2+x^2, [1720,
 2005]), (2i*x^2+2i*x*y, [1887]), (2i*x^2+2i*x*y+
4x^2+2x*y, [1610]), (-i*x*y^3-x*y^3, [1958]),
 (i*x*y^3-i*y^4+x*y^3-y^4, [1959]), (2i*x*y^3+
4x^3*y+6x^2*y^2+2x*y^3, [1586]), (-2i*x*y^2-i*y^3+
-2x^2*y-4x*y^2-y^3, [980]), (-i*x*y^2-x*y^2,
 [1876, 1950]), (i*x*y^2+2x^2*y+x*y^2, [1012]),
 (2i*x*y^2+i*y^3+2x*y^2+y^3, [1844]), (-3i*x*y+
-2i*y^2-x*y, [1860]), (-i*x*y+x^2, [1590]),
 (i*x*y+i*y^2+x*y+y^2, [2007]), (i*x*y+
i*y^2+2x*y+y^2, [2050]), (i*x*y+x^2+x*y,
 [1626]), (i*x*y+x*y, [2006]), (2i*x*y, [1994]),
 (2i*x*y+2i*y^2+2x^2+2x*y, [1995]), (3i*x*y+
2i*y^2+x*y, [996, 1888]), (-2i*x, [1899]), (-i*x, [1291,
 1327]), ((-1//2)i*x+(1//2)i*y+(-1//2)x+(1//2)y, [1700, 1985]), ((-1//2)i*x+
(1//2)i*y+(1//2)x+(1//2)y, [1604]), ((1//2)i*x+(-1//2)i*y+(-1//2)x+(1//2)y,
 [1608]), ((1//2)i*x+(-1//2)i*y+(1//2)x+(1//2)y, [1704, 1989]), (i*x,
 [1699]), (i*x+i*y+2x+y, [2090]), (i*x-x,
 [1618]), (2i*x+2i*y+2x, [1036]), (-i*y^3-2x^2*y+
-4x*y^2-3y^3, [1000]), (i*y^3+y^3, [1864]),
 (-i*y^2+2x^2-y^2, [992]), (i*y^2+y^2, [1856]),
 (-2i*y, [1900]), (-i*y-y, [1912]), ((-1//2)i*y, [1807]),
 (i*y+x+y, [1606]), (i*y+y, [1048]),
 ((1//2)i-1//2, [2098]), (2x^5-2x^4*y-2x^3*y^2, [1639]),
 (-2x^4+2x^3*y+2x^2*y^2, [1275]), (-x^4-x^3*y+
x^2*y^2+x*y^3, [1755]), (x^4+x^3*y-x^2*y^2+
-x*y^3, [1735]), (2x^4-2x^2*y^2, [1647]), (-2x^3*y,
 [1651]), (-x^3*y-x^2*y^2, [2076]), (x^3*y+x^2*y^2,
 [2075]), (x^3*y+2x^2*y^2+x*y^3, [1787]), (-2x^3+
-2x^2*y, [1695]), (-2x^3+2x*y^2, [1295]), (-x^3+
-x^2*y+x*y^2+y^3, [1775]), (x^3+x^2*y+
-x*y^2-y^3, [1743]), (x^3+2x^2*y+x*y^2, [1499]),
 (2x^3, [1667]), (2x^3-2x^2*y-2x*y^2, [1566]),
 (-2x^2*y^3-2x*y^4, [1595, 1690]), (-2x^2*y^2-2x*y^3,
 [2139]), (x^2*y^2+x*y^3, [2043]), (2x^2*y^2+2x*y^3,
 [1587, 1682]), (-2x^2*y-4x*y^2-2y^3, [2163]), (-2x^2*y+
-3x*y^2-y^3, [2034]), (-x^2*y-x*y^2, [1747, 2033,
 2053]), (x^2*y+x*y^2, [729, 775, 1467, 2066, 2068]),
 (2x^2*y, [1299]), (2x^2*y+2x*y^2, [2129]), (-2x^2,
 [1311]), (-x^2, [1998]), (-x^2-x*y, [1115, 1791]),
 (x^2, [1614]), (x^2-x*y, [1578]), (x^2+x*y,
 [787, 1763, 2211]), (2x^2, [1707]), (2x^2+2x*y, [500]),
 ((-1//2)x^2*y^-1, [2094]), (-2x*y^3, [1574, 1882]), (2x*y^3+
2y^4, [2171, 2172]), (-2x*y^2-2y^3, [2164]), (-x*y^2+
-y^3, [1779]), (x*y^2, [2063]), (2x*y^2, [1298]),
 (2x*y^2+2y^3, [537, 2149]), (-2x*y-2y^2, [529]),
 (-x*y, [921, 1685, 1790, 1976, 2045]), (-x*y-y^2, [721,
 1491, 1759, 2046]), (-x*y+(-1//2)y^2, [2038]), (x*y, [98, 195,
 298, 391, 687, 784, 983, 1179, 1212, 1488, 1577, 1627, 1722, 2133, 2212]),
 (x*y+y^2, [692, 712, 783, 1487, 2210]), (2x*y, [498, 990,
 1622]), (2x*y+2y^2, [520]), (-x, [581, 1069, 1169, 1473]),
 ((1//2)x, [2070]), (x, [204, 504, 802, 884, 902, 1004, 1016, 1303,
 1602, 1620, 1703, 1716, 1801, 1901, 1904, 2001, 2003, 2204, 2303]), (x+
y, [102, 203, 302, 403, 502, 601, 703, 799, 804, 904, 1002, 1003, 1101,
 1107, 1201, 1203, 1302, 1401, 1404, 1501, 1504, 1601, 1603, 1701, 1702, 1802,
 1803, 1815, 1902, 2004, 2101, 2102, 2103, 2166, 2190, 2201, 2214, 2219,
 2304]), (2x, [1323]), (x*y^-1+1//1, [1527]), (-y^3, [2054]),
 (-y, [424]), ((-1//2)y, [2058]), (y, [1, 104, 121, 201, 333, 433,
 602, 604, 704, 803, 829, 903, 1102, 1403, 1503, 1804, 2104, 2301, 2302]),
 (-1//1, [6, 11, 96, 115, 206, 319, 324, 523, 569, 627, 1025, 1044, 1120,
 1396, 2179, 2182]), (-1//2, [406, 714]), (1//1, [757, 1317, 1332, 1381,
 1514]), (-y^-1, [1143]), ((-1//2)y^-1, [1206]), ((1//2)y^-2, [1422])])
  f37(x,y)=expandrep(4,30,Tuple{typeof(0+x*y),Vector{Int64}}[
    (-x^6-3x^5*y-2x^4*y^2,
 [3362]), (-x^6-x^5*y+x^4*y^2+x^3*y^3, [3363]), (-x^5-2x^4*y-x^3*y^2, [3374]),
 (-x^5-x^4*y, [3375]), (-x^5-x^4*y+x^3*y^2+x^2*y^3, [2763]),
 (x^5+x^4*y-x^3*y^2-x^2*y^3, [3003, 3481]), (-2x^4*y-5x^3*y^2-4x^2*y^3-x*y^4,
 [3366]), (-x^4*y-2x^3*y^2-x^2*y^3, [1324, 2761, 3367]), (-x^4*y-x^3*y^2,
 [1322, 3126]), (x^4*y+2x^3*y^2+x^2*y^3, [3484]), (2x^4*y+4x^3*y^2+2x^2*y^3,
 [2762]), (-x^4-2x^3*y-x^2*y^2, [1204, 2418, 3414]), (-x^4-x^3*y, [3394,
 3395]), (-x^4-x^3*y+x^2*y^2+x*y^3, [2775]), (x^4+x^3*y, [2522, 3015, 3493]),
 (x^4+x^3*y+x^2*y^2, [1682, 2523]), (x^4+2x^3*y+2x^2*y^2+x*y^3, [2406]),
 (x^4+x*y^3+y^4, [3194]), (2x^4+4x^3*y+2x^2*y^2, [3434]), (2x^3*y^2+x^2*y^3,
 [3371]), (-x^3*y-2x^2*y^2-2x*y^3-y^4, [3246]), (-x^3*y-2x^2*y^2-x*y^3,
 [3410]), (-x^3*y-x^2*y^2, [1334, 1336, 2773, 3170, 3174]),
 (-x^3*y-x^2*y^2+x*y^3+y^4, [2767]), (-x^3*y+x^2*y^2+2x*y^3+y^4, [2766]),
 (x^3*y+x^2*y^2, [3007, 3158, 3485, 3496]), (x^3*y+2x^2*y^2+x*y^3, [3258,
 3382, 3383, 3386, 3399]), (x^3*y+2x^2*y^2+2x*y^3+y^4, [2778]),
 (2x^3*y+3x^2*y^2+x*y^3, [2774]), (2x^3*y+4x^2*y^2+3x*y^3+y^4, [3398]),
 (-2x^3-2x^2*y, [2474]), (-x^3-2x^2*y-2x*y^2-y^3, [2438]), (-x^3-2x^2*y-x*y^2,
 [2422, 2426, 3430]), (-x^3-x^2*y, [1216, 2795, 2936, 3418, 3419]), (x^3,
 [2534]), (x^3+x^2*y, [724, 1694, 2454, 2535, 2956, 3446]), (x^3+x^2*y+x*y^2,
 [2450]), (x^3+2x^2*y+x*y^2, [3035, 3513, 3556]), (-x^2*y^2-2x*y^3-y^4, [1332,
 2769]), (-x^2*y^2-x*y^3, [2779]), (x^2*y^2+x*y^3, [3171, 3175, 3492]),
 (-x^2*y-2x*y^2-y^3, [1356, 2793, 2834]), (-x^2*y-x*y^2, [961, 1212, 1396,
 1699, 2331, 2335, 2833, 3186, 3296, 3429, 3536]), (x^2*y, [3445]),
 (x^2*y+x*y^2, [1685, 2538, 2786, 2794, 3075, 3076, 3262, 3316, 3403, 3516,
 3553]), (x^2*y+x*y^2+y^3, [3278]), (x^2*y+2x*y^2+y^3, [1698, 2539, 3266]),
 (2x^2*y+2x*y^2, [3314]), (2x^2*y+3x*y^2+y^3, [3402]), (-x^2, [3407]),
 (-x^2-2x*y-y^2, [2442]), (-x^2-x*y, [1996, 2490, 2819, 3031, 3231, 3470,
 3509, 3512]), (x^2, [740, 1224, 2554, 3198]), (x^2+x*y, [361, 736, 1714,
 2371, 2470, 2555, 2791, 3059, 3183, 3306, 3458, 3537]), (x^2+2x*y+y^2, [1352,
 2789]), (-x*y^2-y^3, [1360, 2797, 2835, 3056]), (x*y^2+y^3, [1687]), (-x*y,
 [124, 874, 1085, 2067, 2443, 3444]), (-x*y-y^2, [969, 1240, 1380, 1717, 2817,
 2846, 3222, 3310, 3442, 3443]), (x*y, [241, 362, 617, 738, 975, 1092, 1225,
 1349, 1716, 1842, 1889, 1974, 2372, 2469, 2662, 2792, 2971, 3065, 3184, 3197,
 3547]), (x*y+y^2, [364, 728, 1276, 1706, 1976, 2818, 3282, 3422]), (-x,
 [1103, 1268, 1495, 1710, 2498, 2551, 3095, 3528, 3573]), (-x-y, [368, 796,
 2462]), (x, [139, 250, 373, 748, 993, 1130, 1244, 1366, 1492, 1636, 1737,
 1911, 2128, 2235, 2359, 2510, 2578, 2607, 2854, 2980, 2989, 2998, 3226, 3227,
 3352, 3358, 3474, 3475]), (x+y, [128, 249, 369, 374, 499, 621, 623, 746, 870,
 995, 1117, 1120, 1241, 1365, 1368, 1416, 1490, 1615, 1738, 1740, 1861, 1862,
 1986, 2111, 2236, 2360, 2379, 2481, 2482, 2483, 2484, 2579, 2608, 2730, 2805,
 2853, 2855, 2856, 2862, 2979, 3101, 3225, 3228, 3349, 3351, 3473, 3598,
 3599]), (-x*y^-1-1, [1304]), (y^2, [2830]), (-y, [487, 1478, 1766, 2216,
 2592, 3303, 3322, 3337, 3578]), (y, [3, 126, 251, 376, 500, 624, 639, 871,
 1367, 1440, 1489, 1611, 1613, 1739, 1988, 2110, 2233, 2234, 2358, 2863, 2877,
 3102, 3104]), (-1, [9, 14, 280, 395, 501, 506, 690, 761, 885, 936, 1020,
 1262, 1626, 1908, 2021, 2039, 2121, 2385, 2701, 2720, 2739]), (-1-x^-1*y,
 [2601]), (1, [8, 157, 791, 990, 1283, 2516]), (y^-1, [824]), (-x^-1,
 [2633])])
  x,y=para[1]
  if     i==1  f1(x)
  elseif i==2  f1(y)
  elseif i==3  f3(x, y)
  elseif i==4  f3(y, x)
  elseif i==5  f5(x, y, E(4))
  elseif i==6  f5(y, x, E(4))
  elseif i==7  f5(x, y, -E(4))
  elseif i==8  f5(y, x, -E(4))
  elseif i==9  f9(x, y)
  elseif i==10 f9(y, x)
  elseif i==11 exterior_power.(f3(x,y),2).//x
  elseif i==12 f12(x, y)
  elseif i==13 f12(y, x)
  elseif i==14 exterior_power.(f5(x,y,E(4)),2).//x
  elseif i==15 exterior_power.(f5(x,y,-E(4)),2).//x
  elseif i==16 f17(y, x)
  elseif i==17 f17(x, y)
  elseif i==18 f18(y, x)
  elseif i==19 f18(x, y)
  elseif i==20 f22(x, y)
  elseif i==21 f21(x, y)
  elseif i==22 f22(y, x)
  elseif i==23 f21(y, x)
  elseif i==24 f27(y, x, 1)
  elseif i==25 f27(x, y, 1)
  elseif i==26 f27(y, x, -1)
  elseif i==27 f27(x, y, -1)
  elseif i==28 f28(x, y)
  elseif i==29 f28(y, x)
  elseif i==30 f30(x, y, E(4))
  elseif i==31 f30(y, x, E(4))
  elseif i==32 f30(x, y, -E(4))
  elseif i==33 f30(y, x, -E(4))
  elseif i==34 f34(x, y)
  elseif i==35 f35(x, y, E(4))
  elseif i==36 f35(x, y, -E(4))
  elseif i==37 f37(x, y)
  end
end)

chevieset(:G29, :UnipotentCharacters,
           Dict{Symbol, Any}(:harishChandra => [
  Dict{Symbol, Any}(:relativeType=>
    TypeIrred(;series=:ST,indices=1:4,rank=4,ST= 29), :levi => Int[],
    :parameterExponents => [1, 1, 1, 1], :charNumbers => 1:37,
    :eigenvalue => 1, :cuspidalName => ""), 
  Dict{Symbol, Any}(:relativeType=>
    TypeIrred(;series=:ST,indices=[4,1],rank=2,p=4,q=1),:levi => 2:3,
    :parameterExponents => [[2, 2, 0, 0], 3],
    :charNumbers => [60, 43, 47, 50, 61, 49, 48, 66, 63, 67, 38, 39, 44, 45],
    :eigenvalue => -1, :cuspidalName => "B_2"), 
  Dict{Symbol, Any}(:relativeType =>
    TypeIrred(;series=:ST,indices=[1],rank=1,p=4,q=1), :levi => 2:4,
    :parameterExponents => [[6, 1, 0, 1]], :charNumbers => [40, 53, 62, 52],
    :eigenvalue => E(4), :cuspidalName => "G_{4,4,3}[\\zeta_4]"), 
  Dict{Symbol, Any}(:relativeType =>
    TypeIrred(;series=:ST,indices=[1],rank=1,p=4,q=1), :levi => 2:4,
    :parameterExponents => [[6, 5, 0, 5]], :charNumbers => [46, 51, 68, 54],
    :eigenvalue => -E(4), :cuspidalName => "G_{4,4,3}[\\zeta_4^3]"), 
  mkcuspidal(29,55,1),
  mkcuspidal(29,56,E(5)),
  mkcuspidal(29,57,E(5,2)),
  mkcuspidal(29,58,E(5,3)),
  mkcuspidal(29,59,E(5,4)),
  mkcuspidal(29,41,E(8);qeig=1//2),
  mkcuspidal(29,64,E(8,3);qeig=1//2),
  mkcuspidal(29,42,E(8,5);qeig=1//2),
  mkcuspidal(29,65,E(8,7);qeig=1//2)], 
  :families => [Family("C1", [1]), 
  Family(conj(Family(:X)(4)),[5,3,7,39,40,38],signs=[1,1,1,1,-1,-1],ennola=3),
  #JM 24/2/2003 changed signs of 40 to fit with G443
  Family(:C1,[17],ennola=-1),
  Family(conj(Family(:Z4)),[42, 27, 41, 25],signs=[1, -1, -1, 1],ennola=-3),
  Family(Family(:C2),[21, 9, 19, 43],ennola=2),
  Family(:C1, [20]), 
  Family(Family(:X)(4),[31,28,33,45,46,44],signs=[1,1,1,1,-1,-1],ennola=-3), 
  #JM 24/2/2003 changed signs of 40 to fit with G443
  Family(:C1,[17],ennola=-1),
  Family(Family(:F20)(),[34,55,15,14,13,35,52,48,51,36,53,47,54,37,49,11,50,12,
 56,57,58,59],signs=[1,1,-1,-1,1,1,-1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1],ennola=4),
  #JM 24/2/2003 changed signs of 51..54 to fit with G443 and exchanged 14
  # and 15 to make generic degrees fit with Malle's "On degrees..."
  Family(conj(Family(:X)(4)),[30,29,32,61,62,60],signs=[1,1,1,1,-1,-1],
         ennola=4),
  #JM 24/2/2003 changed signs of 40 to fit with G443
  Family(:C1,[17],ennola=-1),
  Family(:C1, [22]), 
  Family(:C2, [23, 10, 18, 63], ennola=2), 
  Family(Family(:Z4),[64, 26, 65, 24],signs=[-1, 1, 1, -1],ennola=-3),
  Family(:C1, [16], ennola=-1), 
  Family(Family(:X)(4),[6,4,8,67,68,66],signs=[1,1,1,1,-1,-1],ennola=-4), 
  #JM 24/2/2003 changed signs of 40 to fit with G443
  Family(:C1,[17],ennola=-1),
  Family(:C1, [2])], 
  :a => [0, 40, 1, 21, 1, 21, 1, 21, 4, 12, 6, 6, 6, 6, 6, 18, 2, 12, 4, 4, 4, 12, 12, 13, 3, 13, 3, 5, 9, 9, 5, 9, 5, 6, 6, 6, 6, 1, 1, 1, 3, 3, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 9, 9, 9, 12, 13, 13, 21, 21, 21], :A => [0, 40, 19, 39, 19, 39, 19, 39, 28, 36, 34, 34, 34, 34, 34, 38, 22, 36, 28, 28, 28, 36, 36, 37, 27, 37, 27, 31, 35, 35, 31, 35, 31, 34, 34, 34, 34, 19, 19, 19, 27, 27, 28, 31, 31, 31, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 36, 37, 37, 39, 39, 39]))

# The first invariant (cf. Orlik and Terao) is Φ₁ of Maschke.
# Then we choose for F8 (-1/20736)det(Hessian(Φ₁))=(4*F8-Φ₁²)/3.
# We do not choose F12 but the simpler ((Φ₁³-3*Φ₁*F8)/2+F12)/108.
# As for G31 we do not choose F20 but the simpler (F20-F8*F12)/1296.
chevieset(:G29, :Invariants, [
  function(x1,x2,x3,x4) -6*x1^2*x2^2-6*x1^2*x3^2-6*x1^2*x4^2-6*x2^2*x3^2-
    6*x2^2*x4^2-6*x3^2*x4^2+x1^4+x2^4+x3^4+x4^4 end,
  function(x1,x2,x3,x4) 152*x1^2*x2^2*x3^2*x4^2-20*x1^2*x2^2*x3^4-
   20*x1^2*x2^2*x4^4-20*x1^2*x3^2*x4^4-
20*x2^2*x3^2*x4^4-20*x1^2*x2^4*x3^2-20*x1^2*x2^4*x4^2-20*x1^2*x3^4*x4^2-
20*x2^2*x3^4*x4^2+4*x1^2*x2^6+4*x1^2*x3^6+4*x1^2*x4^6+4*x2^2*x3^6+4*x2^2*x4^6+
4*x3^2*x4^6-20*x1^4*x2^2*x3^2-20*x1^4*x2^2*x4^2-20*x1^4*x3^2*x4^2-
20*x2^4*x3^2*x4^2+6*x1^4*x2^4+6*x1^4*x3^4+6*x1^4*x4^4+6*x2^4*x3^4+6*x2^4*x4^4+
6*x3^4*x4^4+4*x1^6*x2^2+4*x1^6*x3^2+4*x1^6*x4^2+4*x2^6*x3^2+4*x2^6*x4^2+
4*x3^6*x4^2+x1^8+x2^8+x3^8+x4^8 end,
  function(x1,x2,x3,x4) 2*x1^2*x2^2*x3^2*x4^6+2*x1^2*x2^2*x3^4*x4^4+
   2*x1^2*x2^2*x3^6*x4^2+
x1^2*x2^2*x3^8+x1^2*x2^2*x4^8+x1^2*x3^2*x4^8+x2^2*x3^2*x4^8+
2*x1^2*x2^4*x3^2*x4^4+2*x1^2*x2^4*x3^4*x4^2-x1^2*x2^4*x3^6-x1^2*x2^4*x4^6-
x1^2*x3^4*x4^6-x2^2*x3^4*x4^6+2*x1^2*x2^6*x3^2*x4^2-x1^2*x2^6*x3^4-
x1^2*x2^6*x4^4-x1^2*x3^6*x4^4-x2^2*x3^6*x4^4+x1^2*x2^8*x3^2+x1^2*x2^8*x4^2+
x1^2*x3^8*x4^2+x2^2*x3^8*x4^2+2*x1^4*x2^2*x3^2*x4^4+2*x1^4*x2^2*x3^4*x4^2-
x1^4*x2^2*x3^6-x1^4*x2^2*x4^6-x1^4*x3^2*x4^6-x2^4*x3^2*x4^6+
2*x1^4*x2^4*x3^2*x4^2-2*x1^4*x2^4*x3^4-2*x1^4*x2^4*x4^4-2*x1^4*x3^4*x4^4-
2*x2^4*x3^4*x4^4-x1^4*x2^6*x3^2-x1^4*x2^6*x4^2-x1^4*x3^6*x4^2-x2^4*x3^6*x4^2+
2*x1^6*x2^2*x3^2*x4^2-x1^6*x2^2*x3^4-x1^6*x2^2*x4^4-x1^6*x3^2*x4^4-
x2^6*x3^2*x4^4-x1^6*x2^4*x3^2-x1^6*x2^4*x4^2-x1^6*x3^4*x4^2-x2^6*x3^4*x4^2+
x1^8*x2^2*x3^2+x1^8*x2^2*x4^2+x1^8*x3^2*x4^2+x2^8*x3^2*x4^2 end,
function(x1,x2,x3,x4) -x1^2*x2^2*x3^2*x4^14+x1^2*x2^2*x3^6*x4^10+
 x1^2*x2^2*x3^10*x4^6-
x1^2*x2^2*x3^14*x4^2+x1^2*x2^6*x3^2*x4^10+14*x1^2*x2^6*x3^6*x4^6+
x1^2*x2^6*x3^10*x4^2+x1^2*x2^10*x3^2*x4^6+x1^2*x2^10*x3^6*x4^2-
x1^2*x2^14*x3^2*x4^2-13*x1^4*x2^4*x3^4*x4^8-13*x1^4*x2^4*x3^8*x4^4+
x1^4*x2^4*x3^12+x1^4*x2^4*x4^12+x1^4*x3^4*x4^12+x2^4*x3^4*x4^12-
13*x1^4*x2^8*x3^4*x4^4-2*x1^4*x2^8*x3^8-2*x1^4*x2^8*x4^8-2*x1^4*x3^8*x4^8-
2*x2^4*x3^8*x4^8+x1^4*x2^12*x3^4+x1^4*x2^12*x4^4+x1^4*x3^12*x4^4+
x2^4*x3^12*x4^4+x1^6*x2^2*x3^2*x4^10+14*x1^6*x2^2*x3^6*x4^6+
x1^6*x2^2*x3^10*x4^2+14*x1^6*x2^6*x3^2*x4^6+14*x1^6*x2^6*x3^6*x4^2+
x1^6*x2^10*x3^2*x4^2-13*x1^8*x2^4*x3^4*x4^4-2*x1^8*x2^4*x3^8-2*x1^8*x2^4*x4^8-
2*x1^8*x3^4*x4^8-2*x2^8*x3^4*x4^8-2*x1^8*x2^8*x3^4-2*x1^8*x2^8*x4^4-
2*x1^8*x3^8*x4^4-2*x2^8*x3^8*x4^4+x1^10*x2^2*x3^2*x4^6+x1^10*x2^2*x3^6*x4^2+
x1^10*x2^6*x3^2*x4^2+x1^12*x2^4*x3^4+x1^12*x2^4*x4^4+x1^12*x3^4*x4^4+
x2^12*x3^4*x4^4-x1^14*x2^2*x3^2*x4^2 end])

chevieset(:G29, :BasicDerivations, ()->
  function (x, y, z, t) [[4x,8*y^2,12z+1//40*x*y,20t+1//10*y*z],
 [8y,51200t+2816*y*z+16*x*y^2,4//5*x*z+1//20*x^2*y,-8*t*x+1//5*x*y*z+96//5*z^2],
 [12z,-160*t*x-8*x*y*z,5//2*t+-1//16*y*z+3//80*x^2*z,-1//8*t*y+1//8*t*x^2+-1//10*x*z^2],
 [20t,(-640*t*z-8*t*x*y)-16*y*z^2,-1//8*t*y+1//10*t*x^2+-1//20*x*z^2,9//10*t*x*z+-6//5*z^3]]
  end)

chevieset(:G29, :Discriminant, ()->
  function (x, y, z, t) -442368*t*x*y*z^4+4*t*x*y^4*z^2-4736*t*x^2*y^2*z^3+
  4608*x*y^2*z^5+
  128*t*y^3*z^3-8*t*x^3*y^3*z^2-8192*t*x^3*z^4+512*t*x^4*y*z^3+7077888*t*z^5+
  4*t*x^5*y^2*z^2+442368*y*z^6-7372800*t^2*x*z^3-1280*t^2*x*y^3*z+
  110080*t^2*x^2*y*z^2-115200*t^2*y^2*z^2-3*t^2*x^2*y^4+1408*t^2*x^3*y^2*z+
  8*x^2*y^3*z^4+8192*t^2*x^4*z^2+3*t^2*x^4*y^3+t^2*y^5-128*t^2*x^5*y*z-
  t^2*x^6*y^2-5120000*t^3*y*z-32000*t^3*x*y^2-512*x^3*y*z^5+2048000*t^3*x^2*z+
  6400*t^3*x^3*y-2048*t^3*x^5-51200000*t^4-4*x^4*y^2*z^4-4*y^4*z^4
  end)
