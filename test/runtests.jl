# auto-generated tests from julia-repl docstrings
using Test, Chevie
function mytest(file::String,cmd::String,man::String)
  println(file," ",cmd)
  exec=repr(MIME("text/plain"),eval(Meta.parse(cmd)),context=:limit=>true)
  if endswith(cmd,";") return true end
  exec=replace(exec,r"\s*$"m=>""); exec=replace(exec,r"\s*$"s=>"")
  exec=replace(exec,r"^\s*"=>"")
  if exec==man return true end
  i=findfirst(i->i<=lastindex(man) && exec[i]!=man[i],collect(eachindex(exec)))
  print("exec=$(repr(exec[i:end]))\nmanl=$(repr(man[i:end]))\n")
  false
end
@testset verbose = true "Chevie" begin
@testset "Algebras.jl" begin
@test mytest("Algebras.jl","G=symmetric_group(5)","Group((1,2),(2,3),(3,4),(4,5))")
@test mytest("Algebras.jl","Algebras.pprimesections(G,2)","3-element Vector{Vector{Int64}}:\n [1, 2, 4, 5]\n [3, 6]\n [7]")
@test mytest("Algebras.jl","Algebras.pprimesections(G,3)","5-element Vector{Vector{Int64}}:\n [1, 3]\n [2, 6]\n [4]\n [5]\n [7]")
@test mytest("Algebras.jl","W=coxgroup(:B,4)","B₄")
@test mytest("Algebras.jl","A=SolomonAlgebra(W)","SolomonAlgebra(B₄,Int64)")
@test mytest("Algebras.jl","X=A.xbasis; X(1,2,3)*X(2,4)","2X₂+2X₄")
@test mytest("Algebras.jl","W.solomon_subsets","16-element Vector{Vector{Int64}}:\n [1, 2, 3, 4]\n [1, 2, 3]\n [1, 2, 4]\n [1, 3, 4]\n [2, 3, 4]\n [1, 2]\n [1, 3]\n [1, 4]\n [2, 3]\n [2, 4]\n [3, 4]\n [1]\n [2]\n [3]\n [4]\n []")
@test mytest("Algebras.jl","W.solomon_conjugacy","12-element Vector{Vector{Int64}}:\n [1]\n [2]\n [3]\n [4]\n [5]\n [6]\n [7, 8]\n [9, 11]\n [10]\n [12]\n [13, 14, 15]\n [16]")
@test mytest("Algebras.jl","Algebras.injection(A)(X(1,2,3))","e_+e₄+e₃₄+e₂₃₄+e₁₂₃₄+e₂₁₂₃₄+e₃₂₁₂₃₄+e₄₃₂₁₂₃₄")
end
@testset "Chars.jl" begin
@test mytest("Chars.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Chars.jl","CharTable(W)","CharTable(A₃)\n┌────┬─────────────────┐\n│    │1111 211 22 31  4│\n├────┼─────────────────┤\n│1111│   1  -1  1  1 -1│\n│211 │   3  -1 -1  .  1│\n│22  │   2   .  2 -1  .│\n│31  │   3   1 -1  . -1│\n│4   │   1   1  1  1  1│\n└────┴─────────────────┘")
@test mytest("Chars.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Chars.jl","ct=CharTable(W)","CharTable(G₂)\n┌─────┬────────────────────┐\n│     │A₀ Ã₁ A₁ G₂ A₂ A₁+Ã₁│\n├─────┼────────────────────┤\n│φ₁‚₀ │ 1  1  1  1  1     1│\n│φ₁‚₆ │ 1 -1 -1  1  1     1│\n│φ′₁‚₃│ 1  1 -1 -1  1    -1│\n│φ″₁‚₃│ 1 -1  1 -1  1    -1│\n│φ₂‚₁ │ 2  .  .  1 -1    -2│\n│φ₂‚₂ │ 2  .  . -1 -1     2│\n└─────┴────────────────────┘")
@test mytest("Chars.jl","ct.charnames","6-element Vector{String}:\n \"\\\\phi_{1,0}\"\n \"\\\\phi_{1,6}\"\n \"\\\\phi_{1,3}'\"\n \"\\\\phi_{1,3}''\"\n \"\\\\phi_{2,1}\"\n \"\\\\phi_{2,2}\"")
@test mytest("Chars.jl","ct.classnames","6-element Vector{String}:\n \"A_0\"\n \"\\\\tilde A_1\"\n \"A_1\"\n \"G_2\"\n \"A_2\"\n \"A_1+\\\\tilde A_1\"")
@test mytest("Chars.jl","m=cartan(:A,3)","3×3 Matrix{Int64}:\n  2  -1   0\n -1   2  -1\n  0  -1   2")
@test mytest("Chars.jl","schur_functor(m,[2,2])","6×6 Matrix{Rational{Int64}}:\n   9   -6    4  3//2   -2    1\n -12   16  -16  -4      8   -4\n   4   -8   16   2     -8    4\n  12  -16   16  10    -16   12\n  -4    8  -16  -4     16  -12\n   1   -2    4  3//2   -6    9")
@test mytest("Chars.jl","fakedegree(coxgroup(:A,2),[[2,1]],Pol(:q))","Pol{Cyc{Int64}}: q²+q")
@test mytest("Chars.jl","fakedegrees(coxgroup(:A,2),Pol(:q))","3-element Vector{Pol{Int64}}:\n q³\n q²+q\n 1")
@test mytest("Chars.jl","charinfo(coxgroup(:G,2)).charparams","6-element Vector{Vector{Vector{Int64}}}:\n [[1, 0]]\n [[1, 6]]\n [[1, 3, 1]]\n [[1, 3, 2]]\n [[2, 1]]\n [[2, 2]]")
@test mytest("Chars.jl","charinfo(coxgroup(:G,2))","┌──┬──────────────────────────────────────────────────────────┐\n│n0│ name ext b B a A spaltenstein lusztig              symbol│\n├──┼──────────────────────────────────────────────────────────┤\n│1 │ φ₁‚₀  Id 0 0 0 0            1       1       (0,0,0,0,0,2)│\n│2 │ φ₁‚₆ det 6 6 6 6            ε       ε (01,01,01,01,01,12)│\n│3 │φ′₁‚₃     3 3 1 5           εₗ      ε′            (0,0,1+)│\n│4 │φ″₁‚₃     3 3 1 5          ε_c      ε″            (0,0,1-)│\n│5 │ φ₂‚₁  Λ¹ 1 5 1 5           θ′      θ′       (0,0,0,0,1,1)│\n│6 │ φ₂‚₂     2 4 1 5           θ″      θ″       (0,0,0,1,0,1)│\n└──┴──────────────────────────────────────────────────────────┘")
@test mytest("Chars.jl","charinfo(complex_reflection_group(24))","┌──┬─────────────────────┐\n│n0│ name ext  b  B  a  A│\n├──┼─────────────────────┤\n│1 │ φ₁‚₀  Id  0  0  0  0│\n│2 │φ₁‚₂₁ det 21 21 21 21│\n│3 │ φ₃‚₈      8 18  8 20│\n│4 │ φ₃‚₁  Λ¹  1 11  1 13│\n│5 │φ₃‚₁₀  Λ² 10 20  8 20│\n│6 │ φ₃‚₃      3 13  1 13│\n│7 │ φ₆‚₂      2 12  1 13│\n│8 │ φ₆‚₉      9 19  8 20│\n│9 │ φ₇‚₆      6 18  6 18│\n│10│ φ₇‚₃      3 15  3 15│\n│11│ φ₈‚₄      4 16  4 17│\n│12│ φ₈‚₅      5 17  4 17│\n└──┴─────────────────────┘\nhgal=(11,12)")
@test mytest("Chars.jl","W=coxgroup(:D,4)","D₄")
@test mytest("Chars.jl","detPerm(W)","(1,8)(2,9)(3,11)(4,13)(7,12)")
@test mytest("Chars.jl","W=complex_reflection_group(4)","G₄")
@test mytest("Chars.jl","conjPerm(W)","(2,3)(5,6)")
@test mytest("Chars.jl","classinfo(coxgroup(:A,2))","┌──┬──────────────────────┐\n│n0│name length order word│\n├──┼──────────────────────┤\n│1 │ 111      1     1    .│\n│2 │  21      3     2    1│\n│3 │   3      2     3   12│\n└──┴──────────────────────┘")
@test mytest("Chars.jl","W=spets(coxgroup(:D,4),Perm(1,2,4))","³D₄")
@test mytest("Chars.jl","CharTable(W)","CharTable(³D₄)\n┌─────┬─────────────────────────────────┐\n│     │C₃ Ã₂ C₃+A₁ Ã₂+A₁ F₄ Ã₂+A₂ F₄(a₁)│\n├─────┼─────────────────────────────────┤\n│.4   │ 1  1     1     1  1     1      1│\n│.1111│-1  1     1    -1  1     1      1│\n│.22  │ .  2     2     . -1    -1     -1│\n│11.2 │ .  .     .     . -1     3      3│\n│1.3  │ 1  1    -1    -1  .    -2      2│\n│1.111│-1  1    -1     1  .    -2      2│\n│1.21 │ .  2    -2     .  .     2     -2│\n└─────┴─────────────────────────────────┘")
@test mytest("Chars.jl","WF=rootdatum(\"3D4\")","³D₄")
@test mytest("Chars.jl","on_chars(Group(WF),WF.phi)","(1,2,7)(8,9,12)")
@test mytest("Chars.jl","representation(complex_reflection_group(24),3)","3-element Vector{Matrix{Cyc{Int64}}}:\n [1 0 0; -1 -1 0; -1 0 -1]\n [-1 0 -1; 0 -1 (1-√-7)/2; 0 0 1]\n [-1 -1 0; 0 1 0; 0 (1+√-7)/2 -1]")
@test mytest("Chars.jl","representations(coxgroup(:B,2))","5-element Vector{Vector{Matrix{Int64}}}:\n [[1;;], [-1;;]]\n [[1 0; -1 -1], [1 2; 0 -1]]\n [[-1;;], [-1;;]]\n [[1;;], [1;;]]\n [[-1;;], [1;;]]")
@test mytest("Chars.jl","W=coxgroup(:H,3)","H₃")
@test mytest("Chars.jl","g=Wgraph(W,3)","2-element Vector{Vector{Vector{Any}}}:\n [[2], [1, 2], [1, 3], [1, 3], [2, 3]]\n [[-1, [[1, 3], [2, 4], [3, 5], [4, 5]]]]")
@test mytest("Chars.jl","WGraphToRepresentation(3,g,Pol(:x))","3-element Vector{Matrix{Pol{Int64}}}:\n [x² 0 … 0 0; 0 -1 … 0 0; … ; 0 0 … -1 -x; 0 0 … 0 x²]\n [-1 0 … 0 0; 0 -1 … -x 0; … ; 0 0 … x² 0; 0 0 … -x -1]\n [x² 0 … 0 0; 0 x² … 0 0; … ; 0 -x … -1 0; 0 0 … 0 -1]")
@test mytest("Chars.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Chars.jl","charnames(W;limit=true)","6-element Vector{String}:\n \"φ₁‚₀\"\n \"φ₁‚₆\"\n \"φ′₁‚₃\"\n \"φ″₁‚₃\"\n \"φ₂‚₁\"\n \"φ₂‚₂\"")
@test mytest("Chars.jl","charnames(W;TeX=true)","6-element Vector{String}:\n \"\\\\phi_{1,0}\"\n \"\\\\phi_{1,6}\"\n \"\\\\phi_{1,3}'\"\n \"\\\\phi_{1,3}''\"\n \"\\\\phi_{2,1}\"\n \"\\\\phi_{2,2}\"")
@test mytest("Chars.jl","charnames(W;spaltenstein=true,limit=true)","6-element Vector{String}:\n \"1\"\n \"ε\"\n \"εₗ\"\n \"ε_c\"\n \"θ′\"\n \"θ″\"")
@test mytest("Chars.jl","charnames(W;spaltenstein=true,TeX=true)","6-element Vector{String}:\n \"1\"\n \"\\\\varepsilon\"\n \"\\\\varepsilon_l\"\n \"\\\\varepsilon_c\"\n \"\\\\theta'\"\n \"\\\\theta''\"")
@test mytest("Chars.jl","g=coxgroup(:G,2)","G₂")
@test mytest("Chars.jl","u=reflection_subgroup(g,[1,6])","G₂₍₁₅₎=A₂")
@test mytest("Chars.jl","t=induction_table(u,g)","Induction table from G₂₍₁₅₎=A₂ to G₂\n┌─────┬────────┐\n│     │111 21 3│\n├─────┼────────┤\n│φ₁‚₀ │  .  . 1│\n│φ₁‚₆ │  1  . .│\n│φ′₁‚₃│  1  . .│\n│φ″₁‚₃│  .  . 1│\n│φ₂‚₁ │  .  1 .│\n│φ₂‚₂ │  .  1 .│\n└─────┴────────┘")
@test mytest("Chars.jl","W=coxgroup(:D,4)","D₄")
@test mytest("Chars.jl","H=reflection_subgroup(W,[1,3])","D₄₍₁₃₎=A₂Φ₁²")
@test mytest("Chars.jl","j_induction_table(H,W)","j-induction table from D₄₍₁₃₎=A₂Φ₁² to D₄\n┌─────┬────────┐\n│     │111 21 3│\n├─────┼────────┤\n│11+  │  .  . .│\n│11-  │  .  . .│\n│1.111│  .  . .│\n│.1111│  .  . .│\n│11.2 │  .  . .│\n│1.21 │  1  . .│\n│.211 │  .  . .│\n│2+   │  .  . .│\n│2-   │  .  . .│\n│.22  │  .  . .│\n│1.3  │  .  1 .│\n│.31  │  .  . .│\n│.4   │  .  . 1│\n└─────┴────────┘")
@test mytest("Chars.jl","W=coxgroup(:D,4)","D₄")
@test mytest("Chars.jl","H=reflection_subgroup(W,[1,3])","D₄₍₁₃₎=A₂Φ₁²")
@test mytest("Chars.jl","J_induction_table(H,W)","J-induction table from D₄₍₁₃₎=A₂Φ₁² to D₄\n┌─────┬────────┐\n│     │111 21 3│\n├─────┼────────┤\n│11+  │  .  . .│\n│11-  │  .  . .│\n│1.111│  .  . .│\n│.1111│  .  . .│\n│11.2 │  1  . .│\n│1.21 │  1  . .│\n│.211 │  .  . .│\n│2+   │  .  . .│\n│2-   │  .  . .│\n│.22  │  .  . .│\n│1.3  │  .  1 .│\n│.31  │  .  . .│\n│.4   │  .  . 1│\n└─────┴────────┘")
@test mytest("Chars.jl","W=complex_reflection_group(4);@Mvp x,y","nothing")
@test mytest("Chars.jl","discriminant(W)(x,y)","Mvp{Int64}: x³-y²")
end
@testset "Chevie.jl" begin
end
@testset "ComplexR.jl" begin
@test mytest("ComplexR.jl","G=complex_reflection_group(4)","G₄")
@test mytest("ComplexR.jl","degrees(G)","2-element Vector{Int64}:\n 4\n 6")
@test mytest("ComplexR.jl","length(G)","24")
@test mytest("ComplexR.jl","W*coxgroup(:A,2)","G₄×A₂")
@test mytest("ComplexR.jl","complex_reflection_group(1,1,3)","gl₃")
@test mytest("ComplexR.jl","crg(4)","G₄")
@test mytest("ComplexR.jl","W=complex_reflection_group(30)","H₄")
@test mytest("ComplexR.jl","degrees(W)","4-element Vector{Int64}:\n  2\n 12\n 20\n 30")
@test mytest("ComplexR.jl","length(W)","14400")
@test mytest("ComplexR.jl","W=coxgroup(:E,6)","E₆")
@test mytest("ComplexR.jl","WF=spets(W)","E₆")
@test mytest("ComplexR.jl","phi=W(6,5,4,2,3,1,4,3,5,4,2,6,5,4,3,1);","nothing")
@test mytest("ComplexR.jl","HF=subspets(WF,2:5,phi)","E₆₍₂₃₄₅₎=³D₄Φ₃")
@test mytest("ComplexR.jl","diagram(HF)","ϕ acts as (1,2,4) on the component below\n  O 2\n  ￨\nO—O—O D₄\n1 3 4")
@test mytest("ComplexR.jl","degrees(HF)","6-element Vector{Tuple{Int64, Cyc{Int64}}}:\n (1, ζ₃)\n (1, ζ₃²)\n (2, 1)\n (4, ζ₃)\n (6, 1)\n (4, ζ₃²)")
@test mytest("ComplexR.jl","W=complex_reflection_group(4)","G₄")
@test mytest("ComplexR.jl","codegrees(W)","2-element Vector{Int64}:\n 0\n 2")
@test mytest("ComplexR.jl","W=coxgroup(:B,2)","B₂")
@test mytest("ComplexR.jl","hyperplane_orbits(W)","2-element Vector{@NamedTuple{s::Int64, cl_s::Vector{Int64}, order::Int64, N_s::Int64, det_s::Vector{Int64}}}:\n (s = 1, cl_s = [2], order = 2, N_s = 2, det_s = [5])\n (s = 2, cl_s = [4], order = 2, N_s = 2, det_s = [1])")
@test mytest("ComplexR.jl","W=crg(8);","nothing")
@test mytest("ComplexR.jl","r=reflections(W)[7]","Reflection(G₈,1,-1)")
@test mytest("ComplexR.jl","r.rootno","1")
@test mytest("ComplexR.jl","r.eigen","Root1: -1")
@test mytest("ComplexR.jl","r.W","G₈")
@test mytest("ComplexR.jl","r==Reflection(W,1,-1)","true")
@test mytest("ComplexR.jl","Reflection(W,1)","Reflection(G₈,1,ζ₄)")
@test mytest("ComplexR.jl","root(r)","2-element Vector{Cyc{Rational{Int64}}}:\n  0\n ζ₄")
@test mytest("ComplexR.jl","coroot(r)","2-element Vector{Cyc{Int64}}:\n    0\n -2ζ₄")
@test mytest("ComplexR.jl","Matrix(r)","2×2 Matrix{Cyc{Rational{Int64}}}:\n 1   0\n 0  -1")
@test mytest("ComplexR.jl","hyperplane(r)","1×2 Matrix{Cyc{Rational{Int64}}}:\n 1  0")
@test mytest("ComplexR.jl","hyperplane(r)*Matrix(r)==hyperplane(r)","true")
@test mytest("ComplexR.jl","isdistinguished(r)","false")
@test mytest("ComplexR.jl","exponent(r)","2")
@test mytest("ComplexR.jl","Perm(r)","(1,8)(2,9)(3,16)(4,15)(5,17)(6,18)(7,19)(10,22)(11,21)(12,23)")
@test mytest("ComplexR.jl","hyperplane_orbit(r)","1")
@test mytest("ComplexR.jl","position_class(r)","15")
@test mytest("ComplexR.jl","simple_rep(r)","1")
@test mytest("ComplexR.jl","word(r)","2-element Vector{Int64}:\n 1\n 1")
@test mytest("ComplexR.jl","W=crg(4)","G₄")
@test mytest("ComplexR.jl","reflections(W)","8-element Vector{Reflection{PRG{Cyc{Rational{Int64}}, Int16}}}:\n Reflection(G₄,1,ζ₃)\n Reflection(G₄,2,ζ₃)\n Reflection(G₄,4,ζ₃)\n Reflection(G₄,5,ζ₃)\n Reflection(G₄,1,ζ₃²)\n Reflection(G₄,2,ζ₃²)\n Reflection(G₄,4,ζ₃²)\n Reflection(G₄,5,ζ₃²)")
end
@testset "Cosets.jl" begin
@test mytest("Cosets.jl","W=complex_reflection_group(14)","G₁₄")
@test mytest("Cosets.jl","R=reflection_subgroup(W,[2,4])","G₁₄₍₂₄₎=G₅")
@test mytest("Cosets.jl","RF=spets(R,W(1))","G₁₄₍₂₄₎=²G₅")
@test mytest("Cosets.jl","degrees(RF)","2-element Vector{Tuple{Int64, Cyc{Int64}}}:\n (6, 1)\n (12, -1)")
@test mytest("Cosets.jl","W=coxgroup(:B,2)","B₂")
@test mytest("Cosets.jl","W=coxgroup(:Bsym,2)","Bsym₂")
@test mytest("Cosets.jl","WF=spets(W,Perm(1,2))","²Bsym₂")
@test mytest("Cosets.jl","CharTable(WF)","CharTable(²Bsym₂)\n┌───┬─────────┐\n│   │    1 121│\n├───┼─────────┤\n│2. │1   1   1│\n│.11│1  -1  -1│\n│1.1│. -√2  √2│\n└───┴─────────┘")
@test mytest("Cosets.jl","W=coxgroup(:Bsym,2)","Bsym₂")
@test mytest("Cosets.jl","WF=spets(W,Perm(1,2))","²Bsym₂")
@test mytest("Cosets.jl","subspets(WF,Int[],W(1))","²Bsym₂₍₎=Φ‴₈")
@test mytest("Cosets.jl","W=coxgroup(:B,2)","B₂")
@test mytest("Cosets.jl","twistings(W,[1])","2-element Vector{Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}}:\n B₂₍₁₎=Ã₁Φ₁\n B₂₍₁₎=Ã₁Φ₂")
@test mytest("Cosets.jl","twistings(W,[2])","2-element Vector{Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}}:\n B₂₍₂₎=A₁Φ₁\n B₂₍₂₎=A₁Φ₂")
@test mytest("Cosets.jl","W=coxgroup(:B,2)","B₂")
@test mytest("Cosets.jl","twistings(W,[2,4])","2-element Vector{Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}}:\n B₂₍₂₄₎=A₁×A₁\n B₂₍₂₄₎=(A₁A₁)")
@test mytest("Cosets.jl","W=coxgroup(:E,6)","E₆")
@test mytest("Cosets.jl","WF=spets(W,Perm(1,6)*Perm(3,5))","²E₆")
@test mytest("Cosets.jl","twistings(W,2:5)","3-element Vector{Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}}:\n E₆₍₂₃₄₅₎=D₄Φ₁²\n E₆₍₂₃₄₅₎=³D₄Φ₃\n E₆₍₂₃₄₅₎=²D₄Φ₁Φ₂")
@test mytest("Cosets.jl","twistings(WF,2:5)","3-element Vector{Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}}:\n ²E₆₍₂₅₄₃₎=²D₄₍₁₄₃₂₎Φ₁Φ₂\n ²E₆₍₂₅₄₃₎=³D₄₍₁₄₃₂₎Φ₆\n ²E₆₍₂₃₄₅₎=D₄Φ₂²")
@test mytest("Cosets.jl","W=coxgroup(:D,4)","D₄")
@test mytest("Cosets.jl","graph_automorphisms(refltype(W*W))","Group((1,5)(2,6)(3,7)(4,8),(1,2),(1,4))")
@test mytest("Cosets.jl","twistings(coxgroup(:A,3)*coxgroup(:A,3))","8-element Vector{Spets{FiniteCoxeterGroup{Perm{Int16},Int64}}}:\n A₃×A₃\n A₃×²A₃\n ²A₃×A₃\n ²A₃×²A₃\n (A₃A₃)\n ²(A₃A₃)\n ²(A₃A₃)₍₁₂₃₆₅₄₎\n (A₃A₃)₍₁₂₃₆₅₄₎")
@test mytest("Cosets.jl","twistings(coxgroup(:D,4))","6-element Vector{Spets{FiniteCoxeterGroup{Perm{Int16},Int64}}}:\n D₄\n ²D₄₍₂₄₃₁₎\n ²D₄\n ³D₄\n ²D₄₍₁₄₃₂₎\n ³D₄₍₁₄₃₂₎")
@test mytest("Cosets.jl","W=rootdatum(:so,8)","so₈")
@test mytest("Cosets.jl","twistings(W)","2-element Vector{Spets{FiniteCoxeterGroup{Perm{Int16},Int64}}}:\n D₄\n ²D₄")
@test mytest("Cosets.jl","W=rootdatum(:gl,3)","gl₃")
@test mytest("Cosets.jl","gu3=spets(W,-reflrep(W,W()))","²A₂Φ₂")
@test mytest("Cosets.jl","F4=coxgroup(:F,4);D4=reflection_subgroup(F4,[1,2,16,48])","F₄₍₉‚₂‚₁‚₁₆₎=D₄₍₃₂₁₄₎")
@test mytest("Cosets.jl","spets(D4,[1 0 0 0;0 1 2 0;0 0 0 1;0 0 -1 -1])","F₄₍₉‚₁₆‚₁‚₂₎=³D₄₍₃₄₁₂₎")
@test mytest("Cosets.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Cosets.jl","spets(W,Perm(1,3))","²A₃")
@test mytest("Cosets.jl","torus([0 -1;1 -1])","Φ₃")
@test mytest("Cosets.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Cosets.jl","twistings(W,Int[])","5-element Vector{Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}}:\n A₃₍₎=Φ₁³\n A₃₍₎=Φ₁²Φ₂\n A₃₍₎=Φ₁Φ₂²\n A₃₍₎=Φ₁Φ₃\n A₃₍₎=Φ₂Φ₄")
@test mytest("Cosets.jl","torus(W,2)","A₃₍₎=Φ₁²Φ₂")
@test mytest("Cosets.jl","WF=spets(W,Perm(1,3))","²A₃")
@test mytest("Cosets.jl","twistings(WF,Int[])","5-element Vector{Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}}:\n ²A₃₍₎=Φ₂³\n ²A₃₍₎=Φ₁Φ₂²\n ²A₃₍₎=Φ₁²Φ₂\n ²A₃₍₎=Φ₂Φ₆\n ²A₃₍₎=Φ₁Φ₄")
@test mytest("Cosets.jl","torus(WF,2)","²A₃₍₎=Φ₁Φ₂²")
@test mytest("Cosets.jl","W=coxgroup(:D,4)","D₄")
@test mytest("Cosets.jl","WF=spets(W,Perm(1,2,4))","³D₄")
@test mytest("Cosets.jl","u=unichar(W,2)","[D₄]:<11->")
@test mytest("Cosets.jl","F=Frobenius(WF);F(u)","[D₄]:<.211>")
@test mytest("Cosets.jl","F(u,-1)","[D₄]:<11+>")
@test mytest("Cosets.jl","F(1)","4")
@test mytest("Cosets.jl","WF=spets(coxgroup(:F,4))","F₄")
@test mytest("Cosets.jl","w=transporting_elt(Group(WF),[1,2,9,16],[1,9,16,2],ontuples);","nothing")
@test mytest("Cosets.jl","LF=subspets(WF,[1,2,9,16],w)","F₄₍₉‚₁₆‚₁‚₂₎=³D₄₍₃₄₁₂₎")
@test mytest("Cosets.jl","diagram(LF)","ϕ acts as (2,3,4) on the component below\n  O 4\n  ￨\nO—O—O D₄\n3 1 2")
@test mytest("Cosets.jl","spets(\"3G422\")","³G₄‚₂‚₂")
@test mytest("Cosets.jl","spets(\"2G5\")","²G₅")
@test mytest("Cosets.jl","spets(\"3G333\")","G₃‚₃‚₃₍₁‚₂‚₃‚₄₄₎=³G₃‚₃‚₃₍₁‚₂‚₃‚₄₄₎")
@test mytest("Cosets.jl","spets(\"3pG333\")","G₃‚₃‚₃₍₁‚₂‚₃‚₄₄₎=³G₃‚₃‚₃₍₁‚₂‚₃‚₄₄₎")
@test mytest("Cosets.jl","spets(\"4G333\")","G₃‚₃‚₃₍₂‚₁₂‚₁₁‚₁₆‚₅₃‚₁₀‚₄₃‚₃₆₎=⁴G₃‚₃‚₃₍₁‚₂‚₃‚₃₂‚₁₆‚₃₆‚₃₀‚₁₀₎")
end
@testset "CoxGroups.jl" begin
@test mytest("CoxGroups.jl","W=coxsym(4)","𝔖 ₄")
@test mytest("CoxGroups.jl","p=W(1,3,2,1,3)","(1,4)")
@test mytest("CoxGroups.jl","word(W,p)","5-element Vector{Int64}:\n 1\n 2\n 3\n 2\n 1")
@test mytest("CoxGroups.jl","word(W,longest(W))","6-element Vector{Int64}:\n 1\n 2\n 1\n 3\n 2\n 1")
@test mytest("CoxGroups.jl","w0=longest(W)","(1,4)(2,3)")
@test mytest("CoxGroups.jl","length(W,w0)","6")
@test mytest("CoxGroups.jl","map(w->word(W,w),refls(W,1:nref(W)))","6-element Vector{Vector{Int64}}:\n [1]\n [2]\n [3]\n [1, 2, 1]\n [2, 3, 2]\n [1, 2, 3, 2, 1]")
@test mytest("CoxGroups.jl","[length(elements(W,i)) for i in 0:nref(W)]","7-element Vector{Int64}:\n 1\n 3\n 5\n 6\n 5\n 3\n 1")
@test mytest("CoxGroups.jl","W=coxsym(3)","𝔖 ₃")
@test mytest("CoxGroups.jl","firstleftdescent(W,Perm(2,3))","2")
@test mytest("CoxGroups.jl","W=coxsym(3)","𝔖 ₃")
@test mytest("CoxGroups.jl","leftdescents(W,Perm(1,3))","2-element Vector{Int64}:\n 1\n 2")
@test mytest("CoxGroups.jl","W=coxgroup(:A,3)","A₃")
@test mytest("CoxGroups.jl","w=perm\"(1,11)(3,10)(4,9)(5,7)(6,12)\"","(1,11)(3,10)(4,9)(5,7)(6,12)")
@test mytest("CoxGroups.jl","w in W","true")
@test mytest("CoxGroups.jl","word(W,w)","5-element Vector{Int64}:\n 1\n 2\n 3\n 2\n 1")
@test mytest("CoxGroups.jl","W=coxsym(4)","𝔖 ₄")
@test mytest("CoxGroups.jl","p=W(1,2,3,1,2,3)","(1,3)(2,4)")
@test mytest("CoxGroups.jl","length(W,p)","4")
@test mytest("CoxGroups.jl","word(W,p)","4-element Vector{Int64}:\n 2\n 1\n 3\n 2")
@test mytest("CoxGroups.jl","W=coxgroup(:G,2)","G₂")
@test mytest("CoxGroups.jl","H=reflection_subgroup(W,[2,6])","G₂₍₂₆₎=Ã₁×A₁")
@test mytest("CoxGroups.jl","word.(Ref(W),unique(reduced.(Ref(H),elements(W))))","3-element Vector{Vector{Int64}}:\n []\n [1]\n [1, 2]")
@test mytest("CoxGroups.jl","W=coxgroup(:G,2)","G₂")
@test mytest("CoxGroups.jl","H=reflection_subgroup(W,[2,6])","G₂₍₂₆₎=Ã₁×A₁")
@test mytest("CoxGroups.jl","[word(W,w) for S in reduced(H,W) for w in S]","3-element Vector{Vector{Int64}}:\n []\n [1]\n [1, 2]")
@test mytest("CoxGroups.jl","W=coxgroup(:H,3)","H₃")
@test mytest("CoxGroups.jl","w=W(1,2,1,3);","nothing")
@test mytest("CoxGroups.jl","b=filter(x->bruhatless(W,x,w),elements(W));","nothing")
@test mytest("CoxGroups.jl","word.(Ref(W),b)","12-element Vector{Vector{Int64}}:\n []\n [1]\n [2]\n [3]\n [1, 2]\n [2, 1]\n [1, 3]\n [2, 3]\n [1, 2, 1]\n [1, 2, 3]\n [2, 1, 3]\n [1, 2, 1, 3]")
@test mytest("CoxGroups.jl","W=coxsym(3)","𝔖 ₃")
@test mytest("CoxGroups.jl","bruhatless(W,Perm(1,3))","4-element Vector{Vector{Perm{Int16}}}:\n [()]\n [(1,2), (2,3)]\n [(1,2,3), (1,3,2)]\n [(1,3)]")
@test mytest("CoxGroups.jl","W=coxsym(3)","𝔖 ₃")
@test mytest("CoxGroups.jl","Poset(W)",".<1,2<21,12<121")
@test mytest("CoxGroups.jl","p=Poset((x,y)->bruhatless(W,x,y),elements(W))","()<(1,2),(2,3)<(1,3,2),(1,2,3)<(1,3)")
@test mytest("CoxGroups.jl","p.show_element=(io,x,n)->join(io,word(W,x.elements[n]));","nothing")
@test mytest("CoxGroups.jl","p","<1,2<12,21<121")
@test mytest("CoxGroups.jl","W=coxsym(4)","𝔖 ₄")
@test mytest("CoxGroups.jl","Poset(W,W(1,3))",".<3,1<13")
@test mytest("CoxGroups.jl","W=coxgroup(:A,3)","A₃")
@test mytest("CoxGroups.jl","words(W,longest(W))","16-element Vector{Vector{Int64}}:\n [1, 2, 1, 3, 2, 1]\n [1, 2, 3, 1, 2, 1]\n [1, 2, 3, 2, 1, 2]\n [1, 3, 2, 1, 3, 2]\n [1, 3, 2, 3, 1, 2]\n [2, 1, 2, 3, 2, 1]\n [2, 1, 3, 2, 1, 3]\n [2, 1, 3, 2, 3, 1]\n [2, 3, 1, 2, 1, 3]\n [2, 3, 1, 2, 3, 1]\n [2, 3, 2, 1, 2, 3]\n [3, 1, 2, 1, 3, 2]\n [3, 1, 2, 3, 1, 2]\n [3, 2, 1, 2, 3, 2]\n [3, 2, 1, 3, 2, 3]\n [3, 2, 3, 1, 2, 3]")
@test mytest("CoxGroups.jl","W=coxgroup(:A,3)","A₃")
@test mytest("CoxGroups.jl","inversions(W,W(1,2,1))","3-element Vector{Int64}:\n 1\n 2\n 4")
@test mytest("CoxGroups.jl","CoxGroups.standard_parabolic_class(coxgroup(:E,8),[7,8])","7-element Vector{Vector{Int64}}:\n [7, 8]\n [6, 7]\n [5, 6]\n [4, 5]\n [2, 4]\n [3, 4]\n [1, 3]")
@test mytest("CoxGroups.jl","C=cartan(:H,3)","3×3 Matrix{Cyc{Int64}}:\n       2  ζ₅²+ζ₅³   0\n ζ₅²+ζ₅³        2  -1\n       0       -1   2")
@test mytest("CoxGroups.jl","coxmat(C)","3×3 Matrix{Int64}:\n 1  5  2\n 5  1  3\n 2  3  1")
@test mytest("CoxGroups.jl","W=coxsym(4)","𝔖 ₄")
@test mytest("CoxGroups.jl","coxmat(W)","3×3 Matrix{Int64}:\n 1  3  2\n 3  1  3\n 2  3  1")
@test mytest("CoxGroups.jl","W=complex_reflection_group(29)","G₂₉")
@test mytest("CoxGroups.jl","braid_relations(W)","7-element Vector{Tuple{Vector{Int64}, Vector{Int64}}}:\n ([1, 2, 1], [2, 1, 2])\n ([2, 4, 2], [4, 2, 4])\n ([3, 4, 3], [4, 3, 4])\n ([2, 3, 2, 3], [3, 2, 3, 2])\n ([1, 3], [3, 1])\n ([1, 4], [4, 1])\n ([4, 3, 2, 4, 3, 2], [3, 2, 4, 3, 2, 4])")
@test mytest("CoxGroups.jl","longest(coxsym(4))","(1,4)(2,3)")
@test mytest("CoxGroups.jl","longest(coxsym(4))","(1,4)(2,3)")
@test mytest("CoxGroups.jl","W=coxsym(3)","𝔖 ₃")
@test mytest("CoxGroups.jl","gens(W)","2-element Vector{Perm{Int16}}:\n (1,2)\n (2,3)")
@test mytest("CoxGroups.jl","e=elements(W)","6-element Vector{Perm{Int16}}:\n ()\n (1,2)\n (2,3)\n (1,3,2)\n (1,2,3)\n (1,3)")
@test mytest("CoxGroups.jl","length.(Ref(W),e)","6-element Vector{Int64}:\n 0\n 1\n 1\n 2\n 2\n 3")
@test mytest("CoxGroups.jl","W=coxsym(3)","𝔖 ₃")
@test mytest("CoxGroups.jl","isleftdescent(W,Perm(1,2),1)","true")
@test mytest("CoxGroups.jl","W=coxsym(3)","𝔖 ₃")
@test mytest("CoxGroups.jl","isrightdescent(W,Perm(1,2),1)","true")
@test mytest("CoxGroups.jl","elements(coxhyp(2))","8-element Vector{SPerm{Int8}}:\n ()\n (1,2)\n (1,-1)\n (1,2,-1,-2)\n (1,-2,-1,2)\n (2,-2)\n (1,-2)\n (1,-1)(2,-2)")
@test mytest("CoxGroups.jl","W=coxgroup([2 -2;-2 2])","coxeter_group([2 -2; -2 2])")
end
@testset "Diagrams.jl" begin
@test mytest("Diagrams.jl","diagram(coxgroup(:E,8))","O 2\n    ￨\nO—O—O—O—O—O—O E₈\n1 3 4 5 6 7 8")
@test mytest("Diagrams.jl","diagram(crg(33))","3 ②       G₃₃\n     /^\\\n② ——② ——② ——②\n1   2   4   5     423423=342342")
end
@testset "Eigenspaces.jl" begin
@test mytest("Eigenspaces.jl","W=coxgroup(:E,8)","E₈")
@test mytest("Eigenspaces.jl","relative_degrees(W,4)","4-element Vector{Int64}:\n  8\n 12\n 20\n 24")
@test mytest("Eigenspaces.jl","regular_eigenvalues(coxgroup(:G,2))","6-element Vector{Root1}:\n   1\n  -1\n  ζ₃\n ζ₃²\n  ζ₆\n ζ₆⁵")
@test mytest("Eigenspaces.jl","W=complex_reflection_group(6)","G₆")
@test mytest("Eigenspaces.jl","L=twistings(W,[2])[4]","G₆₍₂₎=G₃‚₁‚₁[ζ₄]Φ′₄")
@test mytest("Eigenspaces.jl","regular_eigenvalues(L)","3-element Vector{Root1}:\n    ζ₄\n  ζ₁₂⁷\n ζ₁₂¹¹")
@test mytest("Eigenspaces.jl","W=coxgroup(:E,8)","E₈")
@test mytest("Eigenspaces.jl","position_regular_class(W,30)","65")
@test mytest("Eigenspaces.jl","W=complex_reflection_group(6)","G₆")
@test mytest("Eigenspaces.jl","L=twistings(W,[2])[4]","G₆₍₂₎=G₃‚₁‚₁[ζ₄]Φ′₄")
@test mytest("Eigenspaces.jl","position_regular_class(L,7//12)","2")
@test mytest("Eigenspaces.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Eigenspaces.jl","w=W(1:3...)","(1,12,3,2)(4,11,10,5)(6,9,8,7)")
@test mytest("Eigenspaces.jl","p=eigenspace_projector(W,w,1//4)","3×3 Matrix{Cyc{Rational{Int64}}}:\n  (1+ζ₄)/4   ζ₄/2  (-1+ζ₄)/4\n  (1-ζ₄)/4   1//2   (1+ζ₄)/4\n (-1-ζ₄)/4  -ζ₄/2   (1-ζ₄)/4")
@test mytest("Eigenspaces.jl","GenLinearAlgebra.rank(p)","1")
@test mytest("Eigenspaces.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Eigenspaces.jl","split_levis(W,4)","2-element Vector{Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}}:\n A₃\n A₃₍₎=Φ₂Φ₄")
@test mytest("Eigenspaces.jl","W=spets(coxgroup(:D,4),Perm(1,2,4))","³D₄")
@test mytest("Eigenspaces.jl","split_levis(W,3)","3-element Vector{Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}}:\n ³D₄\n ³D₄₍₁₃₎=A₂Φ₃\n ³D₄₍₎=Φ₃²")
@test mytest("Eigenspaces.jl","W=coxgroup(:E,8)","E₈")
@test mytest("Eigenspaces.jl","split_levis(W,4,2)","3-element Vector{Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}}:\n E₈₍₃₂₄₅₎=D₄₍₁₃₂₄₎Φ₄²\n E₈₍₅₇₂₃₎=(A₁A₁)×(A₁A₁)Φ₄²\n E₈₍₃₁₅₆₎=²(A₂A₂)₍₁₄₂₃₎Φ₄²")
@test mytest("Eigenspaces.jl","split_levis(complex_reflection_group(5))","4-element Vector{Spets{PRSG{Cyc{Rational{Int64}}, Int16}}}:\n G₅\n G₅₍₁₎=G₃‚₁‚₁Φ₁\n G₅₍₂₎=G₃‚₁‚₁Φ₁\n G₅₍₎=Φ₁²")
end
@testset "FFfac.jl" begin
@test mytest("FFfac.jl","@Pol q","Pol{Int64}: q")
@test mytest("FFfac.jl","f=q^3*(q^4-1)^2*Z(3)^0","Pol{FFE{3}}: q¹¹+q⁷+q³")
@test mytest("FFfac.jl","factor(f)","(q²+1)² * (q+1)² * (q-1)² * q³")
@test mytest("FFfac.jl","factor(f,GF(9))","(q+1)² * (q-1)² * (q+Z₉²)² * (q+Z₉⁶)² * q³")
end
@testset "Fact.jl" begin
@test mytest("Fact.jl","factor(Pol(:q)^24-1)","(q-1) * (q²-q+1) * (q⁴-q²+1) * (q⁸-q⁴+1) * (q⁴+1) * (q²+1) * (q+1) * (q²+q+1)")
@test mytest("Fact.jl","Fact.LogInt(1024,2)","10")
@test mytest("Fact.jl","Fact.LogInt(1,10)","0")
end
@testset "Families.jl" begin
@test mytest("Families.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Families.jl","uc=UnipotentCharacters(W);","nothing")
@test mytest("Families.jl","uc.families","3-element Vector{Family}:\n Family(D(𝔖 ₃),[5, 6, 4, 3, 8, 7, 9, 10])\n Family(C₁,[1])\n Family(C₁,[2])")
@test mytest("Families.jl","uc.families[1]","Family(D(𝔖 ₃),[5, 6, 4, 3, 8, 7, 9, 10])\nDrinfeld double of 𝔖 ₃, Lusztig′s version\n┌────────┬────────────────────────────────────────────────────┐\n│label   │eigen                                               │\n├────────┼────────────────────────────────────────────────────┤\n│(1,1)   │    1 1//6  1//2  1//3  1//3  1//6  1//2  1//3  1//3│\n│(g₂,1)  │    1 1//2  1//2     .     . -1//2 -1//2     .     .│\n│(g₃,1)  │    1 1//3     .  2//3 -1//3  1//3     . -1//3 -1//3│\n│(1,ρ)   │    1 1//3     . -1//3  2//3  1//3     . -1//3 -1//3│\n│(1,ε)   │    1 1//6 -1//2  1//3  1//3  1//6 -1//2  1//3  1//3│\n│(g₂,ε)  │   -1 1//2 -1//2     .     . -1//2  1//2     .     .│\n│(g₃,ζ₃) │   ζ₃ 1//3     . -1//3 -1//3  1//3     .  2//3 -1//3│\n│(g₃,ζ₃²)│  ζ₃² 1//3     . -1//3 -1//3  1//3     . -1//3  2//3│\n└────────┴────────────────────────────────────────────────────┘")
@test mytest("Families.jl","charnames(uc)[uc.families[1].charNumbers]","8-element Vector{String}:\n \"phi2,1\"\n \"phi2,2\"\n \"phi1,3''\"\n \"phi1,3'\"\n \"G2[1]\"\n \"G2[-1]\"\n \"G2[E3]\"\n \"G2[E3^2]\"")
@test mytest("Families.jl","Family(\"C2\")","Family(C₂,4)\nDrinfeld double D(ℤ/2)\n┌──────┬────────────────────────────┐\n│label │eigen                       │\n├──────┼────────────────────────────┤\n│(1,1) │    1 1//2  1//2  1//2  1//2│\n│(g₂,1)│    1 1//2  1//2 -1//2 -1//2│\n│(1,ε) │    1 1//2 -1//2  1//2 -1//2│\n│(g₂,ε)│   -1 1//2 -1//2 -1//2  1//2│\n└──────┴────────────────────────────┘")
@test mytest("Families.jl","Family(\"C2\",4:7,Dict(:signs=>[1,-1,1,-1]))","Family(C₂,4:7)\nDrinfeld double D(ℤ/2)\n┌──────┬──────────────────────────────────┐\n│label │eigen signs                       │\n├──────┼──────────────────────────────────┤\n│(1,1) │    1     1  1//2 -1//2 1//2 -1//2│\n│(g₂,1)│    1    -1 -1//2  1//2 1//2 -1//2│\n│(1,ε) │    1     1  1//2  1//2 1//2  1//2│\n│(g₂,ε)│   -1    -1 -1//2 -1//2 1//2  1//2│\n└──────┴──────────────────────────────────┘")
@test mytest("Families.jl","f=UnipotentCharacters(complex_reflection_group(3,1,1)).families[2]","Family(0011,[4, 3, 2])\nimprimitive family\n┌─────┬──────────────────────────────┐\n│label│eigen      1        2        3│\n├─────┼──────────────────────────────┤\n│1    │  ζ₃²  √-3/3    √-3/3   -√-3/3│\n│2    │    1  √-3/3 ζ₃²√-3/3 -ζ₃√-3/3│\n│3    │    1 -√-3/3 -ζ₃√-3/3 ζ₃²√-3/3│\n└─────┴──────────────────────────────┘")
@test mytest("Families.jl","galois(f,-1)","Family(conj(0011),[4, 3, 2])\nconj(imprimitive family)\n┌─────┬──────────────────────────────┐\n│label│eigen      1        2        3│\n├─────┼──────────────────────────────┤\n│1    │   ζ₃ -√-3/3   -√-3/3    √-3/3│\n│2    │    1 -√-3/3 -ζ₃√-3/3 ζ₃²√-3/3│\n│3    │    1  √-3/3 ζ₃²√-3/3 -ζ₃√-3/3│\n└─────┴──────────────────────────────┘")
@test mytest("Families.jl","f=UnipotentCharacters(complex_reflection_group(3,1,1)).families[2]","Family(0011,[4, 3, 2])\nimprimitive family\n┌─────┬──────────────────────────────┐\n│label│eigen      1        2        3│\n├─────┼──────────────────────────────┤\n│1    │  ζ₃²  √-3/3    √-3/3   -√-3/3│\n│2    │    1  √-3/3 ζ₃²√-3/3 -ζ₃√-3/3│\n│3    │    1 -√-3/3 -ζ₃√-3/3 ζ₃²√-3/3│\n└─────┴──────────────────────────────┘")
@test mytest("Families.jl","invpermute(f,Perm(1,2,3))","Family(0011,[2, 4, 3])\nPermuted((1,2,3),imprimitive family)\n┌─────┬──────────────────────────────┐\n│label│eigen        3      1        2│\n├─────┼──────────────────────────────┤\n│3    │    1 ζ₃²√-3/3 -√-3/3 -ζ₃√-3/3│\n│1    │  ζ₃²   -√-3/3  √-3/3    √-3/3│\n│2    │    1 -ζ₃√-3/3  √-3/3 ζ₃²√-3/3│\n└─────┴──────────────────────────────┘")
@test mytest("Families.jl","Families.ndrinfeld_double(complex_reflection_group(5))","378")
@test mytest("Families.jl","family_imprimitive([[0,1],[1],[0]])","Family(0011,3)\nimprimitive family\n┌─────┬──────────────────────────────┐\n│label│eigen      1        2        3│\n├─────┼──────────────────────────────┤\n│1    │  ζ₃²  √-3/3   -√-3/3    √-3/3│\n│2    │    1 -√-3/3 ζ₃²√-3/3 -ζ₃√-3/3│\n│3    │    1  √-3/3 -ζ₃√-3/3 ζ₃²√-3/3│\n└─────┴──────────────────────────────┘")
@test mytest("Families.jl","FamiliesClassical(symbols(2,3))","6-element Vector{Family}:\n Family(112,[2])\n Family(022,[6])\n Family(3,[9])\n Family(01123,[1, 3, 8, 11])\n Family(0112233,[4])\n Family(013,[5, 7, 10, 12])")
@test mytest("Families.jl","W=complex_reflection_group(4)","G₄")
@test mytest("Families.jl","uc=UnipotentCharacters(W);f=uc.families[4];","nothing")
@test mytest("Families.jl","A=fusion_algebra(fourier(f),1)","Fusion Algebra dim.5")
@test mytest("Families.jl","b=basis(A)","5-element Vector{AlgebraElt{Chevie.Families.FusionAlgebra, Int64}}:\n B₁\n B₂\n B₃\n B₄\n B₅")
@test mytest("Families.jl","b*permutedims(b)","5×5 Matrix{AlgebraElt{Chevie.Families.FusionAlgebra, Int64}}:\n B₁  B₂      B₃      B₄        B₅\n B₂  -B₄+B₅  B₁+B₄   B₂-B₃     B₃\n B₃  B₁+B₄   -B₄+B₅  -B₂+B₃    B₂\n B₄  B₂-B₃   -B₂+B₃  B₁+B₄-B₅  -B₄\n B₅  B₃      B₂      -B₄       B₁")
@test mytest("Families.jl","CharTable(A)","CharTable(Fusion Algebra dim.5)\n┌─┬─────────────────┐\n│ │1    2    3  4  5│\n├─┼─────────────────┤\n│1│1  √-3 -√-3  2 -1│\n│2│1    1    1  .  1│\n│3│1   -1   -1  .  1│\n│4│1    .    . -1 -1│\n│5│1 -√-3  √-3  2 -1│\n└─┴─────────────────┘")
end
@testset "Format.jl" begin
@test mytest("Format.jl","s=\"E_6[\\\\zeta_3]:\\\\phi_{1,6}\"","\"E_6[\\\\zeta_3]:\\\\phi_{1,6}\"")
@test mytest("Format.jl","fromTeX(rio(),s)","\"E₆[ζ₃]:φ₁‚₆\"")
@test mytest("Format.jl","fromTeX(stdout,s)","\"E6[E3]:phi1,6\"")
@test mytest("Format.jl","ordinal(201)","\"201st\"")
@test mytest("Format.jl","ordinal(202)","\"202nd\"")
@test mytest("Format.jl","ordinal(203)","\"203rd\"")
@test mytest("Format.jl","ordinal(204)","\"204th\"")
@test mytest("Format.jl","joindigits([1,9,3,5])","\"1935\"")
@test mytest("Format.jl","joindigits([1,10,3,5])","\"(1,10,3,5)\"")
@test mytest("Format.jl","joindigits([1,10,3,5],\"[]\";sep=\"-\")","\"[1-10-3-5]\"")
end
@testset "GAPENV.jl" begin
end
@testset "Garside.jl" begin
@test mytest("Garside.jl","W=coxgroup(:A,4)","A₄")
@test mytest("Garside.jl","B=BraidMonoid(W)","BraidMonoid(A₄)")
@test mytest("Garside.jl","w=B(1,2,3,4)","1234")
@test mytest("Garside.jl","w^3","121321432.343")
@test mytest("Garside.jl","word(α(w^3))","9-element Vector{Int64}:\n 1\n 2\n 1\n 3\n 2\n 1\n 4\n 3\n 2")
@test mytest("Garside.jl","w^4","Δ.232432")
@test mytest("Garside.jl","inv(w)","(1234)⁻¹")
@test mytest("Garside.jl","xrepr(w^-1,greedy=true,limit=true)","\"Δ⁻¹.232432\"")
@test mytest("Garside.jl","repr(w)","\"B(1,2,3,4)\"")
@test mytest("Garside.jl","repr(w^3)","\"B(1,2,1,3,2,1,4,3,2,3,4,3)\"")
@test mytest("Garside.jl","repr(w^-1)","\"B(-4,-3,-2,-1)\"")
@test mytest("Garside.jl","b=B(2,1,4,1,4)","214.14")
@test mytest("Garside.jl","c=B(1,4,1,4,3)","14.143")
@test mytest("Garside.jl","d=conjugating_elt(b,c)","(1)⁻¹21321432")
@test mytest("Garside.jl","b^d","14.143")
@test mytest("Garside.jl","centralizer_gens(b)","3-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}}}:\n 321432.213243\n 21.1\n 4")
@test mytest("Garside.jl","C=conjcat(b;ss=Val(:ss))","category with 10 objects and 32 generating maps")
@test mytest("Garside.jl","C.obj","10-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}}}:\n 1214.4\n 214.14\n 124.24\n 1343.1\n 14.124\n 143.13\n 24.214\n 134.14\n 13.134\n 14.143")
@test mytest("Garside.jl","word(W,preferred_prefix(b))","2-element Vector{Int64}:\n 2\n 1")
@test mytest("Garside.jl","b^B(preferred_prefix(b))","1214.4")
@test mytest("Garside.jl","b1=b^B(preferred_prefix(b))","1214.4")
@test mytest("Garside.jl","C=conjcat(b)","category with 2 objects and 6 generating maps")
@test mytest("Garside.jl","C.obj","2-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}}}:\n 1214.4\n 1343.1")
@test mytest("Garside.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Garside.jl","B=BraidMonoid(W)","BraidMonoid(A₃)")
@test mytest("Garside.jl","Pi=B(B.δ)^2","Δ²")
@test mytest("Garside.jl","root(Pi,2)","Δ")
@test mytest("Garside.jl","root(Pi,3)","1232")
@test mytest("Garside.jl","root(Pi,4)","132")
@test mytest("Garside.jl","B=BraidMonoid(coxgroup(:A,3))","BraidMonoid(A₃)")
@test mytest("Garside.jl","word(B,B.δ)","6-element Vector{Int64}:\n 1\n 2\n 1\n 3\n 2\n 1")
@test mytest("Garside.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Garside.jl","B=BraidMonoid(W)","BraidMonoid(A₃)")
@test mytest("Garside.jl","map(x->B.(x),left_divisors(B,W(1,3,2)))","4-element Vector{Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}}}}:\n [.]\n [1, 3]\n [13]\n [132]")
@test mytest("Garside.jl","B=DualBraidMonoid(W)","DualBraidMonoid(A₃,c=[1, 3, 2])")
@test mytest("Garside.jl","map(x->B.(x),left_divisors(B,W(1,3,2)))","4-element Vector{Vector{GarsideElt{Perm{Int16}, DualBraidMonoid{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}}}}:\n [.]\n [1, 2, 3, 4, 5, 6]\n [12, 13, 15, 25, 34, 45]\n [δ]")
@test mytest("Garside.jl","M=BraidMonoid(coxgroup(:A,2))","BraidMonoid(A₂)")
@test mytest("Garside.jl","elements(M,4)","12-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}}}:\n Δ.1\n Δ.2\n 12.21\n 12.2.2\n 1.12.2\n 1.1.12\n 1.1.1.1\n 21.12\n 21.1.1\n 2.21.1\n 2.2.21\n 2.2.2.2")
@test mytest("Garside.jl","B=DualBraidMonoid(coxsym(4))","DualBraidMonoid(𝔖 ₄,c=[1, 3, 2])")
@test mytest("Garside.jl","left_divisors(B(1,5,4,3))","10-element Vector{GarsideElt{Perm{Int16}, DualBraidMonoid{Perm{Int16}, CoxSym{Int16}}}}:\n .\n 1\n 1.4\n 1.4.2\n 1.4.3\n 5\n 6\n 15\n 15.4\n 15.4.3")
@test mytest("Garside.jl","left_divisors(B(1,5,4,3),1)","3-element Vector{GarsideElt{Perm{Int16}, DualBraidMonoid{Perm{Int16}, CoxSym{Int16}}}}:\n 1\n 5\n 6")
@test mytest("Garside.jl","W=coxgroup(:E,8);B=BraidMonoid(W)","BraidMonoid(E₈)")
@test mytest("Garside.jl","w=B(2,3,4,2,3,4,5,4,2,3,4,5,6,5,4,2,3,4,5,6,7,6,5,4,2,3,4,5,6,7,8)","2342345423456542345676542345678")
@test mytest("Garside.jl","Brieskorn_normal_form(w)","2-element Vector{Vector{Int64}}:\n [2, 3, 4, 5, 6, 7]\n [8]")
@test mytest("Garside.jl","Brieskorn_normal_form(w^2)","2-element Vector{Vector{Int64}}:\n [2, 3, 4, 5, 6, 7, 8]\n [2, 3, 4, 5, 6]")
@test mytest("Garside.jl","B=BraidMonoid(coxgroup(:A,3))","BraidMonoid(A₃)")
@test mytest("Garside.jl","b=B( 2, 1, -3, 1, 1)","(23)⁻¹321.1.1")
@test mytest("Garside.jl","fraction(b)","(23, 321.1.1)")
@test mytest("Garside.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Garside.jl","b=BraidMonoid(W)(2,1,2,1,1)","121.1.1")
@test mytest("Garside.jl","α(b)","121")
@test mytest("Garside.jl","W=coxgroup(:A,4);B=BraidMonoid(W)","BraidMonoid(A₄)")
@test mytest("Garside.jl","w0=B(longest(W))","Δ")
@test mytest("Garside.jl","α(w0,[1,2,3])","121321")
@test mytest("Garside.jl","B=BraidMonoid(coxgroup(:A,3))","BraidMonoid(A₃)")
@test mytest("Garside.jl","b=B(2,1,2,1,1)*inv(B(2,2))","(21)⁻¹1.12.21")
@test mytest("Garside.jl","word(b)","7-element Vector{Int64}:\n -1\n -2\n  1\n  1\n  2\n  2\n  1")
@test mytest("Garside.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Garside.jl","B=BraidMonoid(W)","BraidMonoid(A₃)")
@test mytest("Garside.jl","leftgcdc(B(2,1,2)^2,B(3,2)^2)","(2, (121.21, 32.2))")
@test mytest("Garside.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Garside.jl","B=BraidMonoid(W)","BraidMonoid(A₃)")
@test mytest("Garside.jl","rightgcdc(B(2,1,2)^2,B(3,2)^2)","(2.2, (12.21, 23))")
@test mytest("Garside.jl","B=BraidMonoid(coxgroup(:A,3))","BraidMonoid(A₃)")
@test mytest("Garside.jl","leftlcmc(B(2,1,2)^2,B(3,2)^2)","(Δ.121, (123, 23.321))")
@test mytest("Garside.jl","B=BraidMonoid(coxgroup(:A,3))","BraidMonoid(A₃)")
@test mytest("Garside.jl","rightlcmc(B(2,1,2)^2,B(3,2)^2)","(Δ², (321.123, 12321.321))")
@test mytest("Garside.jl","W=coxsym(4)","𝔖 ₄")
@test mytest("Garside.jl","b=BraidMonoid(W)(2,1,2,1,1)","121.1.1")
@test mytest("Garside.jl","p=image(b)","(1,3)")
@test mytest("Garside.jl","word(W,p)","3-element Vector{Int64}:\n 1\n 2\n 1")
@test mytest("Garside.jl","W=coxgroup(:A,2)","A₂")
@test mytest("Garside.jl","pi=BraidMonoid(W)(longest(W))^2","Δ²")
@test mytest("Garside.jl","words(pi)","8-element Vector{Vector{Int64}}:\n [1, 1, 2, 1, 1, 2]\n [1, 2, 1, 1, 2, 1]\n [1, 2, 1, 2, 1, 2]\n [1, 2, 2, 1, 2, 2]\n [2, 1, 1, 2, 1, 1]\n [2, 1, 2, 1, 2, 1]\n [2, 1, 2, 2, 1, 2]\n [2, 2, 1, 2, 2, 1]")
@test mytest("Garside.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Garside.jl","B=DualBraidMonoid(W)","DualBraidMonoid(A₃,c=[1, 3, 2])")
@test mytest("Garside.jl","B(2,1,2,1,1)","12.1.1.1")
@test mytest("Garside.jl","B(-1,-2,-3,1,1)","(25.1)⁻¹1.1")
@test mytest("Garside.jl","W=crg(4)","G₄")
@test mytest("Garside.jl","B=DualBraidMonoid(W)","DualBraidMonoid(G₄,c=[1, 2])")
@test mytest("Garside.jl","left_divisors(B(B.δ))","5-element Vector{GarsideElt{Perm{Int16}, DualBraidMonoid{Perm{Int16}, PRG{Cyc{Rational{Int64}}, Int16}}}}:\n .\n 1\n 2\n 3\n δ")
@test mytest("Garside.jl","W=coxgroup(:E,8);M=DualBraidMonoid(W)","DualBraidMonoid(E₈,c=[1, 4, 6, 8, 3, 2, 5, 7])")
@test mytest("Garside.jl","s4=left_divisors(M,M.δ,4);","nothing")
@test mytest("Garside.jl","s=M(s4[findfirst(x->x*δad(M,x,8)==M.δ,s4)])","(1 8 17 35)")
@test mytest("Garside.jl","\"the right-lcms of the `δⁱ`-orbits on `leftdescents(b)`\"\n       function satoms(b,i)\n         M=b.M\n         ld=M.atoms[leftdescents(b)]\n         di=Perm(ld,δad.(Ref(M),ld,i))\n         if isnothing(di) error(b,\" is not δ^\\\$i-stable\") end\n         map(o->M(rightlcm(M,ld[o]...)),orbits(di,eachindex(ld)))\n       end","satoms")
@test mytest("Garside.jl","Category(x->satoms(x,15),s;action=(o,m)->inv(m)*o*δad(m,8))","category with 88 objects and 660 generating maps")
@test mytest("Garside.jl","W=coxsym(4);M=BraidMonoid(W)","BraidMonoid(𝔖 ₄)")
@test mytest("Garside.jl","endomorphisms(conjcat(M(1,1,2,2,3)),1)","2-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, CoxSym{Int16}}}}:\n 213.1232\n 12.213")
@test mytest("Garside.jl","W=coxgroup(:A,4)","A₄")
@test mytest("Garside.jl","w=BraidMonoid(W)(4,3,3,2,1)","43.321")
@test mytest("Garside.jl","C=conjcat(w)","category with 2 objects and 4 generating maps")
@test mytest("Garside.jl","C.obj","2-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}}}:\n 32143\n 21324")
@test mytest("Garside.jl","conjcat(w;ss=Val(:ss)).obj","4-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}}}:\n 32143\n 13243\n 21432\n 21324")
@test mytest("Garside.jl","W=coxgroup(:D,4)","D₄")
@test mytest("Garside.jl","B=BraidMonoid(W)","BraidMonoid(D₄)")
@test mytest("Garside.jl","b=B(2,3,1,2,4,3)","231243")
@test mytest("Garside.jl","b1=B(1,4,3,2,2,2)","1432.2.2")
@test mytest("Garside.jl","conjugating_elt(b,b1)","(134312.23)⁻¹")
@test mytest("Garside.jl","c=conjugating_elt(b,b1;ss=Val(:cyc))","232.2")
@test mytest("Garside.jl","b^c","1432.2.2")
@test mytest("Garside.jl","WF=spets(W,Perm(1,2,4))","³D₄")
@test mytest("Garside.jl","F=Frobenius(WF);","nothing")
@test mytest("Garside.jl","c=B(3,4,3,1,2,3)","343123")
@test mytest("Garside.jl","conjugating_elt(b,c,F)","124312")
@test mytest("Garside.jl","^(b,B(1,2,4,3,1,2),F)","343123")
@test mytest("Garside.jl","W=coxgroup(:D,4)","D₄")
@test mytest("Garside.jl","B=BraidMonoid(W)","BraidMonoid(D₄)")
@test mytest("Garside.jl","w=B(4,4,4)","4.4.4")
@test mytest("Garside.jl","cc=centralizer_gens(w)","8-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}}}:\n 1\n (31432)⁻¹231432\n (1)⁻¹34.431\n (2)⁻¹34.432\n (32431)⁻¹132431\n 4\n 34.43\n 2")
@test mytest("Garside.jl","shrink(cc)","5-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}}}:\n 4\n 2\n 1\n 34.43\n (3243)⁻¹13243")
@test mytest("Garside.jl","centralizer_gens(w;ss=Val(:cyc))","1-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}}}:\n 4")
@test mytest("Garside.jl","F=Frobenius(spets(W,Perm(1,2,4)));","nothing")
@test mytest("Garside.jl","centralizer_gens(w,F)","2-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}}}:\n 124\n 312343123")
@test mytest("Garside.jl","M=DualBraidMonoid(coxgroup(:A,3))","DualBraidMonoid(A₃,c=[1, 3, 2])")
@test mytest("Garside.jl","p=Presentation(M)","Presentation: 6 generators, 15 relators, total length 62")
@test mytest("Garside.jl","B=BraidMonoid(coxsym(3))","BraidMonoid(𝔖 ₃)")
@test mytest("Garside.jl","b=[B(1)^3,B(2)^3,B(-2,-1,-1,2,2,2,2,1,1,2),B(1,1,1,2)]","4-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, CoxSym{Int16}}}}:\n 1.1.1\n 2.2.2\n (1.12)⁻¹2.2.2.21.12\n 1.1.12")
@test mytest("Garside.jl","shrink(b)","2-element Vector{GarsideElt{Perm{Int16}, BraidMonoid{Perm{Int16}, CoxSym{Int16}}}}:\n 2\n 1")
end
@testset "Gt.jl" begin
@test mytest("Gt.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Gt.jl","closed_subsystems(W)","1 2<1 4<4<∅\n1 2<1 5<1<∅\n1 2<2 6<6<∅\n1 2<3 5<5<∅\n1 4<1\n1 5<6\n1 5<5\n2 6<2<∅\n3 5<3<∅")
@test mytest("Gt.jl","t=ClassTypes(rootdatum(:sl,3))","ClassTypes(A₂,good characteristic)\n┌──────────┬─────────┐\n│C_G(s)    │ |C_G(s)|│\n├──────────┼─────────┤\n│A₂₍₎=Φ₁²  │      Φ₁²│\n│A₂₍₎=Φ₁Φ₂ │     Φ₁Φ₂│\n│A₂₍₎=Φ₃   │       Φ₃│\n│A₂₍₁₎=A₁Φ₁│   qΦ₁²Φ₂│\n│A₂        │q³Φ₁²Φ₂Φ₃│\n└──────────┴─────────┘")
end
@testset "HeckeAlgebras.jl" begin
@test mytest("HeckeAlgebras.jl","W=coxgroup(:A,2)","A₂")
@test mytest("HeckeAlgebras.jl","H=hecke(W,0)","hecke(A₂,0)")
@test mytest("HeckeAlgebras.jl","T=Tbasis(H);","nothing")
@test mytest("HeckeAlgebras.jl","b=T.(elements(W))","6-element Vector{HeckeTElt{HeckeAlgebra{Int64, Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}, Int64, Perm{Int16}}}:\n T.\n T₁\n T₂\n T₁₂\n T₂₁\n T₁₂₁")
@test mytest("HeckeAlgebras.jl","b*permutedims(b)","6×6 Matrix{HeckeTElt{HeckeAlgebra{Int64, Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Int64}}, Int64, Perm{Int16}}}:\n T.    T₁     T₂     T₁₂    T₂₁    T₁₂₁\n T₁    -T₁    T₁₂    -T₁₂   T₁₂₁   -T₁₂₁\n T₂    T₂₁    -T₂    T₁₂₁   -T₂₁   -T₁₂₁\n T₁₂   T₁₂₁   -T₁₂   -T₁₂₁  -T₁₂₁  T₁₂₁\n T₂₁   -T₂₁   T₁₂₁   -T₁₂₁  -T₁₂₁  T₁₂₁\n T₁₂₁  -T₁₂₁  -T₁₂₁  T₁₂₁   T₁₂₁   -T₁₂₁")
@test mytest("HeckeAlgebras.jl","H=hecke(W,Pol(:q))","hecke(A₂,q)")
@test mytest("HeckeAlgebras.jl","T=Tbasis(H);","nothing")
@test mytest("HeckeAlgebras.jl","h=T(1,2)^2","qT₂₁+(q-1)T₁₂₁")
@test mytest("HeckeAlgebras.jl","length(h)","2")
@test mytest("HeckeAlgebras.jl","h[W(2,1)]","Pol{Int64}: q")
@test mytest("HeckeAlgebras.jl","collect(h)","2-element Vector{Any}:\n  (1,2,6)(3,4,5) => q\n (1,5)(2,4)(3,6) => q-1")
@test mytest("HeckeAlgebras.jl","collect(values(h))","2-element Vector{Pol{Int64}}:\n q\n q-1")
@test mytest("HeckeAlgebras.jl","collect(keys(h))","2-element Vector{Perm{Int16}}:\n (1,2,6)(3,4,5)\n (1,5)(2,4)(3,6)")
@test mytest("HeckeAlgebras.jl","h[W(2,1)]=Pol(3)","Pol{Int64}: 3")
@test mytest("HeckeAlgebras.jl","h","3T₂₁+(q-1)T₁₂₁")
@test mytest("HeckeAlgebras.jl","W=coxgroup(:B,2)","B₂")
@test mytest("HeckeAlgebras.jl","@Pol q","Pol{Int64}: q")
@test mytest("HeckeAlgebras.jl","H=hecke(W,q)","hecke(B₂,q)")
@test mytest("HeckeAlgebras.jl","H.para","2-element Vector{Vector{Pol{Int64}}}:\n [q, -1]\n [q, -1]")
@test mytest("HeckeAlgebras.jl","H=hecke(W,q^2,rootpara=-q)","hecke(B₂,q²,rootpara=-q)")
@test mytest("HeckeAlgebras.jl","H=hecke(W,q^2)","hecke(B₂,q²)")
@test mytest("HeckeAlgebras.jl","rootpara(H)","2-element Vector{Pol{Int64}}:\n q\n q")
@test mytest("HeckeAlgebras.jl","H","hecke(B₂,q²,rootpara=q)")
@test mytest("HeckeAlgebras.jl","H=hecke(W,[q^2,q^4],rootpara=[q,q^2])","hecke(B₂,Pol{Int64}[q², q⁴],rootpara=Pol{Int64}[q, q²])")
@test mytest("HeckeAlgebras.jl","H.para,rootpara(H)","(Vector{Pol{Int64}}[[q², -1], [q⁴, -1]], Pol{Int64}[q, q²])")
@test mytest("HeckeAlgebras.jl","H=hecke(W,9,rootpara=3)","hecke(B₂,9,rootpara=3)")
@test mytest("HeckeAlgebras.jl","H.para,rootpara(H)","([[9, -1], [9, -1]], [3, 3])")
@test mytest("HeckeAlgebras.jl","@Mvp x,y,z,t","nothing")
@test mytest("HeckeAlgebras.jl","H=hecke(W,[[x,y]])","hecke(B₂,Vector{Mvp{Int64, Int64}}[[x, y]])")
@test mytest("HeckeAlgebras.jl","rootpara(H);H","hecke(B₂,Vector{Mvp{Int64, Int64}}[[x, y]],rootpara=ζ₄x½y½)")
@test mytest("HeckeAlgebras.jl","H=hecke(W,[[x,y],[z,t]])","hecke(B₂,Vector{Mvp{Int64, Int64}}[[x, y], [z, t]])")
@test mytest("HeckeAlgebras.jl","rootpara(H);H","hecke(B₂,Vector{Mvp{Int64, Int64}}[[x, y], [z, t]],rootpara=Mvp{Cyc{Int64}, Rational{Int64}}[ζ₄x½y½, ζ₄t½z½])")
@test mytest("HeckeAlgebras.jl","hecke(coxgroup(:F,4),(q,q^2)).para","4-element Vector{Vector{Pol{Int64}}}:\n [q, -1]\n [q, -1]\n [q², -1]\n [q², -1]")
@test mytest("HeckeAlgebras.jl","hecke(complex_reflection_group(3,1,2),q).para","2-element Vector{Vector{Pol{Cyc{Int64}}}}:\n [q, ζ₃, ζ₃²]\n [q, -1]")
@test mytest("HeckeAlgebras.jl","H=hecke(crg(4),Pol())","hecke(G₄,q)")
@test mytest("HeckeAlgebras.jl","CharTable(H)","CharTable(hecke(G₄,q))\n┌────┬──────────────────────────────────────┐\n│    │.    z 212   12    z12     1        1z│\n├────┼──────────────────────────────────────┤\n│φ₁‚₀│1   q⁶  q³   q²     q⁸     q        q⁷│\n│φ₁‚₄│1    1   1  ζ₃²    ζ₃²    ζ₃        ζ₃│\n│φ₁‚₈│1    1   1   ζ₃     ζ₃   ζ₃²       ζ₃²│\n│φ₂‚₅│2   -2   .    1     -1    -1         1│\n│φ₂‚₃│2 -2q³   . ζ₃²q -ζ₃²q⁴ q+ζ₃² -q⁴-ζ₃²q³│\n│φ₂‚₁│2 -2q³   .  ζ₃q  -ζ₃q⁴  q+ζ₃  -q⁴-ζ₃q³│\n│φ₃‚₂│3  3q²  -q    .      .   q-1     q³-q²│\n└────┴──────────────────────────────────────┘")
@test mytest("HeckeAlgebras.jl","W=crg(24)","G₂₄")
@test mytest("HeckeAlgebras.jl","H=hecke(W,Pol(:q))","hecke(G₂₄,q)")
@test mytest("HeckeAlgebras.jl","representation(H,3)","3-element Vector{Matrix{Pol{Cyc{Int64}}}}:\n [q 0 0; -q -1 0; -q 0 -1]\n [-1 0 -1; 0 -1 ((1-√-7)/2)q; 0 0 q]\n [-1 -1 0; 0 q 0; 0 (1+√-7)/2 -1]")
@test mytest("HeckeAlgebras.jl","H=hecke(coxgroup(:D,5),Pol())","hecke(D₅,q)")
@test mytest("HeckeAlgebras.jl","representation(H,7)","5-element Vector{Matrix{Frac{Pol{Int64}}}}:\n [q 0 0 0; 0 -1 0 0; 0 0 -1 0; 0 0 0 -1]\n [q 0 0 0; 0 -1 0 0; 0 0 -1 0; 0 0 0 -1]\n [1/(-q-1) q/(q+1) 0 0; (q²+q+1)/(q+1) q²/(q+1) 0 0; 0 0 -1 0; 0 0 0 -1]\n [-1 0 0 0; 0 1/(-q²-q-1) (-q²-q)/(-q²-q-1) 0; 0 (q³+q²+q+1)/(q²+q+1) q³/(q²+q+1) 0; 0 0 0 -1]\n [-1 0 0 0; 0 -1 0 0; 0 0 1/(-q³-q²-q-1) (-q³-q²-q)/(-q³-q²-q-1); 0 0 (q⁴+q³+q²+q+1)/(q³+q²+q+1) q⁴/(q³+q²+q+1)]")
@test mytest("HeckeAlgebras.jl","H=hecke(coxgroup(:F,4))","hecke(F₄,1)")
@test mytest("HeckeAlgebras.jl","isrepresentation(H,reflrep(H))","true")
@test mytest("HeckeAlgebras.jl","isrepresentation(H,Tbasis(H).(1:4))","true")
@test mytest("HeckeAlgebras.jl","W=coxgroup(:B,2);H=hecke(W,Pol(:q))","hecke(B₂,q)")
@test mytest("HeckeAlgebras.jl","reflrep(H)","2-element Vector{Matrix{Pol{Int64}}}:\n [-1 0; -q q]\n [q -2; 0 -1]")
@test mytest("HeckeAlgebras.jl","H=hecke(coxgroup(:H,3))","hecke(H₃,1)")
@test mytest("HeckeAlgebras.jl","reflrep(H)","3-element Vector{Matrix{Cyc{Int64}}}:\n [-1 0 0; -1 1 0; 0 0 1]\n [1 (-3-√5)/2 0; 0 -1 0; 0 -1 1]\n [1 0 0; 0 1 -1; 0 0 -1]")
@test mytest("HeckeAlgebras.jl","W=coxgroup(:H,3)","H₃")
@test mytest("HeckeAlgebras.jl","H=hecke(W,Pol(:q)^2)","hecke(H₃,q²)")
@test mytest("HeckeAlgebras.jl","g=Wgraph(W,3)","2-element Vector{Vector{Vector{Any}}}:\n [[2], [1, 2], [1, 3], [1, 3], [2, 3]]\n [[-1, [[1, 3], [2, 4], [3, 5], [4, 5]]]]")
@test mytest("HeckeAlgebras.jl","WGraphToRepresentation(H,g)","3-element Vector{Matrix{Pol{Int64}}}:\n [q² 0 … 0 0; 0 -1 … 0 0; … ; 0 0 … -1 q; 0 0 … 0 q²]\n [-1 0 … 0 0; 0 -1 … q 0; … ; 0 0 … q² 0; 0 0 … q -1]\n [q² 0 … 0 0; 0 q² … 0 0; … ; 0 q … -1 0; 0 0 … 0 -1]")
@test mytest("HeckeAlgebras.jl","H=hecke(coxgroup(:H,3),Pol(:q))","hecke(H₃,q)")
@test mytest("HeckeAlgebras.jl","central_monomials(H)","10-element Vector{Pol{Cyc{Int64}}}:\n 1\n q³⁰\n q¹²\n q¹⁸\n q¹⁰\n q¹⁰\n q²⁰\n q²⁰\n q¹⁵\n q¹⁵")
@test mytest("HeckeAlgebras.jl","H=hecke(coxgroup(:A,2),Pol(:q))","hecke(A₂,q)")
@test mytest("HeckeAlgebras.jl","T=Tbasis(H);T(longest(H.W))^2","q³T.+(q³-2q²+q)T₂₁+(q³-q²)T₂+(q³-q²)T₁+(q³-2q²+2q-1)T₁₂₁+(q³-2q²+q)T₁₂")
@test mytest("HeckeAlgebras.jl","W=crg(3,1,1)","G₃‚₁‚₁")
@test mytest("HeckeAlgebras.jl","H=hecke(crg(3,1,1),Pol(:q))","hecke(G₃‚₁‚₁,q)")
@test mytest("HeckeAlgebras.jl","T=Tbasis(H);T(1)^3","(q-1)T.+(q-1)T₁+qT₁₁")
@test mytest("HeckeAlgebras.jl","W=coxgroup(:G,2);H=hecke(W,Pol(:q))","hecke(G₂,q)")
@test mytest("HeckeAlgebras.jl","T=Tbasis(H);h=T(1,2)*T(2,1)","q²T.+(q²-q)T₁+(q-1)T₁₂₁")
@test mytest("HeckeAlgebras.jl","alt(h)","q⁻²T.+(q⁻²-q⁻³)T₁+(q⁻³-q⁻⁴)T₁₂₁")
@test mytest("HeckeAlgebras.jl","W=coxsym(4)","𝔖 ₄")
@test mytest("HeckeAlgebras.jl","H=hecke(W,Pol(:q))","hecke(𝔖 ₄,q)")
@test mytest("HeckeAlgebras.jl","h=Tbasis(H,longest(W))","T₁₂₁₃₂₁")
@test mytest("HeckeAlgebras.jl","p=class_polynomials(h)","5-element Vector{Pol{Int64}}:\n 0\n 0\n q²\n q³-2q²+q\n q³-q²+q-1")
@test mytest("HeckeAlgebras.jl","W=coxgroup(:B,2)","B₂")
@test mytest("HeckeAlgebras.jl","H=hecke(W,q^2;rootpara=q)","hecke(B₂,q²,rootpara=q)")
@test mytest("HeckeAlgebras.jl","char_values(Cpbasis(H)(1,2,1))","5-element Vector{Pol{Int64}}:\n -q-q⁻¹\n q+q⁻¹\n 0\n q³+2q+2q⁻¹+q⁻³\n 0")
@test mytest("HeckeAlgebras.jl","W=crg(4)","G₄")
@test mytest("HeckeAlgebras.jl","H=hecke(W,Pol(:q))","hecke(G₄,q)")
@test mytest("HeckeAlgebras.jl","char_values(H,[2,1,2])","7-element Vector{Pol{Cyc{Int64}}}:\n q³\n 1\n 1\n 0\n 0\n 0\n -q")
@test mytest("HeckeAlgebras.jl","H=hecke(complex_reflection_group(4),Pol(:q))","hecke(G₄,q)")
@test mytest("HeckeAlgebras.jl","s=schur_elements(H)","7-element Vector{Pol{Cyc{Rational{Int64}}}}:\n q⁸+2q⁷+3q⁶+4q⁵+4q⁴+4q³+3q²+2q+1\n 2√-3+(6+4√-3)q⁻¹+12q⁻²+(6-4√-3)q⁻³-2√-3q⁻⁴\n -2√-3+(6-4√-3)q⁻¹+12q⁻²+(6+4√-3)q⁻³+2√-3q⁻⁴\n 2+2q⁻¹+4q⁻²+2q⁻³+2q⁻⁴\n ζ₃²√-3q³+(3-√-3)q²+3q+3+√-3-ζ₃√-3q⁻¹\n -ζ₃√-3q³+(3+√-3)q²+3q+3-√-3+ζ₃²√-3q⁻¹\n q²+2q+2+2q⁻¹+q⁻²")
@test mytest("HeckeAlgebras.jl","CycPol.(s)","7-element Vector{CycPol{Cyc{Rational{Int64}}}}:\n Φ₂²Φ₃Φ₄Φ₆\n 2√-3q⁻⁴Φ₂²Φ′₃Φ′₆\n -2√-3q⁻⁴Φ₂²Φ″₃Φ″₆\n 2q⁻⁴Φ₃Φ₄\n ζ₃²√-3q⁻¹Φ₂²Φ′₃Φ″₆\n -ζ₃√-3q⁻¹Φ₂²Φ″₃Φ′₆\n q⁻²Φ₂²Φ₄")
@test mytest("HeckeAlgebras.jl","@Mvp x,y; W=crg(4); H=hecke(W,[[1,x,y]])","hecke(G₄,Vector{Mvp{Int64, Int64}}[[1, x, y]])")
@test mytest("HeckeAlgebras.jl","p=factorized_schur_element(H,[[2,5]])","-x⁻¹y(xy+1)(x-1)Φ₆(xy⁻¹)(y-1)")
@test mytest("HeckeAlgebras.jl","q=p(;x=E(3))","ζ₃²√-3y⁻¹Φ₁Φ₂Φ′₆²(y)")
@test mytest("HeckeAlgebras.jl","q(;y=2//1)","-9√-3/2")
@test mytest("HeckeAlgebras.jl","HeckeAlgebras.expand(p)","Mvp{Cyc{Rational{Int64}},Rational{Int64}}: -x³y+x³+x²y²-2x²+x²y⁻¹-xy³+2xy-xy⁻¹+y³-2y²+1+x⁻¹y²-x⁻¹y")
@test mytest("HeckeAlgebras.jl","W=complex_reflection_group(4)","G₄")
@test mytest("HeckeAlgebras.jl","@Mvp x,y; H=hecke(W,[[1,x,y]])","hecke(G₄,Vector{Mvp{Int64, Int64}}[[1, x, y]])")
@test mytest("HeckeAlgebras.jl","factorized_schur_element(H,[[2,5]])","-x⁻¹y(xy+1)(x-1)Φ₆(xy⁻¹)(y-1)")
@test mytest("HeckeAlgebras.jl","W=complex_reflection_group(4)","G₄")
@test mytest("HeckeAlgebras.jl","@Mvp x,y; H=hecke(W,[[1,x,y]])","hecke(G₄,Vector{Mvp{Int64, Int64}}[[1, x, y]])")
@test mytest("HeckeAlgebras.jl","factorized_schur_elements(H)","7-element Vector{Chevie.HeckeAlgebras.FactSchur}:\n x⁻⁴y⁻⁴(xy+1)Φ₁Φ₆(x)Φ₁Φ₆(y)\n (x²y⁻¹+1)Φ₁Φ₆(x)Φ₁Φ₆(xy⁻¹)\n -x⁻⁴y⁵Φ₁Φ₆(xy⁻¹)(xy⁻²+1)Φ₁Φ₆(y)\n -x⁻¹y(xy+1)(x-1)Φ₆(xy⁻¹)(y-1)\n -x⁻⁴y(x²y⁻¹+1)(x-1)(xy⁻¹-1)Φ₆(y)\n x⁻¹y⁻¹Φ₆(x)(xy⁻¹-1)(xy⁻²+1)(y-1)\n x⁻²y(x²y⁻¹+1)(xy+1)(xy⁻²+1)")
@test mytest("HeckeAlgebras.jl","WF=rootdatum(:u,3)","u₃")
@test mytest("HeckeAlgebras.jl","HF=hecke(WF,Pol(:v)^2;rootpara=Pol())","hecke(u₃,v²,rootpara=v)")
@test mytest("HeckeAlgebras.jl","CharTable(HF)","CharTable(hecke(u₃,v²,rootpara=v))\n┌───┬──────────┐\n│   │ 111 21  3│\n├───┼──────────┤\n│111│  -1  1 -1│\n│21 │-2v³  .  v│\n│3  │  v⁶  1 v²│\n└───┴──────────┘")
@test mytest("HeckeAlgebras.jl","WF=rootdatum(\"2B2\")","²B₂")
@test mytest("HeckeAlgebras.jl","H=hecke(WF,Pol(:x)^2;rootpara=Pol())","hecke(²B₂,x²,rootpara=x)")
@test mytest("HeckeAlgebras.jl","representations(H)","3-element Vector{NamedTuple{(:gens, :F)}}:\n (gens = Matrix{Pol{Int64}}[[x²;;], [x²;;]], F = [1;;])\n (gens = [[-1;;], [-1;;]], F = [1;;])\n (gens = Matrix{Pol{Cyc{Int64}}}[[-1 0; √2x x²], [x² √2x; 0 -1]], F = [0 -1; -1 0])")
end
@testset "InitChevie.jl" begin
end
@testset "KL.jl" begin
@test mytest("KL.jl","W=coxgroup(:H,3)","H₃")
@test mytest("KL.jl","c=left_cells(W)","22-element Vector{LeftCell{FiniteCoxeterGroup{Perm{Int16},Cyc{Int64}}}}:\n LeftCell<H₃: duflo= character=φ₁‚₀>\n LeftCell<H₃: duflo=123 character=φ₁‚₁₅>\n LeftCell<H₃: duflo=(15) character=φ₅‚₅>\n LeftCell<H₃: duflo=(10) character=φ₅‚₅>\n LeftCell<H₃: duflo=(14) character=φ₅‚₅>\n LeftCell<H₃: duflo=7 character=φ₅‚₅>\n LeftCell<H₃: duflo=(12) character=φ₅‚₅>\n LeftCell<H₃: duflo=(9,12) character=φ₅‚₂>\n LeftCell<H₃: duflo=(5,11) character=φ₅‚₂>\n LeftCell<H₃: duflo=13 character=φ₅‚₂>\n ⋮\n LeftCell<H₃: duflo=(8,13) character=φ₃‚₆+φ₃‚₈>\n LeftCell<H₃: duflo=(1,15) character=φ₃‚₆+φ₃‚₈>\n LeftCell<H₃: duflo=3 character=φ₃‚₁+φ₃‚₃>\n LeftCell<H₃: duflo=2 character=φ₃‚₁+φ₃‚₃>\n LeftCell<H₃: duflo=1 character=φ₃‚₁+φ₃‚₃>\n LeftCell<H₃: duflo=6 character=φ₄‚₃+φ₄‚₄>\n LeftCell<H₃: duflo=(13) character=φ₄‚₃+φ₄‚₄>\n LeftCell<H₃: duflo=(11) character=φ₄‚₃+φ₄‚₄>\n LeftCell<H₃: duflo=9 character=φ₄‚₃+φ₄‚₄>")
@test mytest("KL.jl","W=coxgroup(:F,4)","F₄")
@test mytest("KL.jl","w=longest(W)*gens(W)[1];length(W,w)","23")
@test mytest("KL.jl","y=W(1:4...);length(W,y)","4")
@test mytest("KL.jl","cr=KL.critical_pair(W,y,w);length(W,cr)","16")
@test mytest("KL.jl","Pol(:x);KLPol(W,y,w)","Pol{Int64}: x³+1")
@test mytest("KL.jl","KLPol(W,cr,w)","Pol{Int64}: x³+1")
@test mytest("KL.jl","W=coxgroup(:B,3)","B₃")
@test mytest("KL.jl","map(i->map(x->KLPol(W,one(W),x),elements(W,i)),1:nref(W))","9-element Vector{Vector{Pol{Int64}}}:\n [1, 1, 1]\n [1, 1, 1, 1, 1]\n [1, 1, 1, 1, 1, 1, 1]\n [1, 1, 1, 1, 1, x+1, 1, 1]\n [x+1, 1, x+1, x+1, 1, 1, x+1, 1]\n [x²+1, 1, x+1, x+1, x+1, 1, 1]\n [1, 1, x²+x+1, x+1, x+1]\n [1, x+1, x²+1]\n [1]")
@test mytest("KL.jl","W=coxgroup(:B,2);@Pol v;H=hecke(W,[v^4,v^2])","hecke(B₂,Pol{Int64}[v⁴, v²])")
@test mytest("KL.jl","Cp=Cpbasis(H);h=Cp(1)^2","(v²+v⁻²)C′₁")
@test mytest("KL.jl","k=Tbasis(h)","(1+v⁻⁴)T.+(1+v⁻⁴)T₁")
@test mytest("KL.jl","Cp(k)","(v²+v⁻²)C′₁")
@test mytest("KL.jl","W=coxgroup(:B,3);H=hecke(W,Pol(:v)^2)","hecke(B₃,v²)")
@test mytest("KL.jl","T=Tbasis(H);C=Cbasis(H);T(C(1))","-vT.+v⁻¹T₁")
@test mytest("KL.jl","C(T(1))","v²C.+vC₁")
@test mytest("KL.jl","ref=reflrep(H)","3-element Vector{Matrix{Pol{Int64}}}:\n [-1 0 0; -v² v² 0; 0 0 v²]\n [v² -2 0; 0 -1 0; 0 -v² v²]\n [v² 0 0; 0 v² -1; 0 0 -1]")
@test mytest("KL.jl","W=coxgroup(:B,3)","B₃")
@test mytest("KL.jl","@Pol v;H=hecke(W,v^2,rootpara=v)","hecke(B₃,v²,rootpara=v)")
@test mytest("KL.jl","C=Cpbasis(H); Tbasis(C(1,2))","v⁻²T.+v⁻²T₂+v⁻²T₁+v⁻²T₁₂")
@test mytest("KL.jl","c=left_cells(coxgroup(:G,2))[3]","LeftCell<G₂: duflo=2 character=φ₂‚₁+φ′₁‚₃+φ₂‚₂>")
@test mytest("KL.jl","character(c)","3-element Vector{Int64}:\n 3\n 5\n 6")
@test mytest("KL.jl","W=coxgroup(:H,3)","H₃")
@test mytest("KL.jl","c=left_cells(W)[3]","LeftCell<H₃: duflo=(15) character=φ₅‚₅>")
@test mytest("KL.jl","@Mvp q;H=hecke(W,q)","hecke(H₃,q)")
@test mytest("KL.jl","representation(c,H)","3-element Vector{Matrix{Mvp{Int64, Rational{Int64}}}}:\n [-1 0 … 0 0; 0 -1 … 0 -q½; … ; 0 0 … q 0; 0 0 … 0 q]\n [-1 -q½ … 0 0; 0 q … 0 0; … ; 0 0 … -1 0; 0 -q½ … 0 -1]\n [q 0 … 0 0; -q½ -1 … 0 0; … ; 0 0 … q 0; 0 0 … 0 -1]")
@test mytest("KL.jl","W=coxgroup(:G,2)","G₂")
@test mytest("KL.jl","left_cells(W)","4-element Vector{LeftCell{FiniteCoxeterGroup{Perm{Int16},Int64}}}:\n LeftCell<G₂: duflo= character=φ₁‚₀>\n LeftCell<G₂: duflo=12 character=φ₁‚₆>\n LeftCell<G₂: duflo=2 character=φ₂‚₁+φ′₁‚₃+φ₂‚₂>\n LeftCell<G₂: duflo=1 character=φ₂‚₁+φ″₁‚₃+φ₂‚₂>")
@test mytest("KL.jl","W=coxgroup(:G,2);","nothing")
@test mytest("KL.jl","left_cells(W,1)","2-element Vector{LeftCell{FiniteCoxeterGroup{Perm{Int16},Int64}}}:\n LeftCell<G₂: duflo=2 character=φ₂‚₁+φ′₁‚₃+φ₂‚₂>\n LeftCell<G₂: duflo=1 character=φ₂‚₁+φ″₁‚₃+φ₂‚₂>")
@test mytest("KL.jl","W=coxgroup(:E,8)","E₈")
@test mytest("KL.jl","LeftCell(W,W((1:8)...))","LeftCell<E₈: duflo=(42,43) character=φ₃₅‚₂>")
@test mytest("KL.jl","W=coxgroup(:G,2)","G₂")
@test mytest("KL.jl","l=Lusztigaw(W,W(1))","6-element Vector{Int64}:\n 0\n 0\n 1\n 0\n 1\n 1")
@test mytest("KL.jl","sum(l.*map(i->almostchar(W,i),eachindex(l)))","[G₂]:<φ′₁‚₃>+<φ₂‚₁>+<φ₂‚₂>")
@test mytest("KL.jl","W=coxgroup(:G,2)","G₂")
@test mytest("KL.jl","l=LusztigAw(W,W(1))","6-element Vector{Int64}:\n 0\n 0\n 0\n 1\n 1\n 1")
@test mytest("KL.jl","sum(l.*map(i->almostchar(W,i),eachindex(l)))","[G₂]:<φ″₁‚₃>+<φ₂‚₁>+<φ₂‚₂>")
@test mytest("KL.jl","W=coxgroup(:G,2)","G₂")
@test mytest("KL.jl","A=AsymptoticAlgebra(W,1)","AsymptoticAlgebra(G₂,1) dim.10")
@test mytest("KL.jl","b=basis(A)","10-element Vector{AlgebraElt{AsymptoticAlgebra, Int64}}:\n t₂\n t₁₂\n t₂₁₂\n t₁₂₁₂\n t₂₁₂₁₂\n t₁\n t₂₁\n t₁₂₁\n t₂₁₂₁\n t₁₂₁₂₁")
@test mytest("KL.jl","b*permutedims(b)","10×10 Matrix{AlgebraElt{AsymptoticAlgebra, Int64}}:\n t₂      0            t₂₁₂            …  0               t₂₁₂₁        0\n t₁₂     0            t₁₂+t₁₂₁₂          0               t₁₂₁+t₁₂₁₂₁  0\n t₂₁₂    0            t₂+t₂₁₂+t₂₁₂₁₂     0               t₂₁+t₂₁₂₁    0\n t₁₂₁₂   0            t₁₂+t₁₂₁₂          0               t₁+t₁₂₁      0\n t₂₁₂₁₂  0            t₂₁₂               0               t₂₁          0\n 0       t₁₂          0               …  t₁₂₁            0            t₁₂₁₂₁\n 0       t₂+t₂₁₂      0                  t₂₁+t₂₁₂₁       0            t₂₁₂₁\n 0       t₁₂+t₁₂₁₂    0                  t₁+t₁₂₁+t₁₂₁₂₁  0            t₁₂₁\n 0       t₂₁₂+t₂₁₂₁₂  0                  t₂₁+t₂₁₂₁       0            t₂₁\n 0       t₁₂₁₂        0                  t₁₂₁            0            t₁")
@test mytest("KL.jl","CharTable(A)","CharTable(AsymptoticAlgebra(G₂,1) dim.10)\n┌─────┬───────────────────────────────────────┐\n│     │2 12 212 1212 21212 1 21 121 2121 12121│\n├─────┼───────────────────────────────────────┤\n│φ′₁‚₃│.  .   .    .     . 1  .  -1    .     1│\n│φ₂‚₁ │1  .   2    .     1 1  .   2    .     1│\n│φ₂‚₂ │1  .   .    .    -1 1  .   .    .    -1│\n│φ″₁‚₃│1  .  -1    .     1 .  .   .    .     .│\n└─────┴───────────────────────────────────────┘")
end
@testset "Lusztig.jl" begin
@test mytest("Lusztig.jl","W=coxgroup(:B,3)","B₃")
@test mytest("Lusztig.jl","t=twistings(W,[1,3])","2-element Vector{Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}}:\n B₃₍₁₃₎=Ã₁×A₁Φ₁\n B₃₍₁₃₎=Ã₁×A₁Φ₂")
@test mytest("Lusztig.jl","lusztig_induction_table(t[2],W)","Lusztig induction from B₃₍₁₃₎=Ã₁×A₁Φ₂ to B₃\n┌─────┬───────────────────────┐\n│     │11⊗ 11 11⊗ 2 2⊗ 11 2⊗ 2│\n├─────┼───────────────────────┤\n│111. │     1    -1    -1    .│\n│11.1 │    -1     .     1   -1│\n│1.11 │     .     .    -1    .│\n│.111 │    -1     .     .    .│\n│21.  │     .     .     .    .│\n│1.2  │     1    -1     .    1│\n│2.1  │     .     1     .    .│\n│.21  │     .     .     .    .│\n│3.   │     .     .     .    1│\n│.3   │     .     1     1   -1│\n│B₂:2 │     .     .     1   -1│\n│B₂:11│     1    -1     .    .│\n└─────┴───────────────────────┘")
end
@testset "Murphy.jl" begin
end
@testset "Nf.jl" begin
@test mytest("Nf.jl","F=NF(E(5))","CF(5)")
@test mytest("Nf.jl","K=NF(root(5))","NF(5,-1₅)")
@test mytest("Nf.jl","conductor(K)","5")
@test mytest("Nf.jl","E(5)+E(5,-1) in NF(root(5))","true")
@test mytest("Nf.jl","elements(galois(F))","4-element Vector{Chevie.Nf.NFAut}:\n Aut(CF(5),1₅)\n Aut(CF(5),2₅)\n Aut(CF(5),-1₅)\n Aut(CF(5),-2₅)")
@test mytest("Nf.jl","NF(root(3),root(5))","NF(60,-11₆₀,-1₆₀)")
@test mytest("Nf.jl","Nf.LenstraBase(24,Group([Mod(19,24)]),Group([Mod(19,24)]))","4-element Vector{Vector{Mod{UInt64}}}:\n [1₂₄, -5₂₄]\n [8₂₄]\n [11₂₄, -7₂₄]\n [-8₂₄]")
@test mytest("Nf.jl","Nf.LenstraBase(24,Group([Mod(19,24)]),Group([Mod(19,24),Mod(5,24)]))","4-element Vector{Vector{Mod{UInt64}}}:\n [1₂₄, -5₂₄]\n [5₂₄, -1₂₄]\n [8₂₄]\n [-8₂₄]")
@test mytest("Nf.jl","Nf.LenstraBase(15,Group([Mod(4,15)]),Group(Mod.(prime_residues(15),15)))","4-element Vector{Vector{Mod{UInt64}}}:\n [1₁₅, 4₁₅]\n [2₁₅, -7₁₅]\n [7₁₅, -2₁₅]\n [-4₁₅, -1₁₅]")
@test mytest("Nf.jl","NF(E(3),root(5))","NF(15,4₁₅)")
@test mytest("Nf.jl","NF([E(3),root(5)])","NF(15,4₁₅)")
@test mytest("Nf.jl","F=NF(root(5))","NF(5,-1₅)")
@test mytest("Nf.jl","s=Aut(F,3)","Aut(NF(5,-1₅),2₅)")
@test mytest("Nf.jl","root(5)^s","Cyc{Int64}: -√5")
@test mytest("Nf.jl","K=CF(5)","CF(5)")
@test mytest("Nf.jl","F=NF(root(5))","NF(5,-1₅)")
@test mytest("Nf.jl","galois(K)","Group(Chevie.Nf.NFAut[Aut(CF(5),2₅)])")
@test mytest("Nf.jl","elements(galois(K))","4-element Vector{Chevie.Nf.NFAut}:\n Aut(CF(5),1₅)\n Aut(CF(5),2₅)\n Aut(CF(5),-1₅)\n Aut(CF(5),-2₅)")
@test mytest("Nf.jl","elements(galois(F))","2-element Vector{Chevie.Nf.NFAut}:\n Aut(NF(5,-1₅),1₅)\n Aut(NF(5,-1₅),2₅)")
end
@testset "PermRoot.jl" begin
@test mytest("PermRoot.jl","W=complex_reflection_group(4)","G₄")
@test mytest("PermRoot.jl","gens(W)","2-element Vector{Perm{Int16}}:\n (1,3,9)(2,4,7)(5,10,18)(6,11,16)(8,12,19)(13,15,20)(14,17,21)(22,23,24)\n (1,5,13)(2,6,10)(3,7,14)(4,8,15)(9,16,22)(11,12,17)(18,19,23)(20,21,24)")
@test mytest("PermRoot.jl","length(unique(refls(W)))","4")
@test mytest("PermRoot.jl","length(refls(W))","24")
@test mytest("PermRoot.jl","reflrep(W)","2-element Vector{Matrix{Cyc{Rational{Int64}}}}:\n [1 0; 0 ζ₃]\n [√-3/3 -ζ₃²√-3/3; (-3+√-3)/3 -ζ₃√-3/3]")
@test mytest("PermRoot.jl","braid_relations(W)","1-element Vector{Tuple{Vector{Int64}, Vector{Int64}}}:\n ([1, 2, 1], [2, 1, 2])")
@test mytest("PermRoot.jl","diagram(W)","③ ——③ G₄\n1   2")
@test mytest("PermRoot.jl","cartan(W)","2×2 Matrix{Cyc{Rational{Int64}}}:\n ζ₃²√-3     ζ₃²\n   -ζ₃²  ζ₃²√-3")
@test mytest("PermRoot.jl","simpleroots(W)","2×2 Matrix{Cyc{Rational{Int64}}}:\n    0  ζ₃²√-3\n 2ζ₃²     ζ₃²")
@test mytest("PermRoot.jl","simplecoroots(W)","2×2 Matrix{Cyc{Rational{Int64}}}:\n     0      1\n √-3/3  √-3/3")
@test mytest("PermRoot.jl","degrees(W)","2-element Vector{Int64}:\n 4\n 6")
@test mytest("PermRoot.jl","fakedegrees(W,Pol(:x))","7-element Vector{Pol{Int64}}:\n 1\n x⁴\n x⁸\n x⁷+x⁵\n x⁵+x³\n x³+x\n x⁶+x⁴+x²")
@test mytest("PermRoot.jl","reflectionMatrix([1,0,-E(3,2)])","3×3 Matrix{Cyc{Rational{Int64}}}:\n  0  0  ζ₃²\n  0  1    0\n ζ₃  0    0")
@test mytest("PermRoot.jl","asreflection([-1 0 0;1 1 0;0 0 1])","(root = [2, 0, 0], coroot = Rational{Int64}[1, -1//2, 0], eig = -1, isunitary = false)")
@test mytest("PermRoot.jl","asreflection([-1 0 0;1 1 0;0 0 1],[1,0,0])","(root = [1, 0, 0], coroot = Rational{Int64}[2, -1, 0], eig = -1, isunitary = false)")
@test mytest("PermRoot.jl","W=coxgroup(:A,3)","A₃")
@test mytest("PermRoot.jl","cartan(W)","3×3 Matrix{Int64}:\n  2  -1   0\n -1   2  -1\n  0  -1   2")
@test mytest("PermRoot.jl","rank(complex_reflection_group(31))","4")
@test mytest("PermRoot.jl","bipartite_decomposition(coxgroup(:E,8))","([1, 4, 6, 8], [3, 2, 5, 7])")
@test mytest("PermRoot.jl","W=coxgroup(:B,3)","B₃")
@test mytest("PermRoot.jl","reflchar(W,longest(W))","-3")
@test mytest("PermRoot.jl","reflchar(coxgroup(:A,3))","5-element Vector{Int64}:\n  3\n  1\n -1\n  0\n -1")
@test mytest("PermRoot.jl","refleigen(coxgroup(:B,2))","5-element Vector{Vector{Root1}}:\n [1, 1]\n [-1, 1]\n [-1, -1]\n [-1, 1]\n [ζ₄³, ζ₄]")
@test mytest("PermRoot.jl","W=coxgroup(:A,4)","A₄")
@test mytest("PermRoot.jl","reflength(W,longest(W))","2")
@test mytest("PermRoot.jl","reflength(W,W(1,2,3,4))","4")
@test mytest("PermRoot.jl","W=reflection_subgroup(coxgroup(:A,3),[1,3])","A₃₍₁₃₎=A₁×A₁Φ₁")
@test mytest("PermRoot.jl","semisimplerank(W)","2")
@test mytest("PermRoot.jl","rank(W)","3")
@test mytest("PermRoot.jl","W=reflection_subgroup(rootdatum(\"E7sc\"),1:6)","E₇₍₁₂₃₄₅₆₎=E₆Φ₁")
@test mytest("PermRoot.jl","PermX(W,reflrep(W,longest(W)))==longest(W)","true")
@test mytest("PermRoot.jl","parabolic_reps(coxgroup(:A,4))","7-element Vector{Vector{Int64}}:\n []\n [1]\n [1, 2]\n [1, 3]\n [1, 2, 3]\n [1, 2, 4]\n [1, 2, 3, 4]")
@test mytest("PermRoot.jl","parabolic_reps(complex_reflection_group(3,3,3))","7-element Vector{Vector{Int64}}:\n []\n [1]\n [1, 2]\n [1, 3]\n [1, 9]\n [2, 3]\n [1, 2, 3]")
@test mytest("PermRoot.jl","parabolic_reps(coxgroup(:A,4),2)","2-element Vector{Vector{Int64}}:\n [1, 2]\n [1, 3]")
@test mytest("PermRoot.jl","parabolic_reps(complex_reflection_group(3,3,3),2)","4-element Vector{Vector{Int64}}:\n [1, 2]\n [1, 3]\n [1, 9]\n [2, 3]")
@test mytest("PermRoot.jl","W=reflection_subgroup(rootdatum(\"E7sc\"),1:6)","E₇₍₁₂₃₄₅₆₎=E₆Φ₁")
@test mytest("PermRoot.jl","reflrep(W,longest(W))","7×7 Matrix{Int64}:\n  0   0   0   0   0  -1  2\n  0  -1   0   0   0   0  2\n  0   0   0   0  -1   0  3\n  0   0   0  -1   0   0  4\n  0   0  -1   0   0   0  3\n -1   0   0   0   0   0  2\n  0   0   0   0   0   0  1")
@test mytest("PermRoot.jl","W=reflection_subgroup(rootdatum(\"E7sc\"),1:6)","E₇₍₁₂₃₄₅₆₎=E₆Φ₁")
@test mytest("PermRoot.jl","YMatrix(W,longest(W))","7×7 transpose(::Matrix{Int64}) with eltype Int64:\n  0   0   0   0   0  -1  0\n  0  -1   0   0   0   0  0\n  0   0   0   0  -1   0  0\n  0   0   0  -1   0   0  0\n  0   0  -1   0   0   0  0\n -1   0   0   0   0   0  0\n  2   2   3   4   3   2  1")
@test mytest("PermRoot.jl","W=reflection_subgroup(rootdatum(\"E7sc\"),1:6)","E₇₍₁₂₃₄₅₆₎=E₆Φ₁")
@test mytest("PermRoot.jl","PermY(W,YMatrix(W,longest(W)))==longest(W)","true")
@test mytest("PermRoot.jl","W=complex_reflection_group(7)","G₇")
@test mytest("PermRoot.jl","isparabolic(reflection_subgroup(W,[1,2]))","false")
@test mytest("PermRoot.jl","isparabolic(reflection_subgroup(W,[1]))","true")
@test mytest("PermRoot.jl","W=complex_reflection_group(7)","G₇")
@test mytest("PermRoot.jl","parabolic_closure(W,[1])","1-element Vector{Int64}:\n 1")
@test mytest("PermRoot.jl","parabolic_closure(W,[1,2])","3-element Vector{Int64}:\n 1\n 2\n 3")
@test mytest("PermRoot.jl","catalan(coxgroup(:A,7))","1430")
@test mytest("PermRoot.jl","catalan(complex_reflection_group(7),2)","16")
@test mytest("PermRoot.jl","catalan(complex_reflection_group(7),2;q=Pol())","Pol{Int64}: q⁷²+2q⁶⁰+3q⁴⁸+4q³⁶+3q²⁴+2q¹²+1")
@test mytest("PermRoot.jl","W=complex_reflection_group(4)","G₄")
@test mytest("PermRoot.jl","invariant_form(W)","2×2 Matrix{Int64}:\n 1  0\n 0  2")
@test mytest("PermRoot.jl","PermRoot.generic_order(complex_reflection_group(4),Pol(:q))","Pol{Int64}: q¹⁴-q¹⁰-q⁸+q⁴")
@test mytest("PermRoot.jl","W=coxgroup(:A,2)","A₂")
@test mytest("PermRoot.jl","@Mvp x,y,z","nothing")
@test mytest("PermRoot.jl","i=invariants(W);","nothing")
@test mytest("PermRoot.jl","map(f->f(x,y),i)","2-element Vector{Mvp{Int64, Int64}}:\n -2x²+2xy-2y²\n 6x²y-6xy²")
@test mytest("PermRoot.jl","W=complex_reflection_group(24)","G₂₄")
@test mytest("PermRoot.jl","p=invariants(W)[1](x,y,z)","Mvp{Rational{Int64}}: (14//1)x⁴+(-12//1)x²y²+(-42//1)x²yz+(21//2)x²z²+(18//7)y⁴+(-6//1)y³z+(-9//2)y²z²+(-21//8)z⁴")
@test mytest("PermRoot.jl","map(v->^(v,reflrep(W,1);vars=[:x,:y,:z]),(x,y,z))","((1//2)x+(3√-7/14)y, (-√-7/2)x+(-1//2)y, z)")
@test mytest("PermRoot.jl","p^reflrep(W,1)-p","Mvp{Cyc{Rational{Int64}}}: 0")
end
@testset "Semisimple.jl" begin
@test mytest("Semisimple.jl","W=rootdatum([-1 1 0;0 -1 1],[-1 1 0;0 -1 1])","A₂Φ₁")
@test mytest("Semisimple.jl","reflrep(W,W(1))","3×3 Matrix{Int64}:\n 0  1  0\n 1  0  0\n 0  0  1")
@test mytest("Semisimple.jl","rootdatum(:gl,3)","gl₃")
@test mytest("Semisimple.jl","G=rootdatum(:sl,4)","sl₄")
@test mytest("Semisimple.jl","ss(G,[1//3,1//4,3//4,2//3])","SemisimpleElement{Root1}: <ζ₃,ζ₄,ζ₄³,ζ₃²>")
@test mytest("Semisimple.jl","SemisimpleElement(G,[E(3),E(4),E(4,3),E(3,2)])","SemisimpleElement{Root1}: <ζ₃,ζ₄,ζ₄³,ζ₃²>")
@test mytest("Semisimple.jl","L=reflection_subgroup(G,[1,3])","A₃₍₁₃₎=A₁×A₁Φ₁")
@test mytest("Semisimple.jl","C=algebraic_center(L)","(Z0 = SubTorus(A₃₍₁₃₎=A₁×A₁Φ₁,[1 2 1]), AZ = Group(SemisimpleElement{Root1}[<1,1,-1>]), descAZ = [[1, 2]], ZD = Group(SemisimpleElement{Root1}[<-1,1,1>, <1,1,-1>]))")
@test mytest("Semisimple.jl","T=torsion_subgroup(C.Z0,3)","Group(SemisimpleElement{Root1}[<ζ₃,ζ₃²,ζ₃>])")
@test mytest("Semisimple.jl","e=sort(elements(T))","3-element Vector{SemisimpleElement{Root1}}:\n <1,1,1>\n <ζ₃,ζ₃²,ζ₃>\n <ζ₃²,ζ₃,ζ₃²>")
@test mytest("Semisimple.jl","e[3]^G(2)","SemisimpleElement{Root1}: <ζ₃²,1,ζ₃²>")
@test mytest("Semisimple.jl","orbit(G,e[3])","6-element Vector{SemisimpleElement{Root1}}:\n <ζ₃²,ζ₃,ζ₃²>\n <ζ₃²,1,ζ₃²>\n <ζ₃,1,ζ₃²>\n <ζ₃²,1,ζ₃>\n <ζ₃,1,ζ₃>\n <ζ₃,ζ₃²,ζ₃>")
@test mytest("Semisimple.jl","G=rootdatum(:sl,4)","sl₄")
@test mytest("Semisimple.jl","s=SemisimpleElement(G,Z(4).^[1,2,1])","SemisimpleElement{FFE{2}}: <Z₄,Z₄²,Z₄>")
@test mytest("Semisimple.jl","s^G(2)","SemisimpleElement{FFE{2}}: <Z₄,1,Z₄>")
@test mytest("Semisimple.jl","orbit(G,s)","6-element Vector{SemisimpleElement{FFE{2}}}:\n <Z₄,Z₄²,Z₄>\n <Z₄,1,Z₄>\n <Z₄²,1,Z₄>\n <Z₄,1,Z₄²>\n <Z₄²,1,Z₄²>\n <Z₄²,Z₄,Z₄²>")
@test mytest("Semisimple.jl","G=coxgroup(:A,3)","A₃")
@test mytest("Semisimple.jl","s=ss(G,[0,1//2,0])","SemisimpleElement{Root1}: <1,-1,1>")
@test mytest("Semisimple.jl","centralizer(G,s)","A₃₍₁₃₎=(A₁A₁)Φ₂")
@test mytest("Semisimple.jl","W=coxgroup(:A,4)","A₄")
@test mytest("Semisimple.jl","SubTorus(W,[1 2 3 4;2 3 4 1;3 4 1 1])","SubTorus(A₄,[1 0 3 -13; 0 1 2 7; 0 0 4 -3])")
@test mytest("Semisimple.jl","G=rootdatum(:sl,4)","sl₄")
@test mytest("Semisimple.jl","L=reflection_subgroup(G,[1,3])","A₃₍₁₃₎=A₁×A₁Φ₁")
@test mytest("Semisimple.jl","C=algebraic_center(L)","(Z0 = SubTorus(A₃₍₁₃₎=A₁×A₁Φ₁,[1 2 1]), AZ = Group(SemisimpleElement{Root1}[<1,1,-1>]), descAZ = [[1, 2]], ZD = Group(SemisimpleElement{Root1}[<-1,1,1>, <1,1,-1>]))")
@test mytest("Semisimple.jl","T=torsion_subgroup(C.Z0,3)","Group(SemisimpleElement{Root1}[<ζ₃,ζ₃²,ζ₃>])")
@test mytest("Semisimple.jl","sort(elements(T))","3-element Vector{SemisimpleElement{Root1}}:\n <1,1,1>\n <ζ₃,ζ₃²,ζ₃>\n <ζ₃²,ζ₃,ζ₃²>")
@test mytest("Semisimple.jl","weightinfo(coxgroup(:A,2)*coxgroup(:B,2))","Dict{Symbol, Array} with 8 entries:\n  :moduli                  => [3, 2]\n  :minusculeWeights        => [[1, 3], [1], [2, 3], [2], [3]]\n  :decompositions          => [[2, 1], [2, 0], [1, 1], [1, 0], [0, 1]]\n  :highestroot             => [5, 7]\n  :chosenAdaptedBasis      => [1 -1 0 0; 0 1 0 0; 0 0 1 0; 0 0 0 1]\n  :minusculeCoweights      => [[1, 4], [1], [2, 4], [2], [4]]\n  :CenterSimplyConnected   => Vector{Rational{Int64}}[[1//3, 2//3, 0, 0], [0, 0…\n  :AdjointFundamentalGroup => [(1,12,2), (4,14)]")
@test mytest("Semisimple.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Semisimple.jl","fundamental_group(W)","Group((1,12,3,2))")
@test mytest("Semisimple.jl","W=rootdatum(:sl,4)","sl₄")
@test mytest("Semisimple.jl","fundamental_group(W)","Group(Perm{Int16}[])")
@test mytest("Semisimple.jl","W=affine(coxgroup(:A,4))","Ã₄")
@test mytest("Semisimple.jl","diagram(W)","————5————\n      /         \\\nÃ₄   1———2———3———4")
@test mytest("Semisimple.jl","G=coxgroup(:A,3)","A₃")
@test mytest("Semisimple.jl","s=ss(G,[0,1//2,0])","SemisimpleElement{Root1}: <1,-1,1>")
@test mytest("Semisimple.jl","centralizer(G,s)","A₃₍₁₃₎=(A₁A₁)Φ₂")
@test mytest("Semisimple.jl","W=coxgroup(:E,6);l=quasi_isolated_reps(W)","5-element Vector{SemisimpleElement{Root1}}:\n <1,1,1,1,1,1>\n <1,-1,1,1,1,1>\n <1,1,1,ζ₃,1,1>\n <ζ₃,1,1,1,1,ζ₃>\n <1,ζ₆,ζ₆,1,ζ₆,1>")
@test mytest("Semisimple.jl","map(s->isisolated(W,s),l)","5-element Vector{Bool}:\n 1\n 1\n 1\n 0\n 0")
@test mytest("Semisimple.jl","W=rootdatum(:E6sc);l=quasi_isolated_reps(W)","7-element Vector{SemisimpleElement{Root1}}:\n <1,1,1,1,1,1>\n <-1,1,1,-1,1,-1>\n <ζ₃,1,ζ₃²,1,ζ₃,ζ₃²>\n <ζ₃²,1,ζ₃,1,ζ₃,ζ₃²>\n <ζ₃²,1,ζ₃,1,ζ₃²,ζ₃>\n <ζ₆⁵,1,ζ₃²,1,ζ₃,ζ₃²>\n <ζ₃²,1,ζ₃,1,ζ₃²,ζ₆⁵>")
@test mytest("Semisimple.jl","map(s->isisolated(W,s),l)","7-element Vector{Bool}:\n 1\n 1\n 1\n 1\n 1\n 1\n 1")
@test mytest("Semisimple.jl","Semisimple.quasi_isolated_reps(W,3)","2-element Vector{SemisimpleElement{Root1}}:\n <1,1,1,1,1,1>\n <-1,1,1,-1,1,-1>")
@test mytest("Semisimple.jl","l=twistings(rootdatum(:sl,4),Int[])","5-element Vector{Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}}:\n A₃₍₎=Φ₁³\n A₃₍₎=Φ₁²Φ₂\n A₃₍₎=Φ₁Φ₂²\n A₃₍₎=Φ₁Φ₃\n A₃₍₎=Φ₂Φ₄")
@test mytest("Semisimple.jl","structure_rational_points_connected_centre.(l,3)","5-element Vector{Vector{Int64}}:\n [2, 2, 2]\n [2, 8]\n [4, 8]\n [26]\n [40]")
@test mytest("Semisimple.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Semisimple.jl","fundamental_group(intermediate_group(W,Int[]))","Group((1,12,3,2))")
@test mytest("Semisimple.jl","fundamental_group(intermediate_group(W,Int[2]))","Group((1,3)(2,12))")
@test mytest("Semisimple.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Semisimple.jl","sscentralizer_reps(W)","6-element Vector{Vector{Int64}}:\n []\n [1]\n [2]\n [1, 2]\n [1, 5]\n [2, 6]")
@test mytest("Semisimple.jl","reflection_subgroup.(Ref(W),sscentralizer_reps(W))","6-element Vector{FiniteCoxeterSubGroup{Perm{Int16},Int64}}:\n G₂₍₎=Φ₁²\n G₂₍₁₎=A₁Φ₁\n G₂₍₂₎=Ã₁Φ₁\n G₂\n G₂₍₁₅₎=A₂\n G₂₍₂₆₎=Ã₁×A₁")
@test mytest("Semisimple.jl","sscentralizer_reps(W,2)","5-element Vector{Vector{Int64}}:\n []\n [1]\n [2]\n [1, 2]\n [1, 5]")
end
@testset "Sscoset.jl" begin
@test mytest("Sscoset.jl","WF=rootdatum(:u,6)","u₆")
@test mytest("Sscoset.jl","l=quasi_isolated_reps(WF)","4-element Vector{SemisimpleElement{Root1}}:\n <1,1,1,1,1,1>\n <ζ₄,ζ₄,ζ₄,ζ₄³,ζ₄³,ζ₄³>\n <ζ₄,ζ₄,1,1,ζ₄³,ζ₄³>\n <ζ₄,1,1,1,1,ζ₄³>")
@test mytest("Sscoset.jl","centralizer.(Ref(WF),l)","4-element Vector{ExtendedCox{Perm{Int16}, FiniteCoxeterGroup{Perm{Int16},Rational{Int64}}}}:\n C₃₍₃₂₁₎\n ²A₃₍₃₁₂₎\n (A₁A₁)₍₁₃₎×A₁₍₂₎\n B₂Φ₁")
@test mytest("Sscoset.jl","isisolated.(Ref(WF),l)","4-element BitVector:\n 1\n 1\n 1\n 0")
@test mytest("Sscoset.jl","WF=rootdatum(:u,6)","u₆")
@test mytest("Sscoset.jl","s=ss(Group(WF),[1//4,0,0,0,0,3//4])","SemisimpleElement{Root1}: <ζ₄,1,1,1,1,ζ₄³>")
@test mytest("Sscoset.jl","centralizer(WF,s)","B₂Φ₁")
@test mytest("Sscoset.jl","centralizer(WF,one(s))","C₃₍₃₂₁₎")
@test mytest("Sscoset.jl","WF=rootdatum(\"2E6sc\")","²E₆sc")
@test mytest("Sscoset.jl","quasi_isolated_reps(WF)","5-element Vector{SemisimpleElement{Root1}}:\n <1,1,1,1,1,1>\n <1,-1,ζ₄,1,ζ₄,1>\n <1,1,1,-1,1,1>\n <1,ζ₃²,1,ζ₃,1,1>\n <1,ζ₄³,1,-1,1,1>")
@test mytest("Sscoset.jl","quasi_isolated_reps(WF,2)","2-element Vector{SemisimpleElement{Root1}}:\n <1,1,1,1,1,1>\n <1,ζ₃²,1,ζ₃,1,1>")
@test mytest("Sscoset.jl","quasi_isolated_reps(WF,3)","4-element Vector{SemisimpleElement{Root1}}:\n <1,1,1,1,1,1>\n <1,-1,ζ₄,1,ζ₄,1>\n <1,1,1,-1,1,1>\n <1,ζ₄³,1,-1,1,1>")
@test mytest("Sscoset.jl","WF=rootdatum(:u,6)","u₆")
@test mytest("Sscoset.jl","l=quasi_isolated_reps(WF)","4-element Vector{SemisimpleElement{Root1}}:\n <1,1,1,1,1,1>\n <ζ₄,ζ₄,ζ₄,ζ₄³,ζ₄³,ζ₄³>\n <ζ₄,ζ₄,1,1,ζ₄³,ζ₄³>\n <ζ₄,1,1,1,1,ζ₄³>")
@test mytest("Sscoset.jl","isisolated.(Ref(WF),l)","4-element BitVector:\n 1\n 1\n 1\n 0")
end
@testset "Symbols.jl" begin
@test mytest("Symbols.jl","d=partition_tuples(3,2)","10-element Vector{Vector{Vector{Int64}}}:\n [[1, 1, 1], []]\n [[1, 1], [1]]\n [[1], [1, 1]]\n [[], [1, 1, 1]]\n [[2, 1], []]\n [[1], [2]]\n [[2], [1]]\n [[], [2, 1]]\n [[3], []]\n [[], [3]]")
@test mytest("Symbols.jl","string_partition_tuple.(d)","10-element Vector{String}:\n \"111.\"\n \"11.1\"\n \"1.11\"\n \".111\"\n \"21.\"\n \"1.2\"\n \"2.1\"\n \".21\"\n \"3.\"\n \".3\"")
@test mytest("Symbols.jl","shiftβ([2,3],2)","4-element Vector{Int64}:\n 0\n 1\n 4\n 5")
@test mytest("Symbols.jl","shiftβ([0,1,4,5],-2)","2-element Vector{Int64}:\n 2\n 3")
@test mytest("Symbols.jl","βset([3,3,1])","3-element Vector{Int64}:\n 1\n 4\n 5")
@test mytest("Symbols.jl","partβ([0,4,5])","2-element Vector{Int64}:\n 3\n 3")
@test mytest("Symbols.jl","symbol_partition_tuple([[2,1],[1]],1)","2-element Vector{Vector{Int64}}:\n [1, 3]\n [1]")
@test mytest("Symbols.jl","symbol_partition_tuple([[2,1],[1]],0)","2-element Vector{Vector{Int64}}:\n [1, 3]\n [0, 2]")
@test mytest("Symbols.jl","symbol_partition_tuple([[2,1],[1]],-1)","2-element Vector{Vector{Int64}}:\n [1, 3]\n [0, 1, 3]")
@test mytest("Symbols.jl","ranksymbol([[1,5,6],[1,2]])","11")
@test mytest("Symbols.jl","valuation_gendeg_symbol([[1,5,6],[1,2]])","13")
@test mytest("Symbols.jl","degree_gendeg_symbol([[1,5,6],[1,2]])","91")
@test mytest("Symbols.jl","defectsymbol([[1,5,6],[1,2]])","1")
@test mytest("Symbols.jl","degree_fegsymbol([[1,5,6],[1,2]])","88")
@test mytest("Symbols.jl","valuation_fegsymbol([[1,5,6],[1,2]])","16")
@test mytest("Symbols.jl","stringsymbol.(symbols(3,2))","14-element Vector{String}:\n \"(12,0,0)\"\n \"(02,1,0)\"\n \"(02,0,1)\"\n \"(012,12,01)\"\n \"(01,1,1)\"\n \"(012,01,12)\"\n \"(2,,)\"\n \"(01,2,0)\"\n \"(01,0,2)\"\n \"(1,012,012)\"\n \"(,02,01)\"\n \"(,01,02)\"\n \"(0,,012)\"\n \"(0,012,)\"")
@test mytest("Symbols.jl","stringsymbol.(symbols(3,3,0))","12-element Vector{String}:\n \"(1+)\"\n \"(1E(3))\"\n \"(1E(3,2))\"\n \"(01,12,02)\"\n \"(01,02,12)\"\n \"(012,012,123)\"\n \"(0,1,2)\"\n \"(0,2,1)\"\n \"(01,01,13)\"\n \"(0,0,3)\"\n \"(012,,)\"\n \"(012,012,)\"")
@test mytest("Symbols.jl","fegsymbol([[1,5,6],[1,2]])","q¹⁶Φ₅Φ₇Φ₈Φ₉Φ₁₀Φ₁₁Φ₁₄Φ₁₆Φ₁₈Φ₂₀Φ₂₂")
@test mytest("Symbols.jl","gendeg_symbol([[1,2],[1,5,6]])","q¹³Φ₅Φ₆Φ₇Φ₈²Φ₉Φ₁₀Φ₁₁Φ₁₄Φ₁₆Φ₁₈Φ₂₀Φ₂₂/2")
@test mytest("Symbols.jl","BDSymbols(2,1)","5-element Vector{Vector{Vector{Int64}}}:\n [[1, 2], [0]]\n [[0, 2], [1]]\n [[0, 1, 2], [1, 2]]\n [[2], []]\n [[0, 1], [2]]")
@test mytest("Symbols.jl","BDSymbols(4,0)","13-element Vector{Vector}:\n Any[[1, 2], 2, 0]\n Any[[1, 2], 2, 1]\n [[0, 1, 3], [1, 2, 3]]\n [[0, 1, 2, 3], [1, 2, 3, 4]]\n [[1, 2], [0, 3]]\n [[0, 2], [1, 3]]\n [[0, 1, 2], [1, 2, 4]]\n Any[[2], 2, 0]\n Any[[2], 2, 1]\n [[0, 1], [2, 3]]\n [[1], [3]]\n [[0, 1], [1, 4]]\n [[0], [4]]")
end
@testset "Tools.jl" begin
@test mytest("Tools.jl","valuation.(24,(2,3,5))","(3, 1, 0)")
@test mytest("Tools.jl","abelian_gens([Perm(1,2),Perm(3,4,5),Perm(6,7)])","2-element Vector{Perm{Int16}}:\n (6,7)\n (1,2)(3,5,4)(6,7)")
@test mytest("Tools.jl","abelian_invariants(Group(Perm(1,2),Perm(3,4,5),Perm(6,7)))","2-element Vector{Int64}:\n 2\n 6")
end
@testset "Tools2.jl" begin
@test mytest("Tools2.jl","W=coxsym(5)","𝔖 ₅")
@test mytest("Tools2.jl","blocks(W,2)","2-element Vector{Vector{Int64}}:\n [1, 3, 4, 5, 7]\n [2, 6]")
@test mytest("Tools2.jl","blocks(W,3)","3-element Vector{Vector{Int64}}:\n [1, 5, 6]\n [2, 3, 7]\n [4]")
@test mytest("Tools2.jl","blocks(W,7)","7-element Vector{Vector{Int64}}:\n [1]\n [2]\n [3]\n [4]\n [5]\n [6]\n [7]")
@test mytest("Tools2.jl","@Mvp x,y","nothing")
@test mytest("Tools2.jl","factor(x^2-y^2+x+3y-2)","2-element Vector{Mvp{Int64, Int64}}:\n x-y+2\n x+y-1")
@test mytest("Tools2.jl","factor(x^2+x+1)","2-element Vector{Mvp{Cyc{Int64}, Int64}}:\n x-ζ₃\n x-ζ₃²")
@test mytest("Tools2.jl","factor(x*y-1)","1-element Vector{Mvp{Int64, Int64}}:\n xy-1")
end
@testset "Uch.jl" begin
@test mytest("Uch.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Uch.jl","uc=UnipotentCharacters(W)","UnipotentCharacters(G₂)\n┌───────┬────────────────────────────────────────────────────┐\n│γ      │n₀    Deg(γ)  Feg              Symbol Fr(γ)    label│\n├───────┼────────────────────────────────────────────────────┤\n│φ₁‚₀   │ 1         1    1       (0,0,0,0,0,2)     1         │\n│φ₁‚₆   │ 2        q⁶   q⁶ (01,01,01,01,01,12)     1         │\n│φ′₁‚₃  │ 3   qΦ₃Φ₆/3   q³            (0,0,1+)     1    (1,ρ)│\n│φ″₁‚₃  │ 4   qΦ₃Φ₆/3   q³            (0,0,1-)     1   (g₃,1)│\n│φ₂‚₁   │ 5  qΦ₂²Φ₃/6  qΦ₈       (0,0,0,0,1,1)     1    (1,1)│\n│φ₂‚₂   │ 6  qΦ₂²Φ₆/2 q²Φ₄       (0,0,0,1,0,1)     1   (g₂,1)│\n│G₂[-1] │ 7  qΦ₁²Φ₃/2    0       (01,0,01,,0,)    -1   (g₂,ε)│\n│G₂[1]  │ 8  qΦ₁²Φ₆/6    0       (01,01,0,,,0)     1    (1,ε)│\n│G₂[ζ₃] │ 9 qΦ₁²Φ₂²/3    0       (01,0,0,01,,)    ζ₃  (g₃,ζ₃)│\n│G₂[ζ₃²]│10 qΦ₁²Φ₂²/3    0       (01,01,,0,0,)   ζ₃² (g₃,ζ₃²)│\n└───────┴────────────────────────────────────────────────────┘")
@test mytest("Uch.jl","uc.families[1]","Family(D(𝔖 ₃),[5, 6, 4, 3, 8, 7, 9, 10])\nDrinfeld double of 𝔖 ₃, Lusztig′s version\n┌────────┬────────────────────────────────────────────────────┐\n│label   │eigen                                               │\n├────────┼────────────────────────────────────────────────────┤\n│(1,1)   │    1 1//6  1//2  1//3  1//3  1//6  1//2  1//3  1//3│\n│(g₂,1)  │    1 1//2  1//2     .     . -1//2 -1//2     .     .│\n│(g₃,1)  │    1 1//3     .  2//3 -1//3  1//3     . -1//3 -1//3│\n│(1,ρ)   │    1 1//3     . -1//3  2//3  1//3     . -1//3 -1//3│\n│(1,ε)   │    1 1//6 -1//2  1//3  1//3  1//6 -1//2  1//3  1//3│\n│(g₂,ε)  │   -1 1//2 -1//2     .     . -1//2  1//2     .     .│\n│(g₃,ζ₃) │   ζ₃ 1//3     . -1//3 -1//3  1//3     .  2//3 -1//3│\n│(g₃,ζ₃²)│  ζ₃² 1//3     . -1//3 -1//3  1//3     . -1//3  2//3│\n└────────┴────────────────────────────────────────────────────┘")
@test mytest("Uch.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Uch.jl","T=spets(reflection_subgroup(W,Int[]),W(1,2))","G₂₍₎=Φ₆")
@test mytest("Uch.jl","u=unipotent_character(T,1)","[G₂₍₎=Φ₆]:<Id>")
@test mytest("Uch.jl","T=torus(W,position_class(W,W(1,2)))","G₂₍₎=Φ₆")
@test mytest("Uch.jl","lusztig_induce(W,u)","[G₂]:<φ₁‚₀>+<φ₁‚₆>-<φ₂‚₁>+<G₂[-1]>+<G₂[ζ₃]>+<G₂[ζ₃²]>")
@test mytest("Uch.jl","v=deligne_lusztig_character(W,[1,2])","[G₂]:<φ₁‚₀>+<φ₁‚₆>-<φ₂‚₁>+<G₂[-1]>+<G₂[ζ₃]>+<G₂[ζ₃²]>")
@test mytest("Uch.jl","degree(v)","Pol{Int64}: q⁶+q⁵-q⁴-2q³-q²+q+1")
@test mytest("Uch.jl","v*v","6")
@test mytest("Uch.jl","UnipotentCharacters(complex_reflection_group(4))","UnipotentCharacters(G₄)\n┌─────┬────────────────────────────────────────┐\n│γ    │n₀            Deg(γ)    Feg Fr(γ)  label│\n├─────┼────────────────────────────────────────┤\n│φ₁‚₀ │ 1                 1      1     1       │\n│φ₁‚₄ │ 2  -√-3q⁴Φ″₃Φ₄Φ″₆/6     q⁴     1   1∧ζ₆│\n│φ₁‚₈ │ 3   √-3q⁴Φ′₃Φ₄Φ′₆/6     q⁸     1 -1∧ζ₃²│\n│φ₂‚₅ │ 4         q⁴Φ₂²Φ₆/2   q⁵Φ₄     1  1∧ζ₃²│\n│φ₂‚₃ │ 5 -ζ₃√-3qΦ″₃Φ₄Φ′₆/3   q³Φ₄     1  1∧ζ₃²│\n│φ₂‚₁ │ 6 ζ₃²√-3qΦ′₃Φ₄Φ″₆/3    qΦ₄     1   1∧ζ₃│\n│φ₃‚₂ │ 7            q²Φ₃Φ₆ q²Φ₃Φ₆     1       │\n│Z₃:2 │ 8     -√-3qΦ₁Φ₂Φ₄/3      0   ζ₃² ζ₃∧ζ₃²│\n│Z₃:11│ 9    -√-3q⁴Φ₁Φ₂Φ₄/3      0   ζ₃² ζ₃∧ζ₆⁵│\n│G₄   │10        -q⁴Φ₁²Φ₃/2      0    -1  ζ₆∧-1│\n└─────┴────────────────────────────────────────┘")
@test mytest("Uch.jl","W=coxgroup(:Bsym,2)","Bsym₂")
@test mytest("Uch.jl","WF=spets(W,Perm(1,2))","²Bsym₂")
@test mytest("Uch.jl","uc=UnipotentCharacters(WF)","UnipotentCharacters(²Bsym₂)\n┌────────┬─────────────────────────────────────────────────────┐\n│γ       │n₀ almostch    Deg(γ)   Feg        Symbol Fr(γ) label│\n├────────┼─────────────────────────────────────────────────────┤\n│2       │ 1       2.         1     1     (02,,0,0)     1      │\n│11      │ 2      .11        q⁴    q⁴ (012,1,01,01)     1      │\n│²B₂[1,3]│ 3      1.1 √2qΦ₁Φ₂/2 qΦ₁Φ₂     (01,,1,0)   ζ₈³     1│\n│²B₂[1,5]│ 4       B₂ √2qΦ₁Φ₂/2     0     (01,,0,1)   ζ₈⁵     2│\n└────────┴─────────────────────────────────────────────────────┘")
@test mytest("Uch.jl","uc.families","3-element Vector{Family}:\n Family(C₁,[1])\n Family(C₁,[2])\n Family(?4,[3, 4])")
@test mytest("Uch.jl","uc.families[3]","Family(?4,[3, 4])\n┌─────┬────────────────┐\n│label│eigen    1     2│\n├─────┼────────────────┤\n│1    │  ζ₈³ √2/2 -√2/2│\n│2    │  -ζ₈ √2/2  √2/2│\n└─────┴────────────────┘")
@test mytest("Uch.jl","uc=UnipotentCharacters(coxgroup(:G,2));","nothing")
@test mytest("Uch.jl","charnames(uc;limit=true)","10-element Vector{String}:\n \"φ₁‚₀\"\n \"φ₁‚₆\"\n \"φ′₁‚₃\"\n \"φ″₁‚₃\"\n \"φ₂‚₁\"\n \"φ₂‚₂\"\n \"G₂[-1]\"\n \"G₂[1]\"\n \"G₂[ζ₃]\"\n \"G₂[ζ₃²]\"")
@test mytest("Uch.jl","charnames(uc;TeX=true)","10-element Vector{String}:\n \"\\\\phi_{1,0}\"\n \"\\\\phi_{1,6}\"\n \"\\\\phi_{1,3}'\"\n \"\\\\phi_{1,3}''\"\n \"\\\\phi_{2,1}\"\n \"\\\\phi_{2,2}\"\n \"G_2[-1]\"\n \"G_2[1]\"\n \"G_2[\\\\zeta_3]\"\n \"G_2[\\\\zeta_3^2]\"")
@test mytest("Uch.jl","W=coxgroup(:B,2)","B₂")
@test mytest("Uch.jl","uc=UnipotentCharacters(W)","UnipotentCharacters(B₂)\n┌───┬──────────────────────────────────┐\n│γ  │n₀ Deg(γ) Feg   Symbol Fr(γ) label│\n├───┼──────────────────────────────────┤\n│11.│ 1  qΦ₄/2  q²   (12,0)     1   +,-│\n│1.1│ 2 qΦ₂²/2 qΦ₄   (02,1)     1   +,+│\n│.11│ 3     q⁴  q⁴ (012,12)     1      │\n│2. │ 4      1   1     (2,)     1      │\n│.2 │ 5  qΦ₄/2  q²   (01,2)     1   -,+│\n│B₂ │ 6 qΦ₁²/2   0   (012,)    -1   -,-│\n└───┴──────────────────────────────────┘")
@test mytest("Uch.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Uch.jl","uc=UnipotentCharacters(W);","nothing")
@test mytest("Uch.jl","degrees(uc)","10-element Vector{Pol{Rational{Int64}}}:\n 1\n q⁶\n (1//3)q⁵+(1//3)q³+(1//3)q\n (1//3)q⁵+(1//3)q³+(1//3)q\n (1//6)q⁵+(1//2)q⁴+(2//3)q³+(1//2)q²+(1//6)q\n (1//2)q⁵+(1//2)q⁴+(1//2)q²+(1//2)q\n (1//2)q⁵+(-1//2)q⁴+(-1//2)q²+(1//2)q\n (1//6)q⁵+(-1//2)q⁴+(2//3)q³+(-1//2)q²+(1//6)q\n (1//3)q⁵+(-2//3)q³+(1//3)q\n (1//3)q⁵+(-2//3)q³+(1//3)q")
@test mytest("Uch.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Uch.jl","CycPoldegrees(UnipotentCharacters(W))","10-element Vector{CycPol{Rational{Int64}}}:\n 1\n q⁶\n qΦ₃Φ₆/3\n qΦ₃Φ₆/3\n qΦ₂²Φ₃/6\n qΦ₂²Φ₆/2\n qΦ₁²Φ₃/2\n qΦ₁²Φ₆/6\n qΦ₁²Φ₂²/3\n qΦ₁²Φ₂²/3")
@test mytest("Uch.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Uch.jl","u=unichar(W,7)","[G₂]:<G₂[-1]>")
@test mytest("Uch.jl","v=unichar(W,\"G2[E3]\")","[G₂]:<G₂[ζ₃]>")
@test mytest("Uch.jl","w=unichar(W,[1,0,0,-1,0,0,2,0,0,1])","[G₂]:<φ₁‚₀>-<φ″₁‚₃>+2<G₂[-1]>+<G₂[ζ₃²]>")
@test mytest("Uch.jl","unichar(W,fourier(UnipotentCharacters(W))[3,:])","[G₂]:2//3<φ′₁‚₃>-1//3<φ″₁‚₃>+1//3<φ₂‚₁>+1//3<G₂[1]>-1//3<G₂[ζ₃]>-1//3<G₂[ζ₃²]>")
@test mytest("Uch.jl","coefficients(u)","10-element Vector{Int64}:\n 0\n 0\n 0\n 0\n 0\n 0\n 1\n 0\n 0\n 0")
@test mytest("Uch.jl","w-2u","[G₂]:<φ₁‚₀>-<φ″₁‚₃>+<G₂[ζ₃²]>")
@test mytest("Uch.jl","w*w","7")
@test mytest("Uch.jl","degree(w)","Pol{Int64}: q⁵-q⁴-q³-q²+q+1")
@test mytest("Uch.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Uch.jl","WF=spets(W)","G₂")
@test mytest("Uch.jl","T=subspets(WF,Int[],W(1))","G₂₍₎=Φ₁Φ₂")
@test mytest("Uch.jl","u=unichar(T,1)","[G₂₍₎=Φ₁Φ₂]:<Id>")
@test mytest("Uch.jl","lusztig_induce(WF,u)","[G₂]:<φ₁‚₀>-<φ₁‚₆>-<φ′₁‚₃>+<φ″₁‚₃>")
@test mytest("Uch.jl","dlchar(W,W(1))","[G₂]:<φ₁‚₀>-<φ₁‚₆>-<φ′₁‚₃>+<φ″₁‚₃>")
@test mytest("Uch.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Uch.jl","WF=spets(W)","G₂")
@test mytest("Uch.jl","T=subspets(WF,Int[],W(1))","G₂₍₎=Φ₁Φ₂")
@test mytest("Uch.jl","u=dlchar(W,W(1))","[G₂]:<φ₁‚₀>-<φ₁‚₆>-<φ′₁‚₃>+<φ″₁‚₃>")
@test mytest("Uch.jl","lusztig_restrict(T,u)","[G₂₍₎=Φ₁Φ₂]:4<Id>")
@test mytest("Uch.jl","T=subspets(WF,Int[],W(2))","G₂₍₎=Φ₁Φ₂")
@test mytest("Uch.jl","lusztig_restrict(T,u)","[G₂₍₎=Φ₁Φ₂]:0")
@test mytest("Uch.jl","dlCharTable(W)","6×10 Matrix{Int64}:\n 1   1   1   1   2   2   0   0   0   0\n 1  -1   1  -1   0   0   0   0   0   0\n 1  -1  -1   1   0   0   0   0   0   0\n 1   1   0   0  -1   0   1   0   1   1\n 1   1   0   0   0  -1   0   1  -1  -1\n 1   1  -1  -1   0   0  -2  -2   0   0")
@test mytest("Uch.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Uch.jl","dlchar(W,3)","[G₂]:<φ₁‚₀>-<φ₁‚₆>-<φ′₁‚₃>+<φ″₁‚₃>")
@test mytest("Uch.jl","dlchar(W,W(1))","[G₂]:<φ₁‚₀>-<φ₁‚₆>-<φ′₁‚₃>+<φ″₁‚₃>")
@test mytest("Uch.jl","dlchar(W,[1])","[G₂]:<φ₁‚₀>-<φ₁‚₆>-<φ′₁‚₃>+<φ″₁‚₃>")
@test mytest("Uch.jl","dlchar(W,[1,2])","[G₂]:<φ₁‚₀>+<φ₁‚₆>-<φ₂‚₁>+<G₂[-1]>+<G₂[ζ₃]>+<G₂[ζ₃²]>")
@test mytest("Uch.jl","W=coxgroup(:B,2)","B₂")
@test mytest("Uch.jl","almostchar(W,3)","[B₂]:<.11>")
@test mytest("Uch.jl","almostchar(W,1)","[B₂]:1//2<11.>+1//2<1.1>-1//2<.2>-1//2<B₂>")
@test mytest("Uch.jl","W=coxgroup(:A,2)","A₂")
@test mytest("Uch.jl","H=hecke(W,Pol(:q))","hecke(A₂,q)")
@test mytest("Uch.jl","T=Tbasis(H);","nothing")
@test mytest("Uch.jl","dllefschetz(T(1,2))","[A₂]:<111>-q<21>+q²<3>")
@test mytest("Uch.jl","dllefschetz((T(1)+T())*(T(2)+T()))","[A₂]:q<21>+(q²+2q+1)<3>")
@test mytest("Uch.jl","H=hecke(spets(W,Perm(1,2)),Pol(:q)^2)","hecke(²A₂,q²)")
@test mytest("Uch.jl","T=Tbasis(H);dllefschetz(T(1))","[²A₂]:-<11>-q<²A₂>+q²<2>")
@test mytest("Uch.jl","WF=rootdatum(\"3D4\")","³D₄")
@test mytest("Uch.jl","on_unipotents(Group(WF),WF.phi)","(1,7,2)(8,12,9)")
@test mytest("Uch.jl","W=coxgroup(:D,4)","D₄")
@test mytest("Uch.jl","cuspidal(UnipotentCharacters(W))","1-element Vector{Int64}:\n 14")
@test mytest("Uch.jl","cuspidal(UnipotentCharacters(W),6)","8-element Vector{Int64}:\n  1\n  2\n  6\n  7\n  8\n  9\n 10\n 12")
@test mytest("Uch.jl","cuspidal(UnipotentCharacters(complex_reflection_group(4)),3)","4-element Vector{Int64}:\n  3\n  6\n  7\n 10")
@test mytest("Uch.jl","cuspidal_data(coxgroup(:F,4),1)","9-element Vector{@NamedTuple{levi::Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}, cuspidal::Int64, d::Root1}}:\n (levi = F₄, cuspidal = 31, d = 1)\n (levi = F₄, cuspidal = 32, d = 1)\n (levi = F₄, cuspidal = 33, d = 1)\n (levi = F₄, cuspidal = 34, d = 1)\n (levi = F₄, cuspidal = 35, d = 1)\n (levi = F₄, cuspidal = 36, d = 1)\n (levi = F₄, cuspidal = 37, d = 1)\n (levi = F₄₍₃₂₎=B₂₍₂₁₎Φ₁², cuspidal = 6, d = 1)\n (levi = F₄₍₎=Φ₁⁴, cuspidal = 1, d = 1)")
@test mytest("Uch.jl","cuspidal_data(complex_reflection_group(4),3)","5-element Vector{@NamedTuple{levi::Spets{PRSG{Cyc{Rational{Int64}}, Int16}}, cuspidal::Int64, d::Root1}}:\n (levi = G₄, cuspidal = 3, d = ζ₃)\n (levi = G₄, cuspidal = 6, d = ζ₃)\n (levi = G₄, cuspidal = 7, d = ζ₃)\n (levi = G₄, cuspidal = 10, d = ζ₃)\n (levi = G₄₍₎=Φ₁Φ′₃, cuspidal = 1, d = ζ₃)")
end
@testset "Ucl.jl" begin
@test mytest("Ucl.jl","UnipotentClasses(rootdatum(:sl,4))","UnipotentClasses(sl₄)\n1111<211<22<31<4\n┌────┬───────────────────────────────────────────────────────────────┐\n│u   │D-R dℬ ᵤ B-C   C_𝐆(u) A₃(Φ₁³) A₁(A₁×A₁Φ₁)/-1 .(A₃)/ζ₄ .(A₃)/ζ₄³│\n├────┼───────────────────────────────────────────────────────────────┤\n│4   │222    0 222    q³.Z₄     1:4           -1:2    ζ₄:Id    ζ₄³:Id│\n│31  │202    1 22.    q⁴.Φ₁   Id:31                                  │\n│22  │020    2 2.2 q⁴.A₁.Z₂    2:22          11:11                   │\n│211 │101    3 2..  q⁵.A₁Φ₁  Id:211                                  │\n│1111│000    6 ...       A₃ Id:1111                                  │\n└────┴───────────────────────────────────────────────────────────────┘")
@test mytest("Ucl.jl","UnipotentClasses(coxgroup(:A,3))","UnipotentClasses(A₃)\n1111<211<22<31<4\n┌────┬────────────────────────────┐\n│u   │D-R dℬ ᵤ B-C  C_𝐆(u) A₃(Φ₁³)│\n├────┼────────────────────────────┤\n│4   │222    0 222      q³    Id:4│\n│31  │202    1 22.   q⁴.Φ₁   Id:31│\n│22  │020    2 2.2   q⁴.A₁   Id:22│\n│211 │101    3 2.. q⁵.A₁Φ₁  Id:211│\n│1111│000    6 ...      A₃ Id:1111│\n└────┴────────────────────────────┘")
@test mytest("Ucl.jl","UnipotentClasses(coxgroup(:G,2))","UnipotentClasses(G₂)\n1<A₁<Ã₁<G₂(a₁)<G₂\n┌──────┬──────────────────────────────────────────┐\n│u     │D-R dℬ ᵤ B-C C_𝐆(u)         G₂(Φ₁²)  .(G₂)│\n├──────┼──────────────────────────────────────────┤\n│G₂    │ 22    0  22     q²         Id:φ₁‚₀       │\n│G₂(a₁)│ 20    1  20  q⁴.S₃ 21:φ′₁‚₃ 3:φ₂‚₁ 111:Id│\n│Ã₁    │ 01    2  .2  q³.A₁         Id:φ₂‚₂       │\n│A₁    │ 10    3  2.  q⁵.A₁        Id:φ″₁‚₃       │\n│1     │ 00    6  ..     G₂         Id:φ₁‚₆       │\n└──────┴──────────────────────────────────────────┘")
@test mytest("Ucl.jl","UnipotentClasses(coxgroup(:G,2),3)","UnipotentClasses(G₂,3)\n1<A₁,(Ã₁)₃<Ã₁<G₂(a₁)<G₂\n┌──────┬───────────────────────────────────────────┐\n│u     │dℬ ᵤ B-C C_𝐆(u)  G₂(Φ₁²) .(G₂) .(G₂)  .(G₂)│\n├──────┼───────────────────────────────────────────┤\n│G₂    │   0  22  q².Z₃   1:φ₁‚₀       ζ₃:Id ζ₃²:Id│\n│G₂(a₁)│   1  20  q⁴.Z₂   2:φ₂‚₁ 11:Id             │\n│Ã₁    │   2  .2     q⁶  Id:φ₂‚₂                   │\n│A₁    │   3  2.  q⁵.A₁ Id:φ″₁‚₃                   │\n│(Ã₁)₃ │   3  ??  q⁵.A₁ Id:φ′₁‚₃                   │\n│1     │   6  ..     G₂  Id:φ₁‚₆                   │\n└──────┴───────────────────────────────────────────┘")
@test mytest("Ucl.jl","uc=UnipotentClasses(coxgroup(:G,2));","nothing")
@test mytest("Ucl.jl","t=ICCTable(uc;q=Pol(:q))","Coefficients of Xᵪ on Yᵩ for series L=G₂₍₎=Φ₁² W_G(L)=G₂\n┌──────┬─────────────────────────────┐\n│X\\Y   │G₂ G₂(a₁)⁽²¹⁾ G₂(a₁) Ã₁ A₁  1│\n├──────┼─────────────────────────────┤\n│Xφ₁‚₀ │ 1          .      1  1  1  1│\n│Xφ′₁‚₃│ .          1      .  1  . q²│\n│Xφ₂‚₁ │ .          .      1  1  1 Φ₈│\n│Xφ₂‚₂ │ .          .      .  1  1 Φ₄│\n│Xφ″₁‚₃│ .          .      .  .  1  1│\n│Xφ₁‚₆ │ .          .      .  .  .  1│\n└──────┴─────────────────────────────┘")
@test mytest("Ucl.jl","W=coxgroup(:F,4)","F₄")
@test mytest("Ucl.jl","H=reflection_subgroup(W,[1,3])","F₄₍₁₃₎=A₁×Ã₁Φ₁²")
@test mytest("Ucl.jl","induced_linear_form(W,H,[2,2])","4-element Vector{Int64}:\n 0\n 1\n 0\n 0")
@test mytest("Ucl.jl","uc=UnipotentClasses(W);","nothing")
@test mytest("Ucl.jl","uc.classes[4].dynkin","4-element Vector{Int64}:\n 0\n 1\n 0\n 0")
@test mytest("Ucl.jl","uc.classes[4]","UnipotentClass(A₁+Ã₁)")
@test mytest("Ucl.jl","W=coxgroup(:F,4)","F₄")
@test mytest("Ucl.jl","distinguished_parabolics(W)","4-element Vector{Vector{Int64}}:\n []\n [3]\n [1, 3]\n [1, 3, 4]")
@test mytest("Ucl.jl","W=rootdatum(:sl,4)","sl₄")
@test mytest("Ucl.jl","uc=UnipotentClasses(W);","nothing")
@test mytest("Ucl.jl","uc.classes","5-element Vector{UnipotentClass}:\n UnipotentClass(1111)\n UnipotentClass(211)\n UnipotentClass(22)\n UnipotentClass(31)\n UnipotentClass(4)")
@test mytest("Ucl.jl","uc=UnipotentClasses(coxgroup(:A,3));t=ICCTable(uc)","Coefficients of Xᵪ on Yᵩ for series L=A₃₍₎=Φ₁³ W_G(L)=A₃\n┌─────┬────────────────┐\n│X\\Y  │4 31 22 211 1111│\n├─────┼────────────────┤\n│X4   │1  1  1   1    1│\n│X31  │.  1  1  Φ₂   Φ₃│\n│X22  │.  .  1   1   Φ₄│\n│X211 │.  .  .   1   Φ₃│\n│X1111│.  .  .   .    1│\n└─────┴────────────────┘")
@test mytest("Ucl.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Ucl.jl","XTable(UnipotentClasses(W))","Values of character sheaves X̃ᵪ on local systems φ\n┌──────────┬───────────────────────────────────────────┐\n│X̃ᵪ|φ      │   1 A₁ Ã₁ G₂(a₁)⁽¹¹¹⁾ G₂(a₁)⁽²¹⁾ G₂(a₁) G₂│\n├──────────┼───────────────────────────────────────────┤\n│X_φ₁‚₀^G₂ │   1  1  1           .          .      1  1│\n│X_φ₁‚₆^G₂ │  q⁶  .  .           .          .      .  .│\n│X_φ′₁‚₃^G₂│  q³  .  q           .          q      .  .│\n│X_φ″₁‚₃^G₂│  q³ q³  .           .          .      .  .│\n│X_φ₂‚₁^G₂ │ qΦ₈  q  q           .          .      q  .│\n│X_φ₂‚₂^G₂ │q²Φ₄ q² q²           .          .      .  .│\n│X_Id^.    │   .  .  .          q²          .      .  .│\n└──────────┴───────────────────────────────────────────┘")
@test mytest("Ucl.jl","t=XTable(UnipotentClasses(W);classes=true)","Values of character sheaves X̃ᵪ on unipotent classes\n┌──────────┬─────────────────────────────────────────────────────────┐\n│X̃ᵪ|class  │           1     A₁     Ã₁ G₂(a₁) G₂(a₁)₍₂₁₎ G₂(a₁)₍₃₎ G₂│\n├──────────┼─────────────────────────────────────────────────────────┤\n│X_φ₁‚₀^G₂ │           1      1      1      1          1         1  1│\n│X_φ₁‚₆^G₂ │          q⁶      .      .      .          .         .  .│\n│X_φ′₁‚₃^G₂│          q³      .      q     2q          .        -q  .│\n│X_φ″₁‚₃^G₂│          q³     q³      .      .          .         .  .│\n│X_φ₂‚₁^G₂ │         qΦ₈      q      q      q          q         q  .│\n│X_φ₂‚₂^G₂ │        q²Φ₄     q²     q²      .          .         .  .│\n│X_Id^.    │           .      .      .     q²        -q²        q²  .│\n├──────────┼─────────────────────────────────────────────────────────┤\n│|C_𝐆(u)|  │q⁶Φ₁²Φ₂²Φ₃Φ₆ q⁶Φ₁Φ₂ q⁴Φ₁Φ₂    6q⁴        2q⁴       3q⁴ q²│\n└──────────┴─────────────────────────────────────────────────────────┘")
@test mytest("Ucl.jl","XTable(UnipotentClasses(W,2))","Values of character sheaves X̃ᵪ on local systems φ\n┌──────────┬──────────────────────────────────────────────────┐\n│X̃ᵪ|φ      │   1 A₁ Ã₁ G₂(a₁)⁽¹¹¹⁾ G₂(a₁)⁽²¹⁾ G₂(a₁) G₂⁽¹¹⁾ G₂│\n├──────────┼──────────────────────────────────────────────────┤\n│X_φ₁‚₀^G₂ │   1  1  1           .          .      1      .  1│\n│X_φ₁‚₆^G₂ │  q⁶  .  .           .          .      .      .  .│\n│X_φ′₁‚₃^G₂│  q³  .  q           .          q      .      .  .│\n│X_φ″₁‚₃^G₂│  q³ q³  .           .          .      .      .  .│\n│X_φ₂‚₁^G₂ │ qΦ₈  q  q           .          .      q      .  .│\n│X_φ₂‚₂^G₂ │q²Φ₄ q² q²           .          .      .      .  .│\n│X_Id^.    │   .  .  .          q²          .      .      .  .│\n│X_Id^.    │   .  .  .           .          .      .      q  .│\n└──────────┴──────────────────────────────────────────────────┘")
@test mytest("Ucl.jl","XTable(UnipotentClasses(rootdatum(:sl,4)))","Values of character sheaves X̃ᵪ on local systems φ\n┌────────┬────────────────────────────────────────────┐\n│X̃ᵪ|φ    │1111 211 22⁽¹¹⁾ 22 31 4 4^(ζ₄) 4⁽⁻¹⁾ 4^(ζ₄³)│\n├────────┼────────────────────────────────────────────┤\n│X₁₁₁₁^A₃│  q⁶   .      .  .  . .      .     .       .│\n│X₂₁₁^A₃ │q³Φ₃  q³      .  .  . .      .     .       .│\n│X₂₂^A₃  │q²Φ₄  q²      . q²  . .      .     .       .│\n│X₃₁^A₃  │ qΦ₃ qΦ₂      .  q  q .      .     .       .│\n│X₄^A₃   │   1   1      .  1  1 1      .     .       .│\n│X₁₁^A₁  │   .   .     q³  .  . .      .     .       .│\n│X₂^A₁   │   .   .     q²  .  . .      .     q       .│\n│X_Id^.  │   .   .      .  .  . .   q³⁄₂     .       .│\n│X_Id^.  │   .   .      .  .  . .      .     .    q³⁄₂│\n└────────┴────────────────────────────────────────────┘")
@test haskey(t,:centClass)
@test haskey(t,:cardClass)
@test mytest("Ucl.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Ucl.jl","GreenTable(UnipotentClasses(W))","Values of Green functions Q_wF on local systems φ\n┌──────────┬──────────────────────────────────────────────────────────┐\n│Qᴵ_wF|φ   │        1     A₁       Ã₁ G₂(a₁)⁽¹¹¹⁾ G₂(a₁)⁽²¹⁾ G₂(a₁) G₂│\n├──────────┼──────────────────────────────────────────────────────────┤\n│Q_A₀^G₂   │  Φ₂²Φ₃Φ₆   Φ₂Φ₃ (2q+1)Φ₂           .          q   2q+1  1│\n│Q_Ã₁^G₂   │-Φ₁Φ₂Φ₃Φ₆  -Φ₁Φ₃       Φ₂           .          q      1  1│\n│Q_A₁^G₂   │-Φ₁Φ₂Φ₃Φ₆   Φ₂Φ₆      -Φ₁           .         -q      1  1│\n│Q_G₂^G₂   │ Φ₁²Φ₂²Φ₃ -Φ₁Φ₂²    -Φ₁Φ₂           .         -q     Φ₂  1│\n│Q_A₂^G₂   │ Φ₁²Φ₂²Φ₆  Φ₁²Φ₂    -Φ₁Φ₂           .          q    -Φ₁  1│\n│Q_A₁+Ã₁^G₂│  Φ₁²Φ₃Φ₆  -Φ₁Φ₆ (2q-1)Φ₁           .         -q  -2q+1  1│\n│Q_^.      │        .      .        .          q²          .      .  .│\n└──────────┴──────────────────────────────────────────────────────────┘")
@test mytest("Ucl.jl","GreenTable(UnipotentClasses(W);classes=true)","Values of Green functions Q_wF on unipotent classes\n┌───────────┬────────────────────────────────────────────────────────┐\n│Qᴵ_wF|class│        1     A₁       Ã₁ G₂(a₁) G₂(a₁)₍₂₁₎ G₂(a₁)₍₃₎ G₂│\n├───────────┼────────────────────────────────────────────────────────┤\n│Q_A₀^G₂    │  Φ₂²Φ₃Φ₆   Φ₂Φ₃ (2q+1)Φ₂   4q+1       2q+1        Φ₂  1│\n│Q_Ã₁^G₂    │-Φ₁Φ₂Φ₃Φ₆  -Φ₁Φ₃       Φ₂   2q+1          1       -Φ₁  1│\n│Q_A₁^G₂    │-Φ₁Φ₂Φ₃Φ₆   Φ₂Φ₆      -Φ₁  -2q+1          1        Φ₂  1│\n│Q_G₂^G₂    │ Φ₁²Φ₂²Φ₃ -Φ₁Φ₂²    -Φ₁Φ₂    -Φ₁         Φ₂      2q+1  1│\n│Q_A₂^G₂    │ Φ₁²Φ₂²Φ₆  Φ₁²Φ₂    -Φ₁Φ₂     Φ₂        -Φ₁     -2q+1  1│\n│Q_A₁+Ã₁^G₂ │  Φ₁²Φ₃Φ₆  -Φ₁Φ₆ (2q-1)Φ₁  -4q+1      -2q+1       -Φ₁  1│\n│Q_^.       │        .      .        .     q²        -q²        q²  .│\n└───────────┴────────────────────────────────────────────────────────┘")
@test mytest("Ucl.jl","GreenTable(UnipotentClasses(rootdatum(:sl,4)))","Values of Green functions Q_wF on local systems φ\n┌────────┬──────────────────────────────────────────────────────────────────┐\n│Qᴵ_wF|φ │     1111          211 22⁽¹¹⁾       22   31 4 4^(ζ₄) 4⁽⁻¹⁾ 4^(ζ₄³)│\n├────────┼──────────────────────────────────────────────────────────────────┤\n│Q₁₁₁₁^A₃│  Φ₂²Φ₃Φ₄ (3q²+2q+1)Φ₂      . (2q+1)Φ₂ 3q+1 1      .     .       .│\n│Q₂₁₁^A₃ │-Φ₁Φ₂Φ₃Φ₄   -q³+q²+q+1      .       Φ₂   Φ₂ 1      .     .       .│\n│Q₂₂^A₃  │  Φ₁²Φ₃Φ₄        -Φ₁Φ₄      .  2q²-q+1  -Φ₁ 1      .     .       .│\n│Q₃₁^A₃  │ Φ₁²Φ₂²Φ₄        -Φ₁Φ₂      .    -Φ₁Φ₂    1 1      .     .       .│\n│Q₄^A₃   │ -Φ₁³Φ₂Φ₃        Φ₁²Φ₂      .      -Φ₁  -Φ₁ 1      .     .       .│\n│Q₁₁^A₁  │        .            .   q²Φ₂        .    . .      .     q       .│\n│Q₂^A₁   │        .            .  -q²Φ₁        .    . .      .     q       .│\n│Q_^.    │        .            .      .        .    . .   q³⁄₂     .       .│\n│Q_^.    │        .            .      .        .    . .      .     .    q³⁄₂│\n└────────┴──────────────────────────────────────────────────────────────────┘")
@test mytest("Ucl.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Ucl.jl","UnipotentValues(UnipotentClasses(W);classes=true)","Values of unipotent characters for G₂ on unipotent classes\n┌───────┬─────────────────────────────────────────────────────────────┐\n│       │        1          A₁     Ã₁   G₂(a₁) G₂(a₁)₍₂₁₎ G₂(a₁)₍₃₎ G₂│\n├───────┼─────────────────────────────────────────────────────────────┤\n│φ₁‚₀   │        1           1      1        1          1         1  1│\n│φ₁‚₆   │       q⁶           .      .        .          .         .  .│\n│φ′₁‚₃  │  qΦ₃Φ₆/3    -qΦ₁Φ₂/3      q (q+5)q/3     -qΦ₁/3     qΦ₁/3  .│\n│φ″₁‚₃  │  qΦ₃Φ₆/3  (2q²+1)q/3      .    qΦ₁/3     -qΦ₁/3  (q+2)q/3  .│\n│φ₂‚₁   │ qΦ₂²Φ₃/6 (2q+1)qΦ₂/6  qΦ₂/2 (q+5)q/6     -qΦ₁/6     qΦ₁/6  .│\n│φ₂‚₂   │ qΦ₂²Φ₆/2       qΦ₂/2  qΦ₂/2   -qΦ₁/2      qΦ₂/2    -qΦ₁/2  .│\n│G₂[-1] │ qΦ₁²Φ₃/2      -qΦ₁/2 -qΦ₁/2   -qΦ₁/2      qΦ₂/2    -qΦ₁/2  .│\n│G₂[1]  │ qΦ₁²Φ₆/6 (2q-1)qΦ₁/6 -qΦ₁/2 (q+5)q/6     -qΦ₁/6     qΦ₁/6  .│\n│G₂[ζ₃] │qΦ₁²Φ₂²/3    -qΦ₁Φ₂/3      .    qΦ₁/3     -qΦ₁/3  (q+2)q/3  .│\n│G₂[ζ₃²]│qΦ₁²Φ₂²/3    -qΦ₁Φ₂/3      .    qΦ₁/3     -qΦ₁/3  (q+2)q/3  .│\n└───────┴─────────────────────────────────────────────────────────────┘")
@test mytest("Ucl.jl","UnipotentValues(UnipotentClasses(W,3);classes=true)","Values of unipotent characters for G₂ on unipotent classes\n┌───────┬──────────────────────────────────────────────────────────────────────\n│       │        1          A₁         Ã₁ G₂(a₁) G₂(a₁)₍₂₎    G₂       G₂_(ζ₃)\n├───────┼──────────────────────────────────────────────────────────────────────\n│φ₁‚₀   │        1           1          1      1         1     1             1\n│φ₁‚₆   │       q⁶           .          .      .         .     .             .\n│φ′₁‚₃  │  qΦ₃Φ₆/3    -qΦ₁Φ₂/3        q/3  qΦ₂/3    -qΦ₁/3 -2q/3           q/3\n│φ″₁‚₃  │  qΦ₃Φ₆/3  (2q²+1)q/3        q/3  qΦ₂/3    -qΦ₁/3 -2q/3           q/3\n│φ₂‚₁   │ qΦ₂²Φ₃/6 (2q+1)qΦ₂/6  (3q+1)q/6  qΦ₂/6    -qΦ₁/6  2q/3          -q/3\n│φ₂‚₂   │ qΦ₂²Φ₆/2       qΦ₂/2      qΦ₂/2 -qΦ₁/2     qΦ₂/2     .             .\n│G₂[-1] │ qΦ₁²Φ₃/2      -qΦ₁/2     -qΦ₁/2 -qΦ₁/2     qΦ₂/2     .             .\n│G₂[1]  │ qΦ₁²Φ₆/6 (2q-1)qΦ₁/6 (-3q+1)q/6  qΦ₂/6    -qΦ₁/6  2q/3          -q/3\n│G₂[ζ₃] │qΦ₁²Φ₂²/3    -qΦ₁Φ₂/3        q/3  qΦ₂/3    -qΦ₁/3   q/3 (-ζ₃+2ζ₃²)q/3\n│G₂[ζ₃²]│qΦ₁²Φ₂²/3    -qΦ₁Φ₂/3        q/3  qΦ₂/3    -qΦ₁/3   q/3  (2ζ₃-ζ₃²)q/3\n└───────┴──────────────────────────────────────────────────────────────────────\n┌───────┬─────────────────────────┐\n│       │     G₂_(ζ₃²)       (Ã₁)₃│\n├───────┼─────────────────────────┤\n│φ₁‚₀   │            1           1│\n│φ₁‚₆   │            .           .│\n│φ′₁‚₃  │          q/3  (2q²+1)q/3│\n│φ″₁‚₃  │          q/3    -qΦ₁Φ₂/3│\n│φ₂‚₁   │         -q/3 (2q+1)qΦ₂/6│\n│φ₂‚₂   │            .       qΦ₂/2│\n│G₂[-1] │            .      -qΦ₁/2│\n│G₂[1]  │         -q/3 (2q-1)qΦ₁/6│\n│G₂[ζ₃] │ (2ζ₃-ζ₃²)q/3    -qΦ₁Φ₂/3│\n│G₂[ζ₃²]│(-ζ₃+2ζ₃²)q/3    -qΦ₁Φ₂/3│\n└───────┴─────────────────────────┘")
@test mytest("Ucl.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Ucl.jl","special_pieces(UnipotentClasses(W))","3-element Vector{Vector{Int64}}:\n [1]\n [4, 3, 2]\n [5]")
@test mytest("Ucl.jl","special_pieces(UnipotentClasses(W,3))","3-element Vector{Vector{Int64}}:\n [1]\n [4, 3, 2, 6]\n [5]")
end
@testset "Urad.jl" begin
@test mytest("Urad.jl","W=coxgroup(:E,6)","E₆")
@test mytest("Urad.jl","U=UnipotentGroup(W)","UnipotentGroup(E₆)")
@test mytest("Urad.jl","U(2=>4)","u2(4)")
@test mytest("Urad.jl","U(2)^4","u2(4)")
@test mytest("Urad.jl","U(2=>4)*U(4=>5)","u2(4)u4(5)")
@test mytest("Urad.jl","U(2=>4,4=>5)","u2(4)u4(5)")
@test mytest("Urad.jl","U(4=>5,2=>4)","u2(4)u4(5)u8(-20)")
@test mytest("Urad.jl","W=coxgroup(:E,8);U=UnipotentGroup(W)","UnipotentGroup(E₈)")
@test mytest("Urad.jl","u=U(map(i->i=>Z(2)*Mvp(Symbol(\"x\",Char(i+0x2080))),1:8)...)","u1(x₁)u2(x₂)u3(x₃)u4(x₄)u5(x₅)u6(x₆)u7(x₇)u8(x₈)")
@test mytest("Urad.jl","u^32","()")
@test mytest("Urad.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Urad.jl","U=UnipotentGroup(W);@Mvp x,y","nothing")
@test mytest("Urad.jl","u=U(1=>x,3=>y)","u1(x)u3(y)")
@test mytest("Urad.jl","u^W(2,1)","u4(y)u5(x)")
@test mytest("Urad.jl","s=SemisimpleElement(W,[E(3),2])","SemisimpleElement{Cyc{Int64}}: <ζ₃,2>")
@test mytest("Urad.jl","u^s","u1(ζ₃x)u3(2ζ₃y)")
@test mytest("Urad.jl","u^U(2)","u1(x)u3(x+y)u4(-x-2y)u5(x+3y)u6(x²+3xy+3y²)")
@test mytest("Urad.jl","U=UnipotentGroup(coxgroup(:G,2))","UnipotentGroup(G₂)")
@test mytest("Urad.jl","U.special","10-element Vector{@NamedTuple{r::Int64, s::Int64, rs::Int64, N::Int64, comm::Vector{NTuple{4, Int64}}}}:\n (r = 1, s = 2, rs = 3, N = 1, comm = [(1, 1, 3, 1), (1, 2, 4, -1), (1, 3, 5, 1), (2, 3, 6, 2)])\n (r = 2, s = 3, rs = 4, N = 2, comm = [(1, 1, 4, 2), (2, 1, 5, 3), (1, 2, 6, -3)])\n (r = 2, s = 4, rs = 5, N = 3, comm = [(1, 1, 5, 3)])\n (r = 1, s = 5, rs = 6, N = 1, comm = [(1, 1, 6, 1)])\n (r = 3, s = 4, rs = 6, N = 3, comm = [(1, 1, 6, 3)])\n (r = 2, s = 1, rs = 3, N = -1, comm = [(1, 1, 3, -1), (2, 1, 4, -1), (3, 1, 5, -1), (3, 2, 6, -1)])\n (r = 3, s = 2, rs = 4, N = -2, comm = [(1, 1, 4, -2), (2, 1, 6, -3), (1, 2, 5, 3)])\n (r = 4, s = 2, rs = 5, N = -3, comm = [(1, 1, 5, -3)])\n (r = 5, s = 1, rs = 6, N = -1, comm = [(1, 1, 6, -1)])\n (r = 4, s = 3, rs = 6, N = -3, comm = [(1, 1, 6, -3)])")
@test mytest("Urad.jl","U=UnipotentGroup(coxgroup(:G,2))","UnipotentGroup(G₂)")
@test mytest("Urad.jl","l=reorder(U,[2=>4,1=>2])","6-element Vector{Pair{Int64, Int64}}:\n 1 => 2\n 2 => 4\n 3 => -8\n 4 => 32\n 5 => -128\n 6 => 512")
@test mytest("Urad.jl","reorder(U,l,6:-1:1)","2-element Vector{Pair{Int64, Int64}}:\n 2 => 4\n 1 => 2")
@test mytest("Urad.jl","U=UnipotentGroup(coxgroup(:G,2))","UnipotentGroup(G₂)")
@test mytest("Urad.jl","U(2)","u2(1)")
@test mytest("Urad.jl","U(1=>2,2=>4)","u1(2)u2(4)")
@test mytest("Urad.jl","U(2=>4,1=>2)","u1(2)u2(4)u3(-8)u4(32)u5(-128)u6(512)")
@test mytest("Urad.jl","U=UnipotentGroup(coxgroup(:G,2));@Mvp x,y","nothing")
@test mytest("Urad.jl","u=U(2=>y,1=>x)","u1(x)u2(y)u3(-xy)u4(xy²)u5(-xy³)u6(2x²y³)")
@test mytest("Urad.jl","abelianpart(u)","u1(x)u2(y)")
@test mytest("Urad.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Urad.jl","U=UnipotentGroup(W);@Mvp x,y","nothing")
@test mytest("Urad.jl","u=U(2=>y,1=>x)","u1(x)u2(y)u3(-xy)u4(xy²)u5(-xy³)u6(2x²y³)")
@test mytest("Urad.jl","decompose(W(1),u)","2-element Vector{UnipotentElement{Mvp{Int64, Int64}}}:\n u1(x)\n u2(y)u3(-xy)u4(xy²)u5(-xy³)u6(2x²y³)")
@test mytest("Urad.jl","decompose(W(2),u)","2-element Vector{UnipotentElement{Mvp{Int64, Int64}}}:\n u2(y)\n u1(x)")
end
@testset "Util.jl" begin
end
@testset "Weyl.jl" begin
@test mytest("Weyl.jl","cartan(:D,4)","4×4 Matrix{Int64}:\n  2   0  -1   0\n  0   2  -1   0\n -1  -1   2  -1\n  0   0  -1   2")
@test mytest("Weyl.jl","cartan(:I,2,5)","2×2 Matrix{Cyc{Int64}}:\n       2  ζ₅²+ζ₅³\n ζ₅²+ζ₅³        2")
@test mytest("Weyl.jl","W=coxgroup(:D,4)","D₄")
@test mytest("Weyl.jl","cartan(W)","4×4 Matrix{Int64}:\n  2   0  -1   0\n  0   2  -1   0\n -1  -1   2  -1\n  0   0  -1   2")
@test mytest("Weyl.jl","W=coxgroup(:A,2)*coxgroup(:B,2)","A₂×B₂")
@test mytest("Weyl.jl","cartan(W)","4×4 Matrix{Int64}:\n  2  -1   0   0\n -1   2   0   0\n  0   0   2  -2\n  0   0  -1   2")
@test mytest("Weyl.jl","W=coxgroup(:D,4)","D₄")
@test mytest("Weyl.jl","p=W(1,3,2,1,3)","(1,14,13,2)(3,17,8,18)(4,12)(5,20,6,15)(7,10,11,9)(16,24)(19,22,23,21)")
@test mytest("Weyl.jl","word(W,p)","5-element Vector{Int64}:\n 1\n 3\n 1\n 2\n 3")
@test mytest("Weyl.jl","cartan([1 3;3 1])","2×2 Matrix{Cyc{Int64}}:\n  2  -1\n -1   2")
@test mytest("Weyl.jl","cartan(:F,4)","4×4 Matrix{Int64}:\n  2  -1   0   0\n -1   2  -1   0\n  0  -2   2  -1\n  0   0  -1   2")
@test mytest("Weyl.jl","cartan(:I,2,5)","2×2 Matrix{Cyc{Int64}}:\n       2  ζ₅²+ζ₅³\n ζ₅²+ζ₅³        2")
@test mytest("Weyl.jl","cartan(:Bsym,2)","2×2 Matrix{Cyc{Int64}}:\n   2  -√2\n -√2    2")
@test mytest("Weyl.jl","two_tree(cartan(:A,4))","4-element Vector{Int64}:\n 1\n 2\n 3\n 4")
@test mytest("Weyl.jl","two_tree(cartan(:E,8))","(4, [2], [3, 1], [5, 6, 7, 8])")
@test mytest("Weyl.jl","W=coxgroup(:A,3)","A₃")
@test mytest("Weyl.jl","inversions(W,[2,1,2])","3-element Vector{Int64}:\n 2\n 4\n 1")
@test mytest("Weyl.jl","W=coxgroup(:A,2)","A₂")
@test mytest("Weyl.jl","map(N->with_inversions(W,N),combinations(1:nref(W)))","8-element Vector{Union{Nothing, Perm{Int16}}}:\n ()\n (1,4)(2,3)(5,6)\n (1,3)(2,5)(4,6)\n nothing\n nothing\n (1,6,2)(3,5,4)\n (1,2,6)(3,4,5)\n (1,5)(2,4)(3,6)")
@test mytest("Weyl.jl","W=coxgroup(:E,6)","E₆")
@test mytest("Weyl.jl","R=reflection_subgroup(W,[20,30,19,22])","E₆₍₁₉‚₁‚₉‚₂₀₎=A₄₍₃₁₂₄₎Φ₁²")
@test mytest("Weyl.jl","p=standard_parabolic(W,R)","(1,4,49,12,10)(2,54,62,3,19)(5,17,43,60,9)(6,21,34,36,20)(7,24,45,41,53)(8,65,50,15,22)(11,32,31,27,28)(13,48,46,37,40)(14,51,58,44,29)(16,23,35,33,30)(18,26,39,55,38)(42,57,70,72,56)(47,68,67,63,64)(52,59,71,69,66)")
@test mytest("Weyl.jl","p==standard_parabolic(W,[19,1,9,20])","true")
@test mytest("Weyl.jl","reflection_subgroup(W,[20,30,19,22].^p)","E₆₍₂₄₅₆₎=A₄Φ₁²")
@test mytest("Weyl.jl","R=reflection_subgroup(W,[1,2,3,5,6,35])","E₆₍₁‚₃‚₂‚₃₅‚₅‚₆₎=A₂₍₁₃₎×A₂₍₂₆₎×A₂₍₄₅₎")
@test mytest("Weyl.jl","standard_parabolic(W,R)","nothing")
@test mytest("Weyl.jl","W=coxgroup(:E,8)","E₈")
@test mytest("Weyl.jl","badprimes(W)","3-element Vector{Int64}:\n 2\n 3\n 5")
@test mytest("Weyl.jl","W=coxgroup(:A,2)","A₂")
@test mytest("Weyl.jl","w=longest(W)","(1,5)(2,4)(3,6)")
@test mytest("Weyl.jl","describe_involution(W,w)","1-element Vector{Int64}:\n 3")
@test mytest("Weyl.jl","w==longest(reflection_subgroup(W,[3]))","true")
@test mytest("Weyl.jl","rootdatum(cartan(:A,3))==coxgroup(:A,3)","true")
@test mytest("Weyl.jl","rootdatum(:pgl,3)","pgl₃")
@test mytest("Weyl.jl","rootdatum(:gl,3)==rootdatum(\"gl\",3)","true")
@test mytest("Weyl.jl","rootdatum([1 -1 0;0 1 -1],[1 -1 0;0 1 -1])","A₂Φ₁")
@test mytest("Weyl.jl","torus(3)","Φ₁³")
@test mytest("Weyl.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Weyl.jl","highest_short_root(W)","4")
@test mytest("Weyl.jl","W=coxgroup(:G,2)","G₂")
@test mytest("Weyl.jl","diagram(W)","O⇛ O G₂\n1  2")
@test mytest("Weyl.jl","H=reflection_subgroup(W,[2,6])","G₂₍₂₆₎=Ã₁×A₁")
@test mytest("Weyl.jl","diagram(H)","O Ã₁\n1\nO A₁\n2")
@test mytest("Weyl.jl","elH=word.(Ref(H),elements(H))","4-element Vector{Vector{Int64}}:\n []\n [1]\n [2]\n [1, 2]")
@test mytest("Weyl.jl","elW=word.(Ref(W),elements(H))","4-element Vector{Vector{Int64}}:\n []\n [2]\n [1, 2, 1, 2, 1]\n [1, 2, 1, 2, 1, 2]")
@test mytest("Weyl.jl","map(w->H(w...),elH)==map(w->W(w...),elW)","true")
end
@testset "cheviesupport.jl" begin
@test mytest("cheviesupport.jl","CycPol([3,-5,6,3//7])","3q⁻⁵Φ₆(q-ζ₇³)")
end
@testset "cp.jl" begin
@test mytest("cp.jl","C=CorranPicantinMonoid(3,3)","CorranPicantinMonoid(3,3,3)")
@test mytest("cp.jl","word(C(C.δ))","6-element Vector{Int64}:\n 1\n 3\n 4\n 1\n 3\n 4")
@test mytest("cp.jl","Matrix(C,C.δ)","3×3 Matrix{Cyc{Int64}}:\n ζ₃   0   0\n  0  ζ₃   0\n  0   0  ζ₃")
@test mytest("cp.jl","b=C(1,2,3,4)^3","1.2.341.2.341.2.34")
@test mytest("cp.jl","Matrix(C,b[3])","3×3 Matrix{Cyc{Int64}}:\n 0    0  ζ₃\n 0  ζ₃²   0\n 1    0   0")
end
@testset "dSeries.jl" begin
@test mytest("dSeries.jl","W=rootdatum(\"3D4\")","³D₄")
@test mytest("dSeries.jl","l=cuspidal_data(W,3)","2-element Vector{@NamedTuple{levi::Spets{FiniteCoxeterSubGroup{Perm{Int16},Int64}}, cuspidal::Int64, d::Root1}}:\n (levi = ³D₄, cuspidal = 8, d = ζ₃)\n (levi = ³D₄₍₎=Φ₃², cuspidal = 1, d = ζ₃)")
@test mytest("dSeries.jl","Series(W,l[2]...)","ζ₃-series R^³D₄_{³D₄₍₎=Φ₃²}(λ==Id)  H_G(L,λ)==hecke(G₄,Vector{Mvp{Cyc{Int64}, Int64}}[[ζ₃q², ζ₃, ζ₃q]])\n┌─┬───────────────────────┐\n│ │    γᵩ    φ  ε family #│\n├─┼───────────────────────┤\n│1│  φ₁‚₀ φ₁‚₀  1        1│\n│2│  φ₁‚₆ φ₁‚₄  1        2│\n│3│  φ₂‚₂ φ₁‚₈ -1        5│\n│6│ φ″₁‚₃ φ₂‚₅  1        4│\n│5│ φ′₁‚₃ φ₂‚₃ -1        3│\n│7│  φ₂‚₁ φ₂‚₁ -1        5│\n│4│³D₄[1] φ₃‚₂  1        5│\n└─┴───────────────────────┘")
@test mytest("dSeries.jl","W=complex_reflection_group(4)","G₄")
@test mytest("dSeries.jl","l=cuspidal_data(W,3)","5-element Vector{@NamedTuple{levi::Spets{PRSG{Cyc{Rational{Int64}}, Int16}}, cuspidal::Int64, d::Root1}}:\n (levi = G₄, cuspidal = 3, d = ζ₃)\n (levi = G₄, cuspidal = 6, d = ζ₃)\n (levi = G₄, cuspidal = 7, d = ζ₃)\n (levi = G₄, cuspidal = 10, d = ζ₃)\n (levi = G₄₍₎=Φ₁Φ′₃, cuspidal = 1, d = ζ₃)")
@test mytest("dSeries.jl","Series(W,l[5]...)","ζ₃-series R^G₄_{G₄₍₎=Φ₁Φ′₃}(λ==Id)  W_G(L,λ)==Z₆\n┌─┬────────────────────────────────────┐\n│ │   γᵩ φ(mod 3)  ε parameter family #│\n├─┼────────────────────────────────────┤\n│1│ φ₁‚₀        1  1      ζ₃q²        1│\n│5│ φ₂‚₃       ζ₆  1      -ζ₃q        2│\n│2│ φ₁‚₄       ζ₃ -1        ζ₃        4│\n│8│ Z₃:2       -1 -1     -ζ₃²q        2│\n│9│Z₃:11      ζ₃² -1       ζ₃²        4│\n│4│ φ₂‚₅      ζ₆⁵ -1       -ζ₃        4│\n└─┴────────────────────────────────────┘")
@test mytest("dSeries.jl","cuspidal_data(W,E(3,2))","5-element Vector{@NamedTuple{levi::Spets{PRSG{Cyc{Rational{Int64}}, Int16}}, cuspidal::Int64, d::Root1}}:\n (levi = G₄, cuspidal = 2, d = ζ₃²)\n (levi = G₄, cuspidal = 5, d = ζ₃²)\n (levi = G₄, cuspidal = 7, d = ζ₃²)\n (levi = G₄, cuspidal = 10, d = ζ₃²)\n (levi = G₄₍₎=Φ₁Φ″₃, cuspidal = 1, d = ζ₃²)")
@test mytest("dSeries.jl","ennola(rootdatum(\"3D4\"))","SPerm{Int64}: (3,-4)(5,-5)(6,-6)(7,-8)")
@test mytest("dSeries.jl","ennola(complex_reflection_group(14))","SPerm{Int64}: (2,43,-14,16,41,34)(3,35,40,18,-11,42)(4,-37,25,-17,-26,-36)(5,-6,-79)(7,-7)(8,-74)(9,-73)(10,-52,13,31,-50,29)(12,53,15,32,-51,-30)(19,71,70,21,67,68,20,69,72)(22,-39,27,-33,-28,-38)(23,24,-66,-23,-24,66)(44,46,49,-44,-46,-49)(45,48,47,-45,-48,-47)(54,-63,-55,-57,62,-56)(58,-65,-59,-61,64,-60)(75,-77)(76,-76)(78,-78)")
@test mytest("dSeries.jl","W=complex_reflection_group(4)","G₄")
@test mytest("dSeries.jl","Series(W,3;proper=true)","1-element Vector{Series}:\n ζ₃-series R^G₄_{G₄₍₎=Φ₁Φ′₃}(λ==Id)  W_G(L,λ)==Z₆")
@test mytest("dSeries.jl","s=Series(W,3,1)[1]","ζ₃-series R^G₄_{G₄₍₎=Φ₁Φ′₃}(λ==Id)  W_G(L,λ)==Z₆\n┌─┬────────────────────────────────────┐\n│ │   γᵩ φ(mod 3)  ε parameter family #│\n├─┼────────────────────────────────────┤\n│1│ φ₁‚₀        1  1      ζ₃q²        1│\n│5│ φ₂‚₃       ζ₆  1      -ζ₃q        2│\n│2│ φ₁‚₄       ζ₃ -1        ζ₃        4│\n│8│ Z₃:2       -1 -1     -ζ₃²q        2│\n│9│Z₃:11      ζ₃² -1       ζ₃²        4│\n│4│ φ₂‚₅      ζ₆⁵ -1       -ζ₃        4│\n└─┴────────────────────────────────────┘")
@test mytest("dSeries.jl","s.spets","G₄")
@test mytest("dSeries.jl","s.levi","G₄₍₎=Φ₁Φ′₃")
@test mytest("dSeries.jl","s.cuspidal","1")
@test mytest("dSeries.jl","s.d","Root1: ζ₃")
@test mytest("dSeries.jl","hecke(s)","hecke(G₆‚₁‚₁,Vector{Mvp{Cyc{Int64}, Int64}}[[ζ₃q², -ζ₃q, ζ₃, -ζ₃²q, ζ₃², -ζ₃]])")
@test mytest("dSeries.jl","degree(s)","ζ₃Φ₁Φ₂²Φ″₃Φ₄Φ₆")
@test mytest("dSeries.jl","dSeries.RLG(s)","[G₄]:<φ₁‚₀>-<φ₁‚₄>-<φ₂‚₅>+<φ₂‚₃>-<Z₃:2>-<Z₃:11>")
@test mytest("dSeries.jl","charnumbers(s)","6-element Vector{Int64}:\n 1\n 5\n 2\n 8\n 9\n 4")
@test mytest("dSeries.jl","dSeries.eps(s)","6-element Vector{Int64}:\n  1\n  1\n -1\n -1\n -1\n -1")
@test mytest("dSeries.jl","relative_group(s)","G₆‚₁‚₁")
end
@testset "gendec.jl" begin
@test mytest("gendec.jl","W=rootdatum(:psu,5)","psu₅")
@test mytest("gendec.jl","generic_decomposition_matrix(W,10)","Φ₁₀-decomposition matrix for psu₅\n┌──────┬─────────────────────────┐\n│      │ps 21 ps ps ps 2111 11111│\n├──────┼─────────────────────────┤\n│2.    │ 1  .  .  .  .    .     .│\n│²A₂:2 │ .  1  .  .  .    .     .│\n│11.   │ .  .  1  .  .    .     .│\n│1.1   │ 1  .  .  1  .    .     .│\n│.2    │ .  .  .  .  1    .     .│\n│²A₂:11│ .  1  .  .  .    1     .│\n│.11   │ .  .  .  1  .    .     1│\n└──────┴─────────────────────────┘")
@test mytest("gendec.jl","W=rootdatum(:psu,6)","psu₆")
@test mytest("gendec.jl","L=reflection_subgroup(W,[1,2,4,5])","psu₆₍₁₂₅₄₎=(A₂A₂)₍₁₂₄₃₎Φ₁")
@test mytest("gendec.jl","InducedDecompositionMatrix(L,W,6)","Induced Φ₆-decomposition matrix from psu₆₍₁₂₅₄₎=(A₂A₂)₍₁₂₄₃₎Φ₁ to psu₆\n┌────┬────────┐\n│    │ps ps A₂│\n├────┼────────┤\n│²A₅ │ .  .  .│\n│.3  │ 1  .  .│\n│3.  │ 1  .  .│\n│.21 │ 1  1  .│\n│1.2 │ 2  1  .│\n│21. │ 1  1  .│\n│2.1 │ 2  1  .│\n│.111│ .  1  1│\n│111.│ .  1  1│\n│1.11│ 1  2  1│\n│11.1│ 1  2  1│\n└────┴────────┘")
end
end
